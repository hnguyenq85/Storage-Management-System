/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.google.zxing.WriterException;
import com.stoman.dao.ChiTietKiemKhoDAO;
import com.stoman.dao.HangHoaDAO;
import com.stoman.dao.KhoDAO;
import com.stoman.dao.LuuTruDAO;
import com.stoman.dao.PhieuKiemKhoDAO;
import com.stoman.dao.ProcedureDAO;
import com.stoman.entity.ChiTietKiemKho;
import com.stoman.entity.HangHoa;
import com.stoman.entity.Kho;
import com.stoman.entity.LuuTru;
import com.stoman.entity.PhieuKiemKho;
import com.stoman.utils.Auth;
import com.stoman.utils.DateRenderer;
import com.stoman.utils.DragPanel;
import com.stoman.utils.MsgBox;
import com.stoman.utils.QRCode;
import com.stoman.utils.ExporterReport;
import com.stoman.utils.SpinnerEditor;
import com.stoman.utils.XDate;
import com.stoman.utils.XNumber;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Huy
 */
public class PhieuKiemKhoJDialog extends javax.swing.JDialog {

    /**
     * Creates new form PhieuKiemKhoDialog
     */
    public PhieuKiemKhoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ChiTietPhieuJDialog = new javax.swing.JDialog();
        pnlBackgroundCTP = new javax.swing.JPanel();
        pnlMainCTP = new javax.swing.JTabbedPane();
        pnlDSKiemKho = new javax.swing.JPanel();
        pnlTblCTPhieuKiemKho_main = new javax.swing.JScrollPane();
        tblCTPhieuKiemKho_main = new javax.swing.JTable();
        btnXoaKhoiDS = new javax.swing.JButton();
        pnlDSHangHoa = new javax.swing.JPanel();
        pnlTblHangHoaKho = new javax.swing.JScrollPane();
        tblHangHoaKho = new javax.swing.JTable();
        btnThemVaoDS = new javax.swing.JButton();
        pnlThanhTieuDeCTP = new DragPanel(ChiTietPhieuJDialog);
        lblTieuDeCTP = new javax.swing.JLabel();
        lblThoatCTP = new javax.swing.JLabel();
        QRCodeDialog = new javax.swing.JDialog();
        pnlThanhTieuDeQR = new DragPanel(QRCodeDialog);
        lblTieuDeQR = new javax.swing.JLabel();
        lblThoatQR = new javax.swing.JLabel();
        pnlBackgroundQR = new javax.swing.JPanel();
        lblQRCodeImage = new javax.swing.JLabel();
        pnlBackground = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        pnlChiTietPhieuKiem = new javax.swing.JPanel();
        pnlTblCTPhieuKiemKho_sub = new javax.swing.JScrollPane();
        tblCTPhieuKiemKho_sub = new javax.swing.JTable();
        pnlThongTin = new javax.swing.JPanel();
        lblTrangThai = new javax.swing.JLabel();
        lblKho = new javax.swing.JLabel();
        lblNgayLap = new javax.swing.JLabel();
        lblNgayKiem = new javax.swing.JLabel();
        lblNguoiLap = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        pnlTxtGhiChu = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        chkHoanThanh = new javax.swing.JCheckBox();
        cboKho = new javax.swing.JComboBox<>();
        txtNguoiLap = new javax.swing.JTextField();
        txtNgayLap = new javax.swing.JFormattedTextField();
        txtNgayKiem = new com.toedter.calendar.JDateChooser();
        peparator = new javax.swing.JSeparator();
        pnlTimKiem = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem2 = new javax.swing.JLabel();
        pnlNutDieuHuong = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnChiTiet = new javax.swing.JButton();
        btnXuatMaPhieu = new javax.swing.JButton();
        pnlChucNangMoRong = new javax.swing.JPanel();
        btnXuatFile = new javax.swing.JButton();
        btnInPhieu = new javax.swing.JButton();
        cboTimKiem = new javax.swing.JComboBox<>();
        lblTimKiem = new javax.swing.JLabel();
        pnlDanhSach = new javax.swing.JPanel();
        pnlTblPhieuKiemKho = new javax.swing.JScrollPane();
        tblPhieuKiemKho = new javax.swing.JTable();
        pnlTimKiem1 = new javax.swing.JPanel();
        cboTimKiem1 = new javax.swing.JComboBox<>();
        lblTimKiem1 = new javax.swing.JLabel();
        txtTimKiem1 = new javax.swing.JTextField();
        lblTimKiem3 = new javax.swing.JLabel();
        pnlThanhTieuDe = new DragPanel(this);
        lblTieuDe = new javax.swing.JLabel();
        lblThoat = new javax.swing.JLabel();

        ChiTietPhieuJDialog.setUndecorated(true);

        pnlBackgroundCTP.setBackground(new java.awt.Color(255, 255, 255));
        pnlBackgroundCTP.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 2, 2, new java.awt.Color(0, 153, 204)));
        pnlBackgroundCTP.setLayout(new java.awt.BorderLayout());

        pnlDSKiemKho.setBackground(new java.awt.Color(255, 255, 255));

        tblCTPhieuKiemKho_main.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pnlTblCTPhieuKiemKho_main.setViewportView(tblCTPhieuKiemKho_main);

        btnXoaKhoiDS.setText("Xóa khỏi danh sách");
        btnXoaKhoiDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKhoiDSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDSKiemKhoLayout = new javax.swing.GroupLayout(pnlDSKiemKho);
        pnlDSKiemKho.setLayout(pnlDSKiemKhoLayout);
        pnlDSKiemKhoLayout.setHorizontalGroup(
            pnlDSKiemKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSKiemKhoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlDSKiemKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlTblCTPhieuKiemKho_main)
                    .addGroup(pnlDSKiemKhoLayout.createSequentialGroup()
                        .addGap(0, 439, Short.MAX_VALUE)
                        .addComponent(btnXoaKhoiDS)))
                .addGap(15, 15, 15))
        );
        pnlDSKiemKhoLayout.setVerticalGroup(
            pnlDSKiemKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSKiemKhoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlTblCTPhieuKiemKho_main, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(btnXoaKhoiDS)
                .addGap(15, 15, 15))
        );

        pnlMainCTP.addTab("Danh sách kiểm kho", pnlDSKiemKho);

        pnlDSHangHoa.setOpaque(false);

        tblHangHoaKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pnlTblHangHoaKho.setViewportView(tblHangHoaKho);

        btnThemVaoDS.setText("Thêm vào danh sách");
        btnThemVaoDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemVaoDSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDSHangHoaLayout = new javax.swing.GroupLayout(pnlDSHangHoa);
        pnlDSHangHoa.setLayout(pnlDSHangHoaLayout);
        pnlDSHangHoaLayout.setHorizontalGroup(
            pnlDSHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSHangHoaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlDSHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTblHangHoaKho, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSHangHoaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThemVaoDS)))
                .addGap(15, 15, 15))
        );
        pnlDSHangHoaLayout.setVerticalGroup(
            pnlDSHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSHangHoaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlTblHangHoaKho, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(btnThemVaoDS)
                .addContainerGap())
        );

        pnlMainCTP.addTab("Danh sách hàng hóa trong kho", pnlDSHangHoa);

        pnlBackgroundCTP.add(pnlMainCTP, java.awt.BorderLayout.CENTER);

        ChiTietPhieuJDialog.getContentPane().add(pnlBackgroundCTP, java.awt.BorderLayout.CENTER);

        pnlThanhTieuDeCTP.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDeCTP.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDeCTP.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDeCTP.setText("STOMAN - CHI TIẾT KIỂM KHO");

        lblThoatCTP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoatCTP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoatCTP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatCTPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatCTPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatCTPMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeCTPLayout = new javax.swing.GroupLayout(pnlThanhTieuDeCTP);
        pnlThanhTieuDeCTP.setLayout(pnlThanhTieuDeCTPLayout);
        pnlThanhTieuDeCTPLayout.setHorizontalGroup(
            pnlThanhTieuDeCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeCTPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDeCTP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThoatCTP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeCTPLayout.setVerticalGroup(
            pnlThanhTieuDeCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeCTPLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeCTPLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDeCTP))
                    .addComponent(lblThoatCTP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        ChiTietPhieuJDialog.getContentPane().add(pnlThanhTieuDeCTP, java.awt.BorderLayout.PAGE_START);

        QRCodeDialog.setUndecorated(true);
        QRCodeDialog.setResizable(false);

        pnlThanhTieuDeQR.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDeQR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDeQR.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDeQR.setText("STOMAN - XUẤT MÃ PHIẾU (QR)");

        lblThoatQR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoatQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoatQR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatQRMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatQRMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatQRMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeQRLayout = new javax.swing.GroupLayout(pnlThanhTieuDeQR);
        pnlThanhTieuDeQR.setLayout(pnlThanhTieuDeQRLayout);
        pnlThanhTieuDeQRLayout.setHorizontalGroup(
            pnlThanhTieuDeQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeQRLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDeQR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(lblThoatQR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeQRLayout.setVerticalGroup(
            pnlThanhTieuDeQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeQRLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeQRLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDeQR))
                    .addComponent(lblThoatQR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        QRCodeDialog.getContentPane().add(pnlThanhTieuDeQR, java.awt.BorderLayout.PAGE_START);

        pnlBackgroundQR.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 2, 2, new java.awt.Color(0, 153, 204)));
        pnlBackgroundQR.setPreferredSize(new java.awt.Dimension(300, 300));
        pnlBackgroundQR.setLayout(new java.awt.GridBagLayout());

        lblQRCodeImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        lblQRCodeImage.setPreferredSize(new java.awt.Dimension(200, 200));
        pnlBackgroundQR.add(lblQRCodeImage, new java.awt.GridBagConstraints());

        QRCodeDialog.getContentPane().add(pnlBackgroundQR, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StoMan - Quản lý phiếu kiểm kho");
        setUndecorated(true);
        setResizable(false);

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));
        pnlBackground.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 2, 2, new java.awt.Color(0, 153, 204)));
        pnlBackground.setLayout(new java.awt.BorderLayout());

        pnlChiTietPhieuKiem.setOpaque(false);

        tblCTPhieuKiemKho_sub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCTPhieuKiemKho_sub.setRowHeight(25);
        tblCTPhieuKiemKho_sub.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblCTPhieuKiemKho_sub.getTableHeader().setReorderingAllowed(false);
        pnlTblCTPhieuKiemKho_sub.setViewportView(tblCTPhieuKiemKho_sub);

        pnlThongTin.setOpaque(false);

        lblTrangThai.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTrangThai.setText("Trạng thái");

        lblKho.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblKho.setText("Kho");

        lblNgayLap.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayLap.setText("Ngày lập");

        lblNgayKiem.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayKiem.setText("Ngày kiểm");

        lblNguoiLap.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNguoiLap.setText("Người lập");

        lblGhiChu.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGhiChu.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        pnlTxtGhiChu.setViewportView(txtGhiChu);

        chkHoanThanh.setBackground(new java.awt.Color(255, 255, 255));
        chkHoanThanh.setText("Hoàn thành");
        chkHoanThanh.setOpaque(false);

        cboKho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKhoItemStateChanged(evt);
            }
        });
        cboKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoActionPerformed(evt);
            }
        });

        txtNguoiLap.setEditable(false);

        txtNgayLap.setEditable(false);
        txtNgayLap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        javax.swing.GroupLayout pnlThongTinLayout = new javax.swing.GroupLayout(pnlThongTin);
        pnlThongTin.setLayout(pnlThongTinLayout);
        pnlThongTinLayout.setHorizontalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNgayKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNguoiLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(txtNguoiLap, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(txtNgayKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKho, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTrangThai))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chkHoanThanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboKho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(lblGhiChu)
                .addGap(10, 10, 10)
                .addComponent(pnlTxtGhiChu, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pnlThongTinLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtNgayLap, txtNguoiLap});

        pnlThongTinLayout.setVerticalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKho)
                            .addComponent(lblGhiChu)
                            .addComponent(lblNguoiLap)
                            .addComponent(txtNguoiLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNgayLap)
                            .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrangThai)
                            .addComponent(chkHoanThanh))
                        .addGap(9, 9, 9)
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNgayKiem)
                            .addComponent(txtNgayKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlTxtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pnlTimKiem.setOpaque(false);

        lblTimKiem2.setText("Tìm kiếm");

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTimKiemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblTimKiem2)
                .addGap(10, 10, 10)
                .addComponent(txtTimKiem)
                .addContainerGap())
        );
        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimKiem2)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlNutDieuHuong.setOpaque(false);
        pnlNutDieuHuong.setLayout(new java.awt.GridLayout(1, 0));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-start.png"))); // NOI18N
        btnFirst.setPreferredSize(new java.awt.Dimension(100, 33));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnFirst);

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-left-24.png"))); // NOI18N
        btnPrev.setPreferredSize(new java.awt.Dimension(100, 33));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnPrev);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-right.png"))); // NOI18N
        btnNext.setPreferredSize(new java.awt.Dimension(100, 33));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-end.png"))); // NOI18N
        btnLast.setPreferredSize(new java.awt.Dimension(100, 33));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnLast);

        pnlChucNang.setOpaque(false);
        pnlChucNang.setLayout(new java.awt.GridBagLayout());

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/add-32.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setPreferredSize(new java.awt.Dimension(120, 50));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 28, 0);
        pnlChucNang.add(btnThem, gridBagConstraints);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel-32.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setPreferredSize(new java.awt.Dimension(120, 50));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 28, 0);
        pnlChucNang.add(btnXoa, gridBagConstraints);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/edit-property-32.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setPreferredSize(new java.awt.Dimension(120, 50));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 28, 0);
        pnlChucNang.add(btnSua, gridBagConstraints);

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/new-document-32.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setPreferredSize(new java.awt.Dimension(120, 50));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 28, 0);
        pnlChucNang.add(btnMoi, gridBagConstraints);

        btnChiTiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/more-details-32.png"))); // NOI18N
        btnChiTiet.setText("Chi tiết");
        btnChiTiet.setPreferredSize(new java.awt.Dimension(120, 50));
        btnChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 28, 0);
        pnlChucNang.add(btnChiTiet, gridBagConstraints);

        btnXuatMaPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/qr-code.png"))); // NOI18N
        btnXuatMaPhieu.setText("QR Code");
        btnXuatMaPhieu.setPreferredSize(new java.awt.Dimension(120, 50));
        btnXuatMaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatMaPhieuActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        pnlChucNang.add(btnXuatMaPhieu, gridBagConstraints);

        pnlChucNangMoRong.setOpaque(false);
        pnlChucNangMoRong.setLayout(new java.awt.GridLayout(1, 3));

        btnXuatFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/open-document.png"))); // NOI18N
        btnXuatFile.setText("Xuất file");
        btnXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileActionPerformed(evt);
            }
        });
        pnlChucNangMoRong.add(btnXuatFile);

        btnInPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/print.png"))); // NOI18N
        btnInPhieu.setText("In phiếu");
        btnInPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInPhieuActionPerformed(evt);
            }
        });
        pnlChucNangMoRong.add(btnInPhieu);

        lblTimKiem.setText("theo");

        javax.swing.GroupLayout pnlChiTietPhieuKiemLayout = new javax.swing.GroupLayout(pnlChiTietPhieuKiem);
        pnlChiTietPhieuKiem.setLayout(pnlChiTietPhieuKiemLayout);
        pnlChiTietPhieuKiemLayout.setHorizontalGroup(
            pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChiTietPhieuKiemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlChiTietPhieuKiemLayout.createSequentialGroup()
                        .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(peparator)
                            .addComponent(pnlThongTin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                    .addGroup(pnlChiTietPhieuKiemLayout.createSequentialGroup()
                        .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlChiTietPhieuKiemLayout.createSequentialGroup()
                                .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0)
                                .addComponent(lblTimKiem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlChiTietPhieuKiemLayout.createSequentialGroup()
                                .addComponent(pnlNutDieuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pnlChucNangMoRong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlTblCTPhieuKiemKho_sub))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnlChiTietPhieuKiemLayout.setVerticalGroup(
            pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChiTietPhieuKiemLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(peparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChiTietPhieuKiemLayout.createSequentialGroup()
                        .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTimKiem)))
                        .addGap(10, 10, 10)
                        .addComponent(pnlTblCTPhieuKiemKho_sub, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addGroup(pnlChiTietPhieuKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlChucNangMoRong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlNutDieuHuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        tabs.addTab("Thông tin phiếu kiểm", pnlChiTietPhieuKiem);

        pnlDanhSach.setOpaque(false);

        tblPhieuKiemKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPhieuKiemKho.setRowHeight(25);
        tblPhieuKiemKho.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPhieuKiemKho.getTableHeader().setReorderingAllowed(false);
        tblPhieuKiemKho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuKiemKhoMouseClicked(evt);
            }
        });
        pnlTblPhieuKiemKho.setViewportView(tblPhieuKiemKho);

        pnlTimKiem1.setOpaque(false);

        lblTimKiem1.setText("theo");

        lblTimKiem3.setText("Tìm kiếm");

        javax.swing.GroupLayout pnlTimKiem1Layout = new javax.swing.GroupLayout(pnlTimKiem1);
        pnlTimKiem1.setLayout(pnlTimKiem1Layout);
        pnlTimKiem1Layout.setHorizontalGroup(
            pnlTimKiem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTimKiem1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblTimKiem3)
                .addGap(10, 10, 10)
                .addComponent(txtTimKiem1)
                .addGap(10, 10, 10)
                .addComponent(lblTimKiem1)
                .addGap(10, 10, 10)
                .addComponent(cboTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        pnlTimKiem1Layout.setVerticalGroup(
            pnlTimKiem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiem1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlTimKiem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimKiem3)
                    .addComponent(txtTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem1)
                    .addComponent(cboTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDanhSachLayout = new javax.swing.GroupLayout(pnlDanhSach);
        pnlDanhSach.setLayout(pnlDanhSachLayout);
        pnlDanhSachLayout.setHorizontalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTblPhieuKiemKho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                    .addComponent(pnlTimKiem1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        pnlDanhSachLayout.setVerticalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDanhSachLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pnlTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pnlTblPhieuKiemKho, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        tabs.addTab("Danh sách phiếu kiểm", pnlDanhSach);

        pnlBackground.add(tabs, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlBackground, java.awt.BorderLayout.CENTER);

        pnlThanhTieuDe.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setText("STOMAN - QUẢN LÝ NHẬP XUẤT KHO");

        lblThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeLayout = new javax.swing.GroupLayout(pnlThanhTieuDe);
        pnlThanhTieuDe.setLayout(pnlThanhTieuDeLayout);
        pnlThanhTieuDeLayout.setHorizontalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 591, Short.MAX_VALUE)
                .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeLayout.setVerticalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDe))
                    .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        getContentPane().add(pnlThanhTieuDe, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPhieuKiemKhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuKiemKhoMouseClicked
        if (evt.getClickCount() < 2) {
            return;
        }

        edit();
    }//GEN-LAST:event_tblPhieuKiemKhoMouseClicked

    private void btnChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietActionPerformed
        // TODO add your handling code here:
        this.ChiTietPhieuJDialog.setVisible(true);
    }//GEN-LAST:event_btnChiTietActionPerformed

    private void btnThemVaoDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemVaoDSActionPerformed
        // TODO add your handling code here:
        this.insertCT();
    }//GEN-LAST:event_btnThemVaoDSActionPerformed

    private void btnXoaKhoiDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKhoiDSActionPerformed
        // TODO add your handling code here:
        this.deleteCT();
    }//GEN-LAST:event_btnXoaKhoiDSActionPerformed

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblThoatMouseClicked

    private void lblThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseEntered
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatMouseEntered

    private void lblThoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseExited
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatMouseExited

    private void lblThoatCTPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatCTPMouseClicked
        // TODO add your handling code here:
        ChiTietPhieuJDialog.dispose();
    }//GEN-LAST:event_lblThoatCTPMouseClicked

    private void lblThoatCTPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatCTPMouseEntered
        // TODO add your handling code here:
        lblThoatCTP.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatCTPMouseEntered

    private void lblThoatCTPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatCTPMouseExited
        // TODO add your handling code here:
        lblThoatCTP.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatCTPMouseExited

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.insertPhieu();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.deletePhieu();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.updatePhieu();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
        this.fillToTableHHkho();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void cboKhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKhoItemStateChanged
        // TODO add your handling code here:
        this.fillToTableCTPhieu();
        this.fillToTableHHkho();
    }//GEN-LAST:event_cboKhoItemStateChanged

    private void btnXuatMaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatMaPhieuActionPerformed
        // TODO add your handling code here:
        createQRCode();
    }//GEN-LAST:event_btnXuatMaPhieuActionPerformed

    private void lblThoatQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatQRMouseClicked
        // TODO add your handling code here:
        QRCodeDialog.dispose();
    }//GEN-LAST:event_lblThoatQRMouseClicked

    private void lblThoatQRMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatQRMouseEntered
        // TODO add your handling code here:
        lblThoatQR.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatQRMouseEntered

    private void lblThoatQRMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatQRMouseExited
        // TODO add your handling code here:
        lblThoatQR.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatQRMouseExited

    private void btnXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileActionPerformed
        // TODO add your handling code here:
        exportReportExcel();
    }//GEN-LAST:event_btnXuatFileActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnInPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInPhieuActionPerformed
        // TODO add your handling code here:
        printReport();
    }//GEN-LAST:event_btnInPhieuActionPerformed

    private void cboKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoActionPerformed
        // TODO add your handling code here:
        cboKho.setEnabled(!isUpdate);
    }//GEN-LAST:event_cboKhoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuKiemKhoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuKiemKhoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuKiemKhoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuKiemKhoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PhieuKiemKhoJDialog dialog = new PhieuKiemKhoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ChiTietPhieuJDialog;
    private javax.swing.JDialog QRCodeDialog;
    private javax.swing.JButton btnChiTiet;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnInPhieu;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemVaoDS;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaKhoiDS;
    private javax.swing.JButton btnXuatFile;
    private javax.swing.JButton btnXuatMaPhieu;
    private javax.swing.JComboBox<String> cboKho;
    private javax.swing.JComboBox<String> cboTimKiem;
    private javax.swing.JComboBox<String> cboTimKiem1;
    private javax.swing.JCheckBox chkHoanThanh;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblKho;
    private javax.swing.JLabel lblNgayKiem;
    private javax.swing.JLabel lblNgayLap;
    private javax.swing.JLabel lblNguoiLap;
    private javax.swing.JLabel lblQRCodeImage;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblThoatCTP;
    private javax.swing.JLabel lblThoatQR;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTieuDeCTP;
    private javax.swing.JLabel lblTieuDeQR;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTimKiem1;
    private javax.swing.JLabel lblTimKiem2;
    private javax.swing.JLabel lblTimKiem3;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JSeparator peparator;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlBackgroundCTP;
    private javax.swing.JPanel pnlBackgroundQR;
    private javax.swing.JPanel pnlChiTietPhieuKiem;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlChucNangMoRong;
    private javax.swing.JPanel pnlDSHangHoa;
    private javax.swing.JPanel pnlDSKiemKho;
    private javax.swing.JPanel pnlDanhSach;
    private javax.swing.JTabbedPane pnlMainCTP;
    private javax.swing.JPanel pnlNutDieuHuong;
    private javax.swing.JScrollPane pnlTblCTPhieuKiemKho_main;
    private javax.swing.JScrollPane pnlTblCTPhieuKiemKho_sub;
    private javax.swing.JScrollPane pnlTblHangHoaKho;
    private javax.swing.JScrollPane pnlTblPhieuKiemKho;
    private javax.swing.JPanel pnlThanhTieuDe;
    private javax.swing.JPanel pnlThanhTieuDeCTP;
    private javax.swing.JPanel pnlThanhTieuDeQR;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JPanel pnlTimKiem1;
    private javax.swing.JScrollPane pnlTxtGhiChu;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblCTPhieuKiemKho_main;
    private javax.swing.JTable tblCTPhieuKiemKho_sub;
    private javax.swing.JTable tblHangHoaKho;
    private javax.swing.JTable tblPhieuKiemKho;
    private javax.swing.JTextArea txtGhiChu;
    private com.toedter.calendar.JDateChooser txtNgayKiem;
    private javax.swing.JFormattedTextField txtNgayLap;
    private javax.swing.JTextField txtNguoiLap;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTimKiem1;
    // End of variables declaration//GEN-END:variables

    private KhoDAO kDAO = new KhoDAO();
    private HangHoaDAO hhDAO = new HangHoaDAO();
    private PhieuKiemKhoDAO pkkDAO = new PhieuKiemKhoDAO();
    private ChiTietKiemKhoDAO ctkkDAO = new ChiTietKiemKhoDAO();
    private LuuTruDAO ltDAO = new LuuTruDAO();
    private ProcedureDAO spDAO = new ProcedureDAO();

    private DefaultTableModel modelPhieuKiem;
    private DefaultTableModel modelCTPhieuKiem;
    private DefaultTableModel modelHangHoaKho;

    private ArrayList<Integer> listCT = new ArrayList<Integer>();

    private String numFormat = "#,##0.0";
    private String dateFormat = "dd-MM-yyyy";
    private int rowPhieu = -1;

    private boolean isUpdate = false;

    private void init() {
        this.setLocationRelativeTo(null);
        this.setModal(false);
        this.initDialogOther();

        String[] headerPhieuKiem = {"STT", "Kho", "Ngày kiểm", "Trạng thái", "Mã nhân viên", "Ngày lập", "Mã phiếu"};
        this.modelPhieuKiem = new DefaultTableModel(headerPhieuKiem, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            // Get class để sắp xếp bảng
            @Override
            public Class getColumnClass(int columnIndex) {
                if (modelPhieuKiem.getRowCount() < 1) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };

        String[] headerCTPhieuKiem = {"STT", "Hàng hoá", "Số lượng tồn", "Số lượng thực", "Mã Chi tiết", "Mã lưu trữ"};
        this.modelCTPhieuKiem = new DefaultTableModel(headerCTPhieuKiem, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 3) {
                    return true;
                }
                return false;
            }

            // Get class để sắp xếp bảng
            @Override
            public Class getColumnClass(int columnIndex) {
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };

        String[] headerHangHoaKho = {"STT", "Hàng hoá", "Số lượng tồn", "Lưu trữ"};
        this.modelHangHoaKho = new DefaultTableModel(headerHangHoaKho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            // Get class để sắp xếp bảng
            @Override
            public Class getColumnClass(int columnIndex) {
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };

        this.fillToComboBoxKho();
        this.fillToTablePhieuKiem();
        this.fillToTableHHkho();
        this.clearForm();

        tblPhieuKiemKho.setModel(modelPhieuKiem);
        tblCTPhieuKiemKho_main.setModel(modelCTPhieuKiem);
        tblCTPhieuKiemKho_sub.setModel(modelCTPhieuKiem);
        tblHangHoaKho.setModel(modelHangHoaKho);

        tabs.setSelectedIndex(1);

        this.formatTable();
        this.updateStatus();
    }

    private void initDialogOther() {
        ChiTietPhieuJDialog.pack();
        ChiTietPhieuJDialog.setLocationRelativeTo(null);
        ChiTietPhieuJDialog.setModalityType(ModalityType.APPLICATION_MODAL);
        ChiTietPhieuJDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

        QRCodeDialog.pack();
        QRCodeDialog.setLocationRelativeTo(null);
        QRCodeDialog.setModalityType(ModalityType.APPLICATION_MODAL);
        QRCodeDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
    }

    // Đổ dữ liệu vào ComboBox kho
    private void fillToComboBoxKho() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        try {
            List<Kho> list = kDAO.selectAll();
            for (Kho k : list) {
                model.addElement(k);
            }
            cboKho.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu vào bảng phiếu kiểm
    private void fillToTablePhieuKiem() {
        modelPhieuKiem.setRowCount(0);
        try {
            List<PhieuKiemKho> list = pkkDAO.selectAll();
            int i = 1;
            for (PhieuKiemKho pkk : list) {
                int maLT = ctkkDAO.getOnlyOneMaLT(pkk.getMaKK());
                if (maLT == 0) {
                    continue;
                }
                int maKho = ltDAO.getMaKho(maLT);
                Kho kho = kDAO.selectByID(maKho);
                modelPhieuKiem.addRow(new Object[]{
                    i++,
                    kho,
                    pkk.getNgayKiem(),
                    pkk.isTrangThai() ? "Đã hoàn thành" : "Chưa hoàn thành",
                    pkk.getMaNV(),
                    pkk.getNgayLap(),
                    pkk.getMaKK()
                });
            }
            tblPhieuKiemKho.setModel(modelPhieuKiem);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Nhập dữ liệu vào form phiếu nhập
    private void setFormPhieu(PhieuKiemKho pkk) {
        Kho kho = (Kho) modelPhieuKiem.getValueAt(rowPhieu, 1);

        txtNguoiLap.setText(pkk.getMaNV());
        txtNgayKiem.setDate(pkk.getNgayLap());
        txtNgayLap.setText(XDate.toString(pkk.getNgayLap(), dateFormat + "(hh:MM:ss)"));
        cboKho.getModel().setSelectedItem(kho);
        chkHoanThanh.setSelected(pkk.isTrangThai());
        txtGhiChu.setText(pkk.getGhiChu());

        tblCTPhieuKiemKho_sub.setToolTipText(String.valueOf(pkk.getMaKK()));

        this.fillToTableCTPhieu();
    }

    // Đỗ dữ liệu vào bảng chi tiết
    private void fillToTableCTPhieu() {
        modelCTPhieuKiem.setRowCount(0);
        listCT.clear();
        String maPhieu = tblCTPhieuKiemKho_sub.getToolTipText();
        if (maPhieu == null) {
            return;
        }

        try {
            List<ChiTietKiemKho> list = ctkkDAO.selectByMaPhieu(Integer.valueOf(maPhieu));
            int i = 1;
            for (ChiTietKiemKho ctkk : list) {
                listCT.add(ctkk.getMaLT());
                LuuTru lt = ltDAO.selectByID(ctkk.getMaLT());
                HangHoa hh = hhDAO.selectByID(lt.getMaHH());
                modelCTPhieuKiem.addRow(new Object[]{
                    i++,
                    hh,
                    XNumber.toString(ctkk.getSoLuongTon(), numFormat),
                    XNumber.toString(ctkk.getSoLuongThuc(), numFormat),
                    ctkk.getMaCTKK(),
                    ctkk.getMaLT()
                });
            }
            this.fillToTableHHkho();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đỗ dữ liệu vào bảng hàng hóa trong kho
    private void fillToTableHHkho() {
        modelHangHoaKho.setRowCount(0);
        //String keyword
        int maKho = ((Kho) cboKho.getSelectedItem()).getMaKho();
        try {
            List<LuuTru> list = ltDAO.selectNotInList(maKho, "", 0, this.listCT);
            int i = 1;
            for (LuuTru lt : list) {
                HangHoa hh = hhDAO.selectByID(lt.getMaHH());
                modelHangHoaKho.addRow(new Object[]{
                    i++,
                    hh,
                    lt.getSoLuong(),
                    lt.getMaLT()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Lấy dữ liệu từ form phiếu nhập
    private PhieuKiemKho getFormPhieu() {
        PhieuKiemKho pkk = new PhieuKiemKho();
        pkk.setMaNV(txtNguoiLap.getText());
        pkk.setNgayKiem(txtNgayKiem.getDate());
        pkk.setNgayLap(XDate.toDate(txtNgayLap.getText(), dateFormat + "(hh:MM:ss)"));
        pkk.setTrangThai(chkHoanThanh.isSelected());
        pkk.setGhiChu(txtGhiChu.getText());

        return pkk;
    }

    // Thêm hàng hóa vào bảng Chi tiết
    private void insertCT() {
        int selectRow = tblHangHoaKho.getSelectedRow();
        int malt = (Integer) modelHangHoaKho.getValueAt(tblHangHoaKho.getSelectedRow(), 3);
        modelCTPhieuKiem.addRow(new Object[]{
            tblCTPhieuKiemKho_main.getRowCount() + 1,
            (HangHoa) modelHangHoaKho.getValueAt(selectRow, 1),
            XNumber.toString((Double) modelHangHoaKho.getValueAt(selectRow, 2), numFormat),
            XNumber.toString(0.0, numFormat),
            0,
            malt
        });

        this.listCT.add(malt);
        this.fillToTableHHkho();
    }

    // Xóa hàng hóa khỏi chi tiết
    private ArrayList<ChiTietKiemKho> delCTP = new ArrayList<>();

    private void deleteCT() {
        int delRow = tblCTPhieuKiemKho_main.getSelectedRow();
        ChiTietKiemKho ctkk = this.getFormCTPhieu(delRow);

        if (isUpdate && ctkk.getMaLT() != 0) {
            delCTP.add(ctkk);
            this.listCT.remove(new Integer(ctkk.getMaLT()));
        }

        modelCTPhieuKiem.removeRow(delRow);

        for (int i = 0; i < modelCTPhieuKiem.getRowCount(); i++) {
            modelCTPhieuKiem.setValueAt(i + 1, i, 0);
        }

        this.fillToTableHHkho();
    }

    // Lấy dữ liệu từ form chi tiết phiếu
    private ChiTietKiemKho getFormCTPhieu(int row) {
        ChiTietKiemKho ctkk = new ChiTietKiemKho();

        ctkk.setSoLuongTon(XNumber.toDouble((String) modelCTPhieuKiem.getValueAt(row, 2), numFormat));
        ctkk.setSoLuongThuc(XNumber.toDouble((String) modelCTPhieuKiem.getValueAt(row, 3), numFormat));

        ctkk.setMaCTKK((Integer) modelCTPhieuKiem.getValueAt(row, 4));
        ctkk.setMaLT((Integer) modelCTPhieuKiem.getValueAt(row, 5));

        return ctkk;
    }

    // Nhập phiếu kiểm mới vào hệ thống và cập nhật thông tin hàng hóa
    private void insertPhieu() {
        if (!isValidated()) {
            return;
        }
        PhieuKiemKho pkk = this.getFormPhieu();
        ChiTietKiemKho ctkk;
        pkkDAO.insert(pkk);

        int maKK = pkkDAO.getMaPhieuByNVandCreatedDate(pkk.getMaNV(), pkk.getNgayLap());

        int rows = modelCTPhieuKiem.getRowCount();

        for (int i = 0; i < rows; i++) {
            ctkk = getFormCTPhieu(i);

            spDAO.insertPhieuKiem(ctkk, maKK);
        }

        this.clearForm();
        this.fillToTablePhieuKiem();

        MsgBox.alert(this, "Thêm phiếu kiểm thành công!");
    }

    // Cập nhật phiếu vào hệ thống và cập nhật thông tin hàng hóa
    private void updatePhieu() {
        if (!isValidated()) {
            return;
        }
        PhieuKiemKho pkk = this.getFormPhieu();
        String maKK = tblCTPhieuKiemKho_sub.getToolTipText();

        if (maKK == null) {
            return;
        }

        pkk.setMaKK(Integer.valueOf(maKK));
        pkkDAO.update(pkk);

        ChiTietKiemKho ctkk;
        int rows = modelCTPhieuKiem.getRowCount();
        for (int i = 0; i < rows; i++) {
            ctkk = getFormCTPhieu(i);

            if (ctkk.getMaCTKK() != 0) {
                spDAO.updatePhieuKiem(ctkk);
            } else {
                spDAO.insertPhieuKiem(ctkk, pkk.getMaKK());
            }
        }
        for (ChiTietKiemKho ctpkDel : delCTP) {
            spDAO.deletePhieuKiem(ctpkDel);
        }

        this.fillToTablePhieuKiem();
        this.fillToTableCTPhieu();

        MsgBox.alert(this, "Cập nhật phiếu kiểm thành công!");
    }

    // Xóa phiếu kiểm khỏi hệ thống
    private void deletePhieu() {
        String maKK = tblCTPhieuKiemKho_sub.getToolTipText();

        if (maKK == null) {
            return;
        }

        int rows = modelCTPhieuKiem.getRowCount();
        ChiTietKiemKho ctpk;
        for (ChiTietKiemKho ctpkDel : delCTP) {
            spDAO.deletePhieuKiem(ctpkDel);
        }
        for (int i = 0; i < rows; i++) {
            ctpk = getFormCTPhieu(i);
            if (ctpk.getMaCTKK() != 0) {
                spDAO.deletePhieuKiem(ctpk);
            }
        }

        pkkDAO.delete(Integer.valueOf(maKK));

        this.clearForm();
        this.fillToTablePhieuKiem();

        MsgBox.alert(this, "Xóa phiếu kiểm thành công!");
    }

    // Xóa trắng form
    private void clearForm() {
        txtNguoiLap.setText(null); //Auth.user.getMaNV()
        Date NgayLap = new Date(System.currentTimeMillis());
        txtNgayLap.setText(XDate.toString(NgayLap, dateFormat + "(hh:MM:ss)"));
        txtNgayKiem.setDate(null);
        cboKho.setSelectedIndex(0);
        chkHoanThanh.setSelected(false);
        txtGhiChu.setText(null);
        tblCTPhieuKiemKho_sub.setToolTipText(null);
        this.fillToTableCTPhieu();

        isUpdate = false;

        this.rowPhieu = -1;
    }

    private void formatTable() {
        // cài đặt bộ lọc cho bảng
        tblPhieuKiemKho.getColumnModel().getColumn(2).setCellRenderer(new DateRenderer(dateFormat));
        tblPhieuKiemKho.getColumnModel().getColumn(5).setCellRenderer(new DateRenderer(dateFormat + "(hh:MM:ss)"));

        tblPhieuKiemKho.setAutoCreateRowSorter(true);
        tblCTPhieuKiemKho_main.setAutoCreateRowSorter(true);
        tblCTPhieuKiemKho_sub.setAutoCreateRowSorter(true);
        tblHangHoaKho.setAutoCreateRowSorter(true);

        //giấu cột maKK
        tblPhieuKiemKho.getColumnModel().removeColumn(tblPhieuKiemKho.getColumnModel().getColumn(6));
        tblCTPhieuKiemKho_main.getColumnModel().removeColumn(tblCTPhieuKiemKho_main.getColumnModel().getColumn(5));
        tblCTPhieuKiemKho_main.getColumnModel().removeColumn(tblCTPhieuKiemKho_main.getColumnModel().getColumn(4));
        tblCTPhieuKiemKho_sub.getColumnModel().removeColumn(tblCTPhieuKiemKho_sub.getColumnModel().getColumn(5));
        tblCTPhieuKiemKho_sub.getColumnModel().removeColumn(tblCTPhieuKiemKho_sub.getColumnModel().getColumn(4));
        tblHangHoaKho.getColumnModel().removeColumn(tblCTPhieuKiemKho_sub.getColumnModel().getColumn(3));
        // Chỉnh độ rộng hàng trong bảng
        tblPhieuKiemKho.setRowHeight(25);
        tblCTPhieuKiemKho_main.setRowHeight(25);
        tblCTPhieuKiemKho_sub.setRowHeight(25);

        // Thêm chức năng nhập cho bảng
        tblCTPhieuKiemKho_main.getColumnModel().getColumn(3).setCellEditor(new SpinnerEditor(0.0, 0.0, 10000000.0, 1.0));
        tblCTPhieuKiemKho_sub.getColumnModel().getColumn(3).setCellEditor(new SpinnerEditor(0.0, 0.0, 10000000.0, 1.0));
    }

    private void createQRCode() {
        if (rowPhieu < 0) {
            MsgBox.alert(this, "Chưa chọn chi tiết phiếu!");
        } else {
            int maPhieu = (int) this.modelPhieuKiem.getValueAt(rowPhieu, 6);
            try {
                BufferedImage bi = QRCode.generateQRCodeImage(String.valueOf(maPhieu));
                lblQRCodeImage.setIcon(new ImageIcon(bi));
                QRCodeDialog.setVisible(true);
            } catch (WriterException ex) {
                MsgBox.alert(this, "Lỗi tạo mã QR không thành công!");
                ex.printStackTrace();
            }
        }
    }

    // Xuất file excel
    private final String reportPath = "/com/stoman/reports/InPhieuKiemKho.jrxml";

    private void exportReportExcel() {
        if (rowPhieu < 0) {
            MsgBox.alert(this, "Chưa chọn phiếu!");
            return;
        }

        try {
            int maKK = (int) this.modelPhieuKiem.getValueAt(rowPhieu, 6);

            // Truyền tham số vào báo cáo
            HashMap parameters = new HashMap();
            parameters.put("MAKK", maKK);

            String fileName = "PhieuKiemKhoSo" + maKK;
            ExporterReport.exportFile(fileName, reportPath, parameters);
        } catch (SQLException | JRException | IOException e) {
            MsgBox.alert(this, "Xuất file thất bại!");
            e.printStackTrace();
        }
    }

    // In báo báo
    private void printReport() {
        if (rowPhieu < 0) {
            MsgBox.alert(this, "Chưa chọn phiếu!");
            return;
        }

        try {
            int maKK = (int) this.modelPhieuKiem.getValueAt(rowPhieu, 6);

            // Truyền tham số vào báo cáo
            HashMap parameters = new HashMap();
            parameters.put("MAKK", maKK);

            String fileName = "PhieuKiemKhoSo" + maKK;
            ExporterReport.printReport(fileName, reportPath, parameters);
        } catch (SQLException | JRException e) {
            MsgBox.alert(this, "In phiếu thất bại!");
            e.printStackTrace();
        }
    }

    // Cập nhật giao diện form theo hoạt động của người dùng
    private void updateStatus() {
        // Kiểm tra trạng thái chọn phiếu trên bảng
        boolean edit = (this.rowPhieu >= 0);
        boolean first = (this.rowPhieu == 0);
        boolean last = (this.rowPhieu == tblPhieuKiemKho.getRowCount() - 1);
        if (edit) {
            tblPhieuKiemKho.setRowSelectionInterval(rowPhieu, rowPhieu);
        }
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnChiTiet.setEnabled(edit);
        btnXuatMaPhieu.setEnabled(edit);
        btnXuatFile.setEnabled(edit);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);

        // Kiểm tra dữ liệu trong bảng, chỉ bật bộ sắp xếp khi bảng có dữ liệu
        tblHangHoaKho.setAutoCreateRowSorter(tblHangHoaKho.getRowCount() > 0);
        tblCTPhieuKiemKho_sub.setAutoCreateRowSorter(tblCTPhieuKiemKho_sub.getRowCount() > 0);
        tblCTPhieuKiemKho_main.setAutoCreateRowSorter(tblCTPhieuKiemKho_main.getRowCount() > 0);
        tblPhieuKiemKho.setAutoCreateRowSorter(tblPhieuKiemKho.getRowCount() > 0);

        // Kiểm tra vai trò người dùng, hạn chế quyền thủ kho
        boolean isManager = Auth.isManager();
        btnXoa.setVisible(isManager);

        // Cập nhật trạng thái update phiếu
        cboKho.setEnabled(!isUpdate);

    }

    private boolean isValidated() {
        if (txtNgayKiem.getDate() == null) {
            MsgBox.alert(this, "Chưa nhập ngày thực hiện!");
            txtNgayKiem.requestFocus();
            return false;
        }
        return true;
    }

    private void edit() {
        delCTP.clear();
        rowPhieu = tblPhieuKiemKho.getSelectedRow();
        int maPkk = (Integer) this.modelPhieuKiem.getValueAt(rowPhieu, 6);

        PhieuKiemKho pkk = pkkDAO.selectByID(maPkk);

        this.setFormPhieu(pkk);
        tabs.setSelectedIndex(0);

        isUpdate = true;
        this.updateStatus();
    }
}
