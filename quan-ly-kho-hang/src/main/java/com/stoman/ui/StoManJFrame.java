/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.stoman.dao.KhoDAO;
import com.stoman.dao.LoaiHangHoaDAO;
import com.stoman.dao.ThongKeDAO;
import com.stoman.entity.Kho;
import com.stoman.entity.LoaiHangHoa;
import com.stoman.utils.Auth;
import com.stoman.utils.MsgBox;
import com.stoman.utils.XImages;
import com.stoman.utils.XNumber;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Huy
 */
public class StoManJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StoManJFrame
     */
    public StoManJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar = new javax.swing.JToolBar() {
            @Override
            protected void paintComponent(Graphics g){
                Graphics2D g2 = (Graphics2D)g.create();

                Color startColor = new Color(141, 220, 250);
                Color endColor = new Color(137, 236, 186);

                g2.setPaint(new GradientPaint(0, 0, startColor, 0, getHeight(), endColor));
                g2.fillRect(0, 0, getWidth(), getHeight());

                g2.dispose();
            }
        };
        btnTaiKhoan = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        separator1 = new javax.swing.JToolBar.Separator();
        btnNhapXuat = new javax.swing.JButton();
        btnKiemKho = new javax.swing.JButton();
        btnDoiTac = new javax.swing.JButton();
        separator2 = new javax.swing.JToolBar.Separator();
        cboThongTin = new javax.swing.JButton();
        tabs = new javax.swing.JTabbedPane();
        pnlTongQuan = new javax.swing.JPanel();
        pnlBieuDo = new javax.swing.JPanel();
        pnlThongTin = new javax.swing.JPanel();
        pnlLuongNhap = new javax.swing.JPanel();
        lblLuongNhap = new javax.swing.JLabel();
        lblSoLuongNhap = new javax.swing.JLabel();
        pnlLuongXuat = new javax.swing.JPanel();
        lblLuongXuat = new javax.swing.JLabel();
        lblSoLuongXuat = new javax.swing.JLabel();
        pnlLuongTonKho = new javax.swing.JPanel();
        lblTonKho = new javax.swing.JLabel();
        lblSoLuongTK = new javax.swing.JLabel();
        pnlTonKho = new javax.swing.JPanel();
        lblTblLuuTru = new javax.swing.JScrollPane();
        tblLuuTru = new javax.swing.JTable();
        lblTimKiemLT = new javax.swing.JLabel();
        txtTimKiemLT = new javax.swing.JTextField();
        lblTheoLT = new javax.swing.JLabel();
        cboTimKiemLT = new javax.swing.JComboBox<>();
        lblKhoLT = new javax.swing.JLabel();
        cboKhoLT = new javax.swing.JComboBox();
        lblLoaiHangHoaLT = new javax.swing.JLabel();
        cboLoaiHangHoaLT = new javax.swing.JComboBox();
        separator = new javax.swing.JSeparator();
        pnlTongGiaTri = new javax.swing.JPanel();
        lblTongGiaTri = new javax.swing.JLabel();
        lblSumTongGiaTri = new javax.swing.JLabel();
        pnlTongTonKho = new javax.swing.JPanel();
        lblTonKhoLT = new javax.swing.JLabel();
        lblSoLuongTKLT = new javax.swing.JLabel();
        separator6 = new javax.swing.JSeparator();
        pnlTKNhap = new javax.swing.JPanel();
        lblTblTKnhap = new javax.swing.JScrollPane();
        tblTKnhap = new javax.swing.JTable();
        lblTimKiemNhap = new javax.swing.JLabel();
        txtTimKiemNhap = new javax.swing.JTextField();
        lblTheoNhap = new javax.swing.JLabel();
        cboTheoNhap = new javax.swing.JComboBox<>();
        separator3 = new javax.swing.JSeparator();
        lblKhoNhap = new javax.swing.JLabel();
        cboKhoNhap = new javax.swing.JComboBox();
        lblLoaiHangHoaNhap = new javax.swing.JLabel();
        cboLoaiHangHoaNhap = new javax.swing.JComboBox();
        separator5 = new javax.swing.JSeparator();
        lblTrongNhap = new javax.swing.JLabel();
        lblThangNhap = new javax.swing.JLabel();
        cboThangNhap = new javax.swing.JComboBox();
        lblNamNhap = new javax.swing.JLabel();
        cboNamNhap = new javax.swing.JComboBox();
        separator4 = new javax.swing.JSeparator();
        pnlTongLGNhap = new javax.swing.JPanel();
        lblTongGiaTriNhap = new javax.swing.JLabel();
        lblTongSoGTN = new javax.swing.JLabel();
        pnlTongGTNhap = new javax.swing.JPanel();
        lblTongLuongNhap = new javax.swing.JLabel();
        lblTongSoLN = new javax.swing.JLabel();
        pnlTKxuat = new javax.swing.JPanel();
        lblTblTKxuat = new javax.swing.JScrollPane();
        tblTKxuat = new javax.swing.JTable();
        lblTimKiemXuat = new javax.swing.JLabel();
        txtTimKiemXuat = new javax.swing.JTextField();
        lblTheoXuat = new javax.swing.JLabel();
        cboTheoXuat = new javax.swing.JComboBox<>();
        separator7 = new javax.swing.JSeparator();
        lblKhoXuat = new javax.swing.JLabel();
        cboKhoXuat = new javax.swing.JComboBox();
        lblLoaiHangHoaXuat = new javax.swing.JLabel();
        cboLoaiHangHoaXuat = new javax.swing.JComboBox();
        separator8 = new javax.swing.JSeparator();
        lblTrongXuat = new javax.swing.JLabel();
        lblThangXuat = new javax.swing.JLabel();
        cboThangXuat = new javax.swing.JComboBox();
        lblNamXuat = new javax.swing.JLabel();
        cboNamXuat = new javax.swing.JComboBox();
        separator9 = new javax.swing.JSeparator();
        pnlTongLGNhap1 = new javax.swing.JPanel();
        lblTongGiaTriXuat = new javax.swing.JLabel();
        lblTongSoGTX = new javax.swing.JLabel();
        pnlTongGTXuat = new javax.swing.JPanel();
        lblTongLuongXuat = new javax.swing.JLabel();
        lblTongSoLX = new javax.swing.JLabel();
        pnlTrangThai = new javax.swing.JPanel();
        lblTrangThai = new javax.swing.JLabel();
        lblDongHo = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mniTaiKhoan = new javax.swing.JMenuItem();
        mniDoiMK = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mniThoat = new javax.swing.JMenuItem();
        mnuQuanLy = new javax.swing.JMenu();
        mniHangHoa = new javax.swing.JMenuItem();
        mniDoiTac = new javax.swing.JMenuItem();
        mniKho = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        mniPhieuNhapXuat = new javax.swing.JMenuItem();
        mniPhieuKiemKho = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mniNhanVien = new javax.swing.JMenuItem();
        mnuTroGiup = new javax.swing.JMenu();
        mniGioiThieu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STOMAN - STROGE MANAGER SYSTEM");

        toolBar.setRollover(true);

        btnTaiKhoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/logout.png"))); // NOI18N
        btnTaiKhoan.setText("Đăng xuất");
        btnTaiKhoan.setFocusable(false);
        btnTaiKhoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTaiKhoan.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnTaiKhoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiKhoanActionPerformed(evt);
            }
        });
        toolBar.add(btnTaiKhoan);

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setFocusable(false);
        btnThoat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThoat.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnThoat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        toolBar.add(btnThoat);
        toolBar.add(separator1);

        btnNhapXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/up-down-arrow.png"))); // NOI18N
        btnNhapXuat.setText("Nhập/Xuất");
        btnNhapXuat.setFocusable(false);
        btnNhapXuat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNhapXuat.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnNhapXuat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNhapXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapXuatActionPerformed(evt);
            }
        });
        toolBar.add(btnNhapXuat);

        btnKiemKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/warehouse.png"))); // NOI18N
        btnKiemKho.setText("Kiểm kho");
        btnKiemKho.setFocusable(false);
        btnKiemKho.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKiemKho.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnKiemKho.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKiemKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiemKhoActionPerformed(evt);
            }
        });
        toolBar.add(btnKiemKho);

        btnDoiTac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/handshake.png"))); // NOI18N
        btnDoiTac.setText("Quản lý đối tác");
        btnDoiTac.setFocusable(false);
        btnDoiTac.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDoiTac.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnDoiTac.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDoiTac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiTacActionPerformed(evt);
            }
        });
        toolBar.add(btnDoiTac);
        toolBar.add(separator2);

        cboThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/info.png"))); // NOI18N
        cboThongTin.setText("Thông tin");
        cboThongTin.setFocusable(false);
        cboThongTin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cboThongTin.setMargin(new java.awt.Insets(2, 10, 2, 10));
        cboThongTin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cboThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThongTinActionPerformed(evt);
            }
        });
        toolBar.add(cboThongTin);

        getContentPane().add(toolBar, java.awt.BorderLayout.PAGE_START);

        tabs.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        pnlTongQuan.setBackground(new java.awt.Color(255, 255, 255));

        pnlBieuDo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlBieuDo.setLayout(new java.awt.BorderLayout());

        pnlThongTin.setLayout(new java.awt.GridLayout(0, 1));

        pnlLuongNhap.setBackground(new java.awt.Color(255, 102, 102));
        pnlLuongNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlLuongNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblLuongNhap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLuongNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongNhap.setText("Lượng nhập");
        pnlLuongNhap.add(lblLuongNhap);

        lblSoLuongNhap.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblSoLuongNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongNhap.setText("0");
        pnlLuongNhap.add(lblSoLuongNhap);

        pnlThongTin.add(pnlLuongNhap);

        pnlLuongXuat.setBackground(new java.awt.Color(153, 153, 255));
        pnlLuongXuat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlLuongXuat.setLayout(new java.awt.GridLayout(0, 1));

        lblLuongXuat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLuongXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblLuongXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongXuat.setText("Lượng xuất");
        pnlLuongXuat.add(lblLuongXuat);

        lblSoLuongXuat.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblSoLuongXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongXuat.setText("0");
        pnlLuongXuat.add(lblSoLuongXuat);

        pnlThongTin.add(pnlLuongXuat);

        pnlLuongTonKho.setBackground(new java.awt.Color(0, 204, 102));
        pnlLuongTonKho.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlLuongTonKho.setLayout(new java.awt.GridLayout(0, 1));

        lblTonKho.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTonKho.setForeground(new java.awt.Color(255, 255, 255));
        lblTonKho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTonKho.setText("Tồn kho");
        pnlLuongTonKho.add(lblTonKho);

        lblSoLuongTK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblSoLuongTK.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongTK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongTK.setText("0");
        pnlLuongTonKho.add(lblSoLuongTK);

        pnlThongTin.add(pnlLuongTonKho);

        javax.swing.GroupLayout pnlTongQuanLayout = new javax.swing.GroupLayout(pnlTongQuan);
        pnlTongQuan.setLayout(pnlTongQuanLayout);
        pnlTongQuanLayout.setHorizontalGroup(
            pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBieuDo, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlTongQuanLayout.setVerticalGroup(
            pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(pnlBieuDo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabs.addTab("Tổng quan", pnlTongQuan);

        tblLuuTru.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        lblTblLuuTru.setViewportView(tblLuuTru);

        lblTimKiemLT.setText("Tìm kiếm");

        lblTheoLT.setText("theo");

        lblKhoLT.setText("Kho");

        cboKhoLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoLTActionPerformed(evt);
            }
        });

        lblLoaiHangHoaLT.setText("Loại Hàng Hóa");

        cboLoaiHangHoaLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaLTActionPerformed(evt);
            }
        });

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        pnlTongGiaTri.setBackground(new java.awt.Color(0, 204, 102));
        pnlTongGiaTri.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongGiaTri.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTri.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTongGiaTri.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTri.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTri.setText("Tổng Giá Trị");
        pnlTongGiaTri.add(lblTongGiaTri);

        lblSumTongGiaTri.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblSumTongGiaTri.setForeground(new java.awt.Color(255, 255, 255));
        lblSumTongGiaTri.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSumTongGiaTri.setText("0");
        pnlTongGiaTri.add(lblSumTongGiaTri);

        pnlTongTonKho.setBackground(new java.awt.Color(0, 204, 102));
        pnlTongTonKho.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongTonKho.setLayout(new java.awt.GridLayout(0, 1));

        lblTonKhoLT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTonKhoLT.setForeground(new java.awt.Color(255, 255, 255));
        lblTonKhoLT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTonKhoLT.setText("Tổng tồn kho");
        pnlTongTonKho.add(lblTonKhoLT);

        lblSoLuongTKLT.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblSoLuongTKLT.setForeground(new java.awt.Color(255, 255, 255));
        lblSoLuongTKLT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongTKLT.setText("0");
        pnlTongTonKho.add(lblSoLuongTKLT);

        javax.swing.GroupLayout pnlTonKhoLayout = new javax.swing.GroupLayout(pnlTonKho);
        pnlTonKho.setLayout(pnlTonKhoLayout);
        pnlTonKhoLayout.setHorizontalGroup(
            pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTonKhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTonKhoLayout.createSequentialGroup()
                        .addComponent(lblTimKiemLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTimKiemLT, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(pnlTonKhoLayout.createSequentialGroup()
                        .addComponent(lblTblLuuTru, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTongGiaTri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTongTonKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLoaiHangHoaLT)
                    .addComponent(lblKhoLT)
                    .addComponent(cboKhoLT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboLoaiHangHoaLT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator6, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlTonKhoLayout.setVerticalGroup(
            pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTonKhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTonKhoLayout.createSequentialGroup()
                        .addGroup(pnlTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTimKiemLT)
                            .addComponent(txtTimKiemLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTheoLT)
                            .addComponent(cboTimKiemLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTblLuuTru))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTonKhoLayout.createSequentialGroup()
                        .addComponent(lblKhoLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboKhoLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLoaiHangHoaLT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLoaiHangHoaLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator6, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTongGiaTri, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTongTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separator, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        tabs.addTab("Hàng tồn kho", pnlTonKho);

        tblTKnhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        lblTblTKnhap.setViewportView(tblTKnhap);

        lblTimKiemNhap.setText("Tìm kiếm");

        lblTheoNhap.setText("theo");

        separator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblKhoNhap.setText("Kho");

        cboKhoNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoNhapActionPerformed(evt);
            }
        });

        lblLoaiHangHoaNhap.setText("Loại Hàng Hóa");

        cboLoaiHangHoaNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaNhapActionPerformed(evt);
            }
        });

        lblTrongNhap.setText("Trong");

        lblThangNhap.setText("Tháng");

        cboThangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangNhapActionPerformed(evt);
            }
        });

        lblNamNhap.setText("Năm");

        cboNamNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamNhapActionPerformed(evt);
            }
        });

        pnlTongLGNhap.setBackground(new java.awt.Color(255, 102, 102));
        pnlTongLGNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongLGNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriNhap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTongGiaTriNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriNhap.setText("Tổng Giá Trị Nhập");
        pnlTongLGNhap.add(lblTongGiaTriNhap);

        lblTongSoGTN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTongSoGTN.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTN.setText("0");
        pnlTongLGNhap.add(lblTongSoGTN);

        pnlTongGTNhap.setBackground(new java.awt.Color(255, 102, 102));
        pnlTongGTNhap.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongGTNhap.setLayout(new java.awt.GridLayout(0, 1));

        lblTongLuongNhap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTongLuongNhap.setForeground(new java.awt.Color(255, 255, 255));
        lblTongLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongLuongNhap.setText("Tổng lượng Nhập");
        pnlTongGTNhap.add(lblTongLuongNhap);

        lblTongSoLN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTongSoLN.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoLN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoLN.setText("0");
        pnlTongGTNhap.add(lblTongSoLN);

        javax.swing.GroupLayout pnlTKNhapLayout = new javax.swing.GroupLayout(pnlTKNhap);
        pnlTKNhap.setLayout(pnlTKNhapLayout);
        pnlTKNhapLayout.setHorizontalGroup(
            pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTKNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTKNhapLayout.createSequentialGroup()
                        .addComponent(lblTimKiemNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTheoNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTblTKnhap, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboKhoNhap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboLoaiHangHoaNhap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTongGTNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLoaiHangHoaNhap)
                    .addComponent(lblKhoNhap)
                    .addComponent(lblTrongNhap)
                    .addGroup(pnlTKNhapLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblThangNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboThangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(lblNamNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboNamNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlTongLGNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator5)
                    .addComponent(separator4, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlTKNhapLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboNamNhap, cboThangNhap});

        pnlTKNhapLayout.setVerticalGroup(
            pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTKNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTKNhapLayout.createSequentialGroup()
                        .addGroup(pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTimKiemNhap)
                            .addComponent(txtTimKiemNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTheoNhap)
                            .addComponent(cboTheoNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTblTKnhap))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTKNhapLayout.createSequentialGroup()
                        .addComponent(lblKhoNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboKhoNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLoaiHangHoaNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLoaiHangHoaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTrongNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTKNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblThangNhap)
                            .addComponent(cboThangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNamNhap)
                            .addComponent(cboNamNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTongLGNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTongGTNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separator3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        tabs.addTab("Thống kê nhập", pnlTKNhap);

        tblTKxuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        lblTblTKxuat.setViewportView(tblTKxuat);

        lblTimKiemXuat.setText("Tìm kiếm");

        lblTheoXuat.setText("theo");

        separator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblKhoXuat.setText("Kho");

        cboKhoXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoXuatActionPerformed(evt);
            }
        });

        lblLoaiHangHoaXuat.setText("Loại Hàng Hóa");

        cboLoaiHangHoaXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHangHoaXuatActionPerformed(evt);
            }
        });

        lblTrongXuat.setText("Trong");

        lblThangXuat.setText("Tháng");

        cboThangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangXuatActionPerformed(evt);
            }
        });

        lblNamXuat.setText("Năm");

        cboNamXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamXuatActionPerformed(evt);
            }
        });

        pnlTongLGNhap1.setBackground(new java.awt.Color(153, 153, 255));
        pnlTongLGNhap1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongLGNhap1.setLayout(new java.awt.GridLayout(0, 1));

        lblTongGiaTriXuat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTongGiaTriXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGiaTriXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongGiaTriXuat.setText("Tổng Giá Trị Xuất");
        pnlTongLGNhap1.add(lblTongGiaTriXuat);

        lblTongSoGTX.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTongSoGTX.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoGTX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoGTX.setText("0");
        pnlTongLGNhap1.add(lblTongSoGTX);

        pnlTongGTXuat.setBackground(new java.awt.Color(153, 153, 255));
        pnlTongGTXuat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTongGTXuat.setLayout(new java.awt.GridLayout(0, 1));

        lblTongLuongXuat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTongLuongXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblTongLuongXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongLuongXuat.setText("Tổng lượng Xuất");
        pnlTongGTXuat.add(lblTongLuongXuat);

        lblTongSoLX.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTongSoLX.setForeground(new java.awt.Color(255, 255, 255));
        lblTongSoLX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongSoLX.setText("0");
        pnlTongGTXuat.add(lblTongSoLX);

        javax.swing.GroupLayout pnlTKxuatLayout = new javax.swing.GroupLayout(pnlTKxuat);
        pnlTKxuat.setLayout(pnlTKxuatLayout);
        pnlTKxuatLayout.setHorizontalGroup(
            pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTKxuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTKxuatLayout.createSequentialGroup()
                        .addComponent(lblTimKiemXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTheoXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTheoXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTblTKxuat, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLoaiHangHoaXuat)
                    .addComponent(lblKhoXuat)
                    .addComponent(lblTrongXuat)
                    .addGroup(pnlTKxuatLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblThangXuat)
                        .addGap(12, 12, 12)
                        .addComponent(cboThangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNamXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboNamXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboKhoXuat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboLoaiHangHoaXuat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator8)
                    .addComponent(pnlTongLGNhap1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator9)
                    .addComponent(pnlTongGTXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlTKxuatLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboNamXuat, cboThangXuat});

        pnlTKxuatLayout.setVerticalGroup(
            pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTKxuatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTKxuatLayout.createSequentialGroup()
                        .addGroup(pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTimKiemXuat)
                            .addComponent(txtTimKiemXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTheoXuat)
                            .addComponent(cboTheoXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTblTKxuat))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTKxuatLayout.createSequentialGroup()
                        .addComponent(lblKhoXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboKhoXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLoaiHangHoaXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLoaiHangHoaXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator8, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTrongXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTKxuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblThangXuat)
                            .addComponent(cboThangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNamXuat)
                            .addComponent(cboNamXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator9, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTongLGNhap1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTongGTXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separator7, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        tabs.addTab("Thống kê xuất", pnlTKxuat);

        getContentPane().add(tabs, java.awt.BorderLayout.CENTER);

        pnlTrangThai.setBackground(new java.awt.Color(255, 255, 255));
        pnlTrangThai.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, new java.awt.Color(102, 102, 102)));
        pnlTrangThai.setLayout(new java.awt.BorderLayout());

        lblTrangThai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/info-squared.png"))); // NOI18N
        lblTrangThai.setText("Hệ thống quản lý kho hàng");
        lblTrangThai.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        pnlTrangThai.add(lblTrangThai, java.awt.BorderLayout.CENTER);

        lblDongHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/alarm-clock.png"))); // NOI18N
        lblDongHo.setText("00:00:00 AM");
        lblDongHo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 10));
        pnlTrangThai.add(lblDongHo, java.awt.BorderLayout.EAST);

        getContentPane().add(pnlTrangThai, java.awt.BorderLayout.PAGE_END);

        menuBar.setOpaque(false);

        mnuHeThong.setText("Hệ thống");

        mniTaiKhoan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniTaiKhoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/logout.png"))); // NOI18N
        mniTaiKhoan.setText("Đăng xuất");
        mniTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTaiKhoanActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniTaiKhoan);

        mniDoiMK.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDoiMK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/password-reset.png"))); // NOI18N
        mniDoiMK.setText("Đổi mật khẩu");
        mniDoiMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoiMKActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDoiMK);
        mnuHeThong.add(jSeparator4);

        mniThoat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close.png"))); // NOI18N
        mniThoat.setText("Thoát");
        mniThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThoatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniThoat);

        menuBar.add(mnuHeThong);

        mnuQuanLy.setText("Quản lý");

        mniHangHoa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniHangHoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cardboard-box.png"))); // NOI18N
        mniHangHoa.setText("Hàng hoá");
        mniHangHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHangHoaActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniHangHoa);

        mniDoiTac.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDoiTac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/handshake.png"))); // NOI18N
        mniDoiTac.setText("Đối tác");
        mniDoiTac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoiTacActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniDoiTac);

        mniKho.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/warehouse.png"))); // NOI18N
        mniKho.setText("Kho");
        mniKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKhoActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniKho);
        mnuQuanLy.add(jSeparator6);

        mniPhieuNhapXuat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniPhieuNhapXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/compare.png"))); // NOI18N
        mniPhieuNhapXuat.setText("Phiếu nhập xuất");
        mniPhieuNhapXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPhieuNhapXuatActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniPhieuNhapXuat);

        mniPhieuKiemKho.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniPhieuKiemKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/attendance.png"))); // NOI18N
        mniPhieuKiemKho.setText("Phiếu kiểm kho");
        mniPhieuKiemKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPhieuKiemKhoActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniPhieuKiemKho);
        mnuQuanLy.add(jSeparator5);

        mniNhanVien.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/name-tag.png"))); // NOI18N
        mniNhanVien.setText("Nhân viên");
        mniNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNhanVienActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniNhanVien);

        menuBar.add(mnuQuanLy);

        mnuTroGiup.setText("Trợ giúp");

        mniGioiThieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/info.png"))); // NOI18N
        mniGioiThieu.setText("Giới thiệu phần mềm");
        mniGioiThieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniGioiThieuActionPerformed(evt);
            }
        });
        mnuTroGiup.add(mniGioiThieu);

        menuBar.add(mnuTroGiup);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTaiKhoanActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_mniTaiKhoanActionPerformed

    private void mniDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoiMKActionPerformed
        // TODO add your handling code here:
        openDoiMatKhauDialog();
    }//GEN-LAST:event_mniDoiMKActionPerformed

    private void mniThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThoatActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_mniThoatActionPerformed

    private void mniHangHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHangHoaActionPerformed
        // TODO add your handling code here:
        openHangHoaDialog();
    }//GEN-LAST:event_mniHangHoaActionPerformed

    private void mniDoiTacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoiTacActionPerformed
        // TODO add your handling code here:
        openDoiTacDialog();
    }//GEN-LAST:event_mniDoiTacActionPerformed

    private void mniKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKhoActionPerformed
        // TODO add your handling code here:
        openKhoDialog();
    }//GEN-LAST:event_mniKhoActionPerformed

    private void mniPhieuNhapXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPhieuNhapXuatActionPerformed
        // TODO add your handling code here:
        openNhapXuatKhoDialog();
    }//GEN-LAST:event_mniPhieuNhapXuatActionPerformed

    private void mniPhieuKiemKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPhieuKiemKhoActionPerformed
        // TODO add your handling code here:
        openKiemKhoDialog();
    }//GEN-LAST:event_mniPhieuKiemKhoActionPerformed

    private void mniNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNhanVienActionPerformed
        // TODO add your handling code here:
        openNhanVienDialog();
    }//GEN-LAST:event_mniNhanVienActionPerformed

    private void mniGioiThieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniGioiThieuActionPerformed
        // TODO add your handling code here:
        openGioiThieuDialog();
    }//GEN-LAST:event_mniGioiThieuActionPerformed

    private void cboThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThongTinActionPerformed
        // TODO add your handling code here:
        openGioiThieuDialog();
    }//GEN-LAST:event_cboThongTinActionPerformed

    private void btnDoiTacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiTacActionPerformed
        // TODO add your handling code here:
        openDoiTacDialog();
    }//GEN-LAST:event_btnDoiTacActionPerformed

    private void btnKiemKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiemKhoActionPerformed
        // TODO add your handling code here:
        openKiemKhoDialog();
    }//GEN-LAST:event_btnKiemKhoActionPerformed

    private void btnNhapXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapXuatActionPerformed
        // TODO add your handling code here:
        openNhapXuatKhoDialog();
    }//GEN-LAST:event_btnNhapXuatActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiKhoanActionPerformed
        // TODO add your handling code here:
        logout();
        this.loginStatus();
    }//GEN-LAST:event_btnTaiKhoanActionPerformed

    private void cboKhoLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoLTActionPerformed
        // TODO add your handling code here:
        this.fillToTableLuuTru();
    }//GEN-LAST:event_cboKhoLTActionPerformed

    private void cboLoaiHangHoaLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaLTActionPerformed
        // TODO add your handling code here:
        this.fillToTableLuuTru();
    }//GEN-LAST:event_cboLoaiHangHoaLTActionPerformed

    private void cboKhoNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
    }//GEN-LAST:event_cboKhoNhapActionPerformed

    private void cboLoaiHangHoaNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
    }//GEN-LAST:event_cboLoaiHangHoaNhapActionPerformed

    private void cboNamNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamNhapActionPerformed
        // TODO add your handling code here:
        this.fillToComboBoxThangNhap();
        this.fillToTableNhap();
    }//GEN-LAST:event_cboNamNhapActionPerformed

    private void cboThangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangNhapActionPerformed
        // TODO add your handling code here:
        this.fillToTableNhap();
    }//GEN-LAST:event_cboThangNhapActionPerformed

    private void cboKhoXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
    }//GEN-LAST:event_cboKhoXuatActionPerformed

    private void cboLoaiHangHoaXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHangHoaXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
    }//GEN-LAST:event_cboLoaiHangHoaXuatActionPerformed

    private void cboThangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangXuatActionPerformed
        // TODO add your handling code here:
        this.fillToTableXuat();
    }//GEN-LAST:event_cboThangXuatActionPerformed

    private void cboNamXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamXuatActionPerformed
        // TODO add your handling code here:
        this.fillToComboBoxThangXuat();
        this.fillToTableXuat();
    }//GEN-LAST:event_cboNamXuatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoManJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoManJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoiTac;
    private javax.swing.JButton btnKiemKho;
    private javax.swing.JButton btnNhapXuat;
    private javax.swing.JButton btnTaiKhoan;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox cboKhoLT;
    private javax.swing.JComboBox cboKhoNhap;
    private javax.swing.JComboBox cboKhoXuat;
    private javax.swing.JComboBox cboLoaiHangHoaLT;
    private javax.swing.JComboBox cboLoaiHangHoaNhap;
    private javax.swing.JComboBox cboLoaiHangHoaXuat;
    private javax.swing.JComboBox cboNamNhap;
    private javax.swing.JComboBox cboNamXuat;
    private javax.swing.JComboBox cboThangNhap;
    private javax.swing.JComboBox cboThangXuat;
    private javax.swing.JComboBox<String> cboTheoNhap;
    private javax.swing.JComboBox<String> cboTheoXuat;
    private javax.swing.JButton cboThongTin;
    private javax.swing.JComboBox<String> cboTimKiemLT;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblKhoLT;
    private javax.swing.JLabel lblKhoNhap;
    private javax.swing.JLabel lblKhoXuat;
    private javax.swing.JLabel lblLoaiHangHoaLT;
    private javax.swing.JLabel lblLoaiHangHoaNhap;
    private javax.swing.JLabel lblLoaiHangHoaXuat;
    private javax.swing.JLabel lblLuongNhap;
    private javax.swing.JLabel lblLuongXuat;
    private javax.swing.JLabel lblNamNhap;
    private javax.swing.JLabel lblNamXuat;
    private javax.swing.JLabel lblSoLuongNhap;
    private javax.swing.JLabel lblSoLuongTK;
    private javax.swing.JLabel lblSoLuongTKLT;
    private javax.swing.JLabel lblSoLuongXuat;
    private javax.swing.JLabel lblSumTongGiaTri;
    private javax.swing.JScrollPane lblTblLuuTru;
    private javax.swing.JScrollPane lblTblTKnhap;
    private javax.swing.JScrollPane lblTblTKxuat;
    private javax.swing.JLabel lblThangNhap;
    private javax.swing.JLabel lblThangXuat;
    private javax.swing.JLabel lblTheoLT;
    private javax.swing.JLabel lblTheoNhap;
    private javax.swing.JLabel lblTheoXuat;
    private javax.swing.JLabel lblTimKiemLT;
    private javax.swing.JLabel lblTimKiemNhap;
    private javax.swing.JLabel lblTimKiemXuat;
    private javax.swing.JLabel lblTonKho;
    private javax.swing.JLabel lblTonKhoLT;
    private javax.swing.JLabel lblTongGiaTri;
    private javax.swing.JLabel lblTongGiaTriNhap;
    private javax.swing.JLabel lblTongGiaTriXuat;
    private javax.swing.JLabel lblTongLuongNhap;
    private javax.swing.JLabel lblTongLuongXuat;
    private javax.swing.JLabel lblTongSoGTN;
    private javax.swing.JLabel lblTongSoGTX;
    private javax.swing.JLabel lblTongSoLN;
    private javax.swing.JLabel lblTongSoLX;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JLabel lblTrongNhap;
    private javax.swing.JLabel lblTrongXuat;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mniDoiMK;
    private javax.swing.JMenuItem mniDoiTac;
    private javax.swing.JMenuItem mniGioiThieu;
    private javax.swing.JMenuItem mniHangHoa;
    private javax.swing.JMenuItem mniKho;
    private javax.swing.JMenuItem mniNhanVien;
    private javax.swing.JMenuItem mniPhieuKiemKho;
    private javax.swing.JMenuItem mniPhieuNhapXuat;
    private javax.swing.JMenuItem mniTaiKhoan;
    private javax.swing.JMenuItem mniThoat;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JMenu mnuTroGiup;
    private javax.swing.JPanel pnlBieuDo;
    private javax.swing.JPanel pnlLuongNhap;
    private javax.swing.JPanel pnlLuongTonKho;
    private javax.swing.JPanel pnlLuongXuat;
    private javax.swing.JPanel pnlTKNhap;
    private javax.swing.JPanel pnlTKxuat;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JPanel pnlTonKho;
    private javax.swing.JPanel pnlTongGTNhap;
    private javax.swing.JPanel pnlTongGTXuat;
    private javax.swing.JPanel pnlTongGiaTri;
    private javax.swing.JPanel pnlTongLGNhap;
    private javax.swing.JPanel pnlTongLGNhap1;
    private javax.swing.JPanel pnlTongQuan;
    private javax.swing.JPanel pnlTongTonKho;
    private javax.swing.JPanel pnlTrangThai;
    private javax.swing.JSeparator separator;
    private javax.swing.JToolBar.Separator separator1;
    private javax.swing.JToolBar.Separator separator2;
    private javax.swing.JSeparator separator3;
    private javax.swing.JSeparator separator4;
    private javax.swing.JSeparator separator5;
    private javax.swing.JSeparator separator6;
    private javax.swing.JSeparator separator7;
    private javax.swing.JSeparator separator8;
    private javax.swing.JSeparator separator9;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblLuuTru;
    private javax.swing.JTable tblTKnhap;
    private javax.swing.JTable tblTKxuat;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JTextField txtTimKiemLT;
    private javax.swing.JTextField txtTimKiemNhap;
    private javax.swing.JTextField txtTimKiemXuat;
    // End of variables declaration//GEN-END:variables

    private KhoDAO kDAO = new KhoDAO();
    private ThongKeDAO tkDAO = new ThongKeDAO();
    private LoaiHangHoaDAO lhhDAO = new LoaiHangHoaDAO();
    
    private DefaultTableModel tblLuuTruModel;
    private DefaultTableModel tblNhapModel;
    private DefaultTableModel tblXuatModel;
    
    private final String numFormat = "#,##0.0";
    
    private void init() {
        this.setIconImage(XImages.getAppIcon());
        this.setLocationRelativeTo(null);

        new ChaoJDialog(this, true).setVisible(true);
        new DangNhapJDialog(this, true).setVisible(true);

        this.clock();
        this.chart();
        this.formatTable();
        
        this.fillToComboBoxKho();
        this.fillToComboBoxLoaiHangHoa();
        this.fillToComboBoxNamNhap();
        this.fillToComboBoxThangNhap();
        this.fillToComboBoxNamXuat();
        this.fillToComboBoxThangXuat();
        
        this.fillToTableLuuTru();
        this.fillToTableNhap();
        this.fillToTableXuat();

    }
 
     // Tạo tiêu đề và định dạng bảng
    private void formatTable() {
        String headerLT[] = {"STT", "Hàng Hóa", "Số lượng tồn"};
        tblLuuTruModel = new DefaultTableModel(headerLT, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblLuuTru.setModel(tblLuuTruModel);
        
        
        String headerNhap[] = {"STT", "Hàng Hóa", "Số lượng nhập", "Nhập TB", "Giá nhập TB", "Tổng giá trị"};
        tblNhapModel = new DefaultTableModel(headerNhap, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTKnhap.setModel(tblNhapModel);
        
        String headerXuat[] = {"STT", "Hàng Hóa", "Số lượng xuất", "Nhập TB", "Giá nhập TB", "Tổng giá trị"};
        tblXuatModel = new DefaultTableModel(headerXuat, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblTKxuat.setModel(tblXuatModel);

        // Điều chỉnh size column
//        tblLuuTru.getColumnModel().getColumn(0).setPreferredWidth(22);
//        tblLuuTru.getColumnModel().getColumn(1).setPreferredWidth(130);
//        tblLuuTru.getColumnModel().getColumn(2).setPreferredWidth(107);
    }
    
    // Tự động điều chỉnh nút đăng nhập/đăng xuất
    private void loginStatus() {
        if(!Auth.isLogin()) {
            mniTaiKhoan.setText("Đăng nhập");
            mniTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/login.png")));
            btnTaiKhoan.setText("Đăng nhập");
            btnTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/login.png")));
        } else {
            mniTaiKhoan.setText("Đăng xuất");
            mniTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/logout.png")));
            btnTaiKhoan.setText("Đăng xuất");
            btnTaiKhoan.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/logout.png")));
        }
    }
    
    // Đồng hồ
    private void clock() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm:ss a");
        lblDongHo.setText(LocalTime.now().format(formatter));
        new Timer(1000, (e) -> {
            lblDongHo.setText(LocalTime.now().format(formatter));
        }).start();
    }

    // Chart demo
    private void chart() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        double[] luongNhap = {1000, 1200, 950, 1520};
        double[] luongXuat = {500, 700, 400, 850};
        double[] tonKho = {2000, 2250, 1500, 1760};

        double tongNhap = 0;
        double tongXuat = 0;
        double tongTonKho = 0;

        String pattern = "#,##0";

        // Đổ dữ liệu vào biểu đồ
        for (int i = 0; i < 4; i++) {
            dataset.setValue(luongNhap[i], "Lượng nhập", "Quý " + (i + 1));
            dataset.setValue(luongXuat[i], "Lượng xuất", "Quý " + (i + 1));
            dataset.setValue(tonKho[i], "Tồn kho", "Quý " + (i + 1));

            tongNhap += luongNhap[i];
            tongXuat += luongXuat[i];
            tongTonKho += tonKho[i];
        }

        // Tạo biểu đồ Bar Chart
        JFreeChart barChart = ChartFactory.createBarChart(null,
                "Quý", "Số lượng", dataset, PlotOrientation.VERTICAL, true, true, false);

        CategoryPlot plot = barChart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);

        ChartPanel chartPanel = new ChartPanel(barChart);
        pnlBieuDo.add(chartPanel);
        pnlBieuDo.updateUI();
        lblSoLuongNhap.setText(XNumber.toString(tongNhap, pattern));
        lblSoLuongXuat.setText(XNumber.toString(tongXuat, pattern));
        lblSoLuongTK.setText(XNumber.toString(tongTonKho, pattern));
    }

    // Đăng xuất
    private void logout() {
        Auth.clear();
        new DangNhapJDialog(this, true).setVisible(true);
    }

    // Thoát chương trình
    private void exit() {
        if (MsgBox.confirm(this, "Bạn có muốn kết thúc chương trình?")) {
            System.exit(0);
        }
    }

    // Mở form đổi mật khẩu
    private void openDoiMatKhauDialog() {
        if (Auth.isLogin()) {
            new DoiMatKhauJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

     // Mở form quản lý đối tác
    private void openDoiTacDialog() {
        new DoiTacJDialog(this, true).setVisible(true);
    }

     // Mở form giới thiệu phần mềm
    private void openGioiThieuDialog() {
        new GioiThieuJDialog(this, true).setVisible(true);
    }

     // Mở form quản lý hàng hoá
    private void openHangHoaDialog() {
        new HangHoaJDialog(this, true).setVisible(true);
    }

    // Mở form quản lý kho
    private void openKhoDialog() {
        new KhoJDialog(this, true).setVisible(true);
    }

    // Mở form quản lý nhân viên
    private void openNhanVienDialog() {
        new NhanVienJDialog(this, true).setVisible(true);
    }

    // Mở form quản lý phiếu kiểm kho
    private void openKiemKhoDialog() {
        new PhieuKiemKhoJDialog(this, true).setVisible(true);
    }

    // Mở form quản lý phiếu nhập xuất kho
    private void openNhapXuatKhoDialog() {
        new PhieuNhapXuatKhoJDialog(this, true).setVisible(true);
    }
    
    // Đổ dữ liệu vào ComboBox kho
    private void fillToComboBoxKho() {
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        DefaultComboBoxModel model3 = new DefaultComboBoxModel();
        DefaultComboBoxModel model4 = new DefaultComboBoxModel();
        
        model1.removeAllElements();
        model2.removeAllElements();
        model3.removeAllElements();
        model4.removeAllElements();
        
        try {
            List<Kho> list = kDAO.selectAll();
            model1.addElement(new String("Tất cả"));
            model2.addElement(new String("Tất cả"));
            model3.addElement(new String("Tất cả"));
            model4.addElement(new String("Tất cả"));
            
            for (Kho k : list) {
                model1.addElement(k);
                model2.addElement(k);
                model3.addElement(k);
                model4.addElement(k);

            }
            cboKhoLT.setModel(model1);
            cboKhoNhap.setModel(model2);
            cboKhoXuat.setModel(model3);
//            cboKhoCC.setModel(model4);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Đổ dữ liệu vào ComboBox kho
    private void fillToComboBoxLoaiHangHoa() {
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        DefaultComboBoxModel model3 = new DefaultComboBoxModel();
        DefaultComboBoxModel model4 = new DefaultComboBoxModel();
        
        model1.removeAllElements();
        model2.removeAllElements();
        model3.removeAllElements();
        model4.removeAllElements();
        
        try {
            List<LoaiHangHoa> list = lhhDAO.selectAll();
            model1.addElement(new String("Tất cả"));  
            model2.addElement(new String("Tất cả"));   
            model3.addElement(new String("Tất cả"));   
            model4.addElement(new String("Tất cả"));   
            
            for (LoaiHangHoa lhh : list) {
                model1.addElement(lhh);
                model2.addElement(lhh);
                model3.addElement(lhh);
                model4.addElement(lhh);

            }
            
            cboLoaiHangHoaLT.setModel(model1);
            cboLoaiHangHoaNhap.setModel(model2);
            cboLoaiHangHoaXuat.setModel(model3);
//            cboKhoCC.setModel(model4);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Đổ dữ liệu vào ComboBox năm tháng
    private void fillToComboBoxNamNhap(){
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        model.removeAllElements();
        
        try {
            List<Object[]> list = tkDAO.getListNamNhap();  
            
            for (Object[] nam : list) {
                model.addElement((Integer) nam[0]);

            }
            cboNamNhap.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void fillToComboBoxThangNhap(){
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        model.removeAllElements();
        int nam = (Integer) cboNamNhap.getSelectedItem();
        
        try {
            List<Object[]> list = tkDAO.getListThangNhap(nam);  
            model.addElement(new String("Cả năm"));
            
            for (Object[] thang : list) {
                model.addElement((Integer) thang[0]);

            }
            cboThangNhap.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void fillToComboBoxNamXuat(){
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        model.removeAllElements();
        
        try {
            List<Object[]> list = tkDAO.getListNamXuat();  
            
            for (Object[] nam : list) {
                model.addElement((Integer) nam[0]);

            }
            cboNamXuat.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void fillToComboBoxThangXuat(){
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        model.removeAllElements();
        int nam = (Integer) cboNamXuat.getSelectedItem();
        
        try {
            List<Object[]> list = tkDAO.getListThangXuat(nam);  
            model.addElement(new String("Cả năm"));
            
            for (Object[] thang : list) {
                model.addElement((Integer) thang[0]);

            }
            cboThangXuat.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Đỗ dữ liệu vào bảng danh sách lưu trữ
    private void fillToTableLuuTru(){
        tblLuuTruModel.setRowCount(0);
//        String keyword = txtTimKiemLT.getText();
        String maKho; 
        int indexKho = cboKhoLT.getSelectedIndex();
        String maLHH;
        int indexLHH = cboLoaiHangHoaLT.getSelectedIndex();
        
        if(indexKho > 0) maKho = ((Kho)cboKhoLT.getSelectedItem()).toString();
        else maKho = "";
        
        if(indexLHH > 0) maLHH = String.valueOf(((LoaiHangHoa)cboLoaiHangHoaLT.getSelectedItem()).getMaLHH());
        else maLHH = "";
        
        try {
            List<Object[]> list = tkDAO.getListLuuTru(maKho, maLHH, "", 0);
            int i = 1;
            double sumMoney = 0;
            double sumSoLuong = 0;
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1]
                };
                sumMoney += (Double) rs[1] * (Double) rs[2];
                sumSoLuong += (Double) rs[1];
                tblLuuTruModel.addRow(row);
            }
            lblSumTongGiaTri.setText(XNumber.toString(sumMoney, numFormat));
            lblSoLuongTKLT.setText(XNumber.toString(sumSoLuong, numFormat));
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }
    
    // Đỗ dữ liệu vào bảng danh sách hàng nhập
    private void fillToTableNhap(){
        tblNhapModel.setRowCount(0);
//        String keyword = txtTimKiemLT.getText();
        String maKho; 
        int indexKho = cboKhoNhap.getSelectedIndex();
        String maLHH;
        int indexLHH = cboLoaiHangHoaNhap.getSelectedIndex();
        String nam;
        String thang;
        int indexThang = cboThangNhap.getSelectedIndex();
        
        if(indexKho > 0) maKho = ((Kho)cboKhoNhap.getSelectedItem()).toString();
        else maKho = "";
        
        if(indexLHH > 0) maLHH = String.valueOf(((LoaiHangHoa)cboLoaiHangHoaNhap.getSelectedItem()).getMaLHH());
        else maLHH = "";
        
        nam =  String.valueOf((Integer)cboNamNhap.getSelectedItem());
        
        if(indexThang > 0) thang = String.valueOf((Integer)cboThangNhap.getSelectedItem());
        else thang = "";
        
        try {
            List<Object[]> list = tkDAO.getListNhap(maKho, maLHH, thang, nam, "", 0);
            int i = 1;
            double sumMoney = 0;
            double sumSoLuong = 0;
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2],
                    rs[3],
                    rs[4]
                };
                sumMoney += (Double) rs[4];
                sumSoLuong += (Double) rs[1];
                tblNhapModel.addRow(row);
            }
            lblTongSoGTN.setText(XNumber.toString(sumMoney, numFormat));
            lblTongSoLN.setText(XNumber.toString(sumSoLuong, numFormat));
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }
    
    // Đỗ dữ liệu vào bảng danh sách hàng xuất
    private void fillToTableXuat(){
        tblXuatModel.setRowCount(0);
//        String keyword = txtTimKiemLT.getText();
        String maKho; 
        int indexKho = cboKhoXuat.getSelectedIndex();
        String maLHH;
        int indexLHH = cboLoaiHangHoaXuat.getSelectedIndex();
        String nam;
        String thang;
        int indexThang = cboThangXuat.getSelectedIndex();
        
        if(indexKho > 0) maKho = ((Kho)cboKhoXuat.getSelectedItem()).toString();
        else maKho = "";
        
        if(indexLHH > 0) maLHH = String.valueOf(((LoaiHangHoa)cboLoaiHangHoaXuat.getSelectedItem()).getMaLHH());
        else maLHH = "";
        
        nam =  String.valueOf((Integer)cboNamXuat.getSelectedItem());
        
        if(indexThang > 0) thang = String.valueOf((Integer)cboThangXuat.getSelectedItem());
        else thang = "";
        
        try {
            List<Object[]> list = tkDAO.getListXuat(maKho, maLHH, thang, nam, "", 0);
            int i = 1;
            double sumMoney = 0;
            double sumSoLuong = 0;
            for (Object[] rs : list) {
                Object[] row = {
                    i++,
                    rs[0],
                    rs[1],
                    rs[2],
                    rs[3],
                    rs[4]
                };
                sumMoney += (Double) rs[4];
                sumSoLuong += (Double) rs[1];
                tblXuatModel.addRow(row);
            }
            lblTongSoGTX.setText(XNumber.toString(sumMoney, numFormat));
            lblTongSoLX.setText(XNumber.toString(sumSoLuong, numFormat));
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }
}
