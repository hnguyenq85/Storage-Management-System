/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.stoman.dao.NhanVienDAO;
import com.stoman.utils.Auth;
import com.stoman.utils.MsgBox;
import java.awt.Color;
import javax.swing.ImageIcon;

/**
 *
 * @author MinhNH
 */
public class DoiMatKhauJDialog extends javax.swing.JDialog {

    /**
     * Creates new form DoiMatKhauJDialog
     */
    public DoiMatKhauJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setUndecorated(true);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblThoat = new javax.swing.JLabel();
        lblMatKhauCu = new javax.swing.JLabel();
        txtMatKhauCu = new javax.swing.JPasswordField();
        lblMatKhauMoi = new javax.swing.JLabel();
        txtMatKhauMoi = new javax.swing.JPasswordField();
        lblXacNhanMK = new javax.swing.JLabel();
        txtXacNhanMK = new javax.swing.JPasswordField();
        lblDoiMatKhau = new javax.swing.JLabel();
        btnDongY = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        pnlDoiMatKhau = new javax.swing.JPanel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StoMan - Đổi mật khẩu");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel-32(2).png"))); // NOI18N
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatMouseExited(evt);
            }
        });
        getContentPane().add(lblThoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 30, 30));

        lblMatKhauCu.setForeground(new java.awt.Color(255, 255, 255));
        lblMatKhauCu.setText("Mật khẩu hiện tại");
        getContentPane().add(lblMatKhauCu, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, -1, -1));

        txtMatKhauCu.setBackground(new java.awt.Color(0, 0, 0, 0));
        txtMatKhauCu.setForeground(new java.awt.Color(255, 255, 255));
        txtMatKhauCu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtMatKhauCu.setOpaque(false);
        getContentPane().add(txtMatKhauCu, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 260, -1));

        lblMatKhauMoi.setForeground(new java.awt.Color(255, 255, 255));
        lblMatKhauMoi.setText("Mật khẩu mới");
        getContentPane().add(lblMatKhauMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        txtMatKhauMoi.setBackground(new java.awt.Color(0, 0, 0, 0));
        txtMatKhauMoi.setForeground(new java.awt.Color(255, 255, 255));
        txtMatKhauMoi.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtMatKhauMoi.setOpaque(false);
        getContentPane().add(txtMatKhauMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, 260, -1));

        lblXacNhanMK.setForeground(new java.awt.Color(255, 255, 255));
        lblXacNhanMK.setText("Xác nhận mật khẩu mới");
        getContentPane().add(lblXacNhanMK, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, -1, -1));

        txtXacNhanMK.setBackground(new java.awt.Color(0, 0, 0, 0));
        txtXacNhanMK.setForeground(new java.awt.Color(255, 255, 255));
        txtXacNhanMK.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtXacNhanMK.setOpaque(false);
        getContentPane().add(txtXacNhanMK, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, 260, -1));

        lblDoiMatKhau.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblDoiMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        lblDoiMatKhau.setText("ĐỔI MẬT KHẨU");
        getContentPane().add(lblDoiMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, -1, -1));

        btnDongY.setBackground(new java.awt.Color(204, 255, 204));
        btnDongY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/checked.png"))); // NOI18N
        btnDongY.setText("Đồng ý");
        btnDongY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongYActionPerformed(evt);
            }
        });
        getContentPane().add(btnDongY, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 130, -1));

        btnThoat.setBackground(new java.awt.Color(255, 153, 153));
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        getContentPane().add(btnThoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 130, -1));

        pnlDoiMatKhau.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        pnlDoiMatKhau.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(pnlDoiMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 340, 320));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/images/background_changedpass.png"))); // NOI18N
        lblBackground.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.close();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnDongYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongYActionPerformed
        // TODO add your handling code here:
        this.changePassWord();
    }//GEN-LAST:event_btnDongYActionPerformed

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        // TODO add your handling code here:
        this.close();
    }//GEN-LAST:event_lblThoatMouseClicked

    private void lblThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseEntered
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/cancel-32.png")));
    }//GEN-LAST:event_lblThoatMouseEntered

    private void lblThoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseExited
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/cancel-32(2).png")));
    }//GEN-LAST:event_lblThoatMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DoiMatKhauJDialog dialog = new DoiMatKhauJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDongY;
    private javax.swing.JButton btnThoat;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblDoiMatKhau;
    private javax.swing.JLabel lblMatKhauCu;
    private javax.swing.JLabel lblMatKhauMoi;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblXacNhanMK;
    private javax.swing.JPanel pnlDoiMatKhau;
    private javax.swing.JPasswordField txtMatKhauCu;
    private javax.swing.JPasswordField txtMatKhauMoi;
    private javax.swing.JPasswordField txtXacNhanMK;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setLocationRelativeTo(null);
        pnlDoiMatKhau.setBackground(new Color(0, 0, 0, 160));
    }

    NhanVienDAO dao = new NhanVienDAO();

    //Code phương thức đổi mật khẩu.
    private void changePassWord() {
        if (isValidated()) {
            String matKhau = new String(txtMatKhauCu.getPassword());
            String matKhauMoi = new String(txtMatKhauMoi.getPassword());
            String xacNhanMKMoi = new String(txtXacNhanMK.getPassword());
            
            if (!matKhau.equals(Auth.user.getMatKhau())) {
                MsgBox.alert(this, "Mật khẩu không đúng!");
                txtMatKhauCu.requestFocus();
            }
            if (!matKhau.equals(Auth.user.getMatKhau())) {
                MsgBox.alert(this, "Mật khẩu mới không được trùng với mật khẩu cũ!");
                txtMatKhauCu.requestFocus();
            }
            if (!matKhauMoi.equals(xacNhanMKMoi)) {
                MsgBox.alert(this, "Xác nhận mật khẩu không đúng!");
                txtXacNhanMK.requestFocus();
            }
            
            Auth.user.setMatKhau(matKhau);
            dao.update(Auth.user);
            MsgBox.alert(this, "Đổi mật khẩu thành công!");

        }
    }

    private void close() {
        this.dispose();
    }

    boolean isValidated() {
        if (txtMatKhauCu.getPassword().length == 0) {
            MsgBox.alert(this, "Chưa nhập mật khẩu hiện tại!");
            txtMatKhauCu.requestFocus();
            return false;
        }
        if (txtMatKhauMoi.getPassword().length == 0) {
            MsgBox.alert(this, "Chưa nhập mật khẩu mới!");
            txtMatKhauMoi.requestFocus();
            return false;
        }
        if (txtMatKhauMoi.getPassword().length < 8) {
            MsgBox.alert(this, "Mật khẩu không được ngắn hơn 8 ký tự!");
            txtMatKhauMoi.requestFocus();
            return false;
        }
        if (txtMatKhauMoi.getPassword().length == 0) {
            MsgBox.alert(this, "Chưa nhập mật khẩu mới!");
            txtMatKhauMoi.requestFocus();
            return false;
        }
        return true;
        
    }
}
