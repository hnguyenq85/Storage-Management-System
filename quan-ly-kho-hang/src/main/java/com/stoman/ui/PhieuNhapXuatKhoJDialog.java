/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.google.zxing.WriterException;
import com.stoman.dao.ChiTietPhieuDAO;
import com.stoman.dao.DoiTacDAO;
import com.stoman.dao.HangHoaDAO;
import com.stoman.dao.KhoDAO;
import com.stoman.dao.LoaiDoiTacDAO;
import com.stoman.dao.LoaiHangHoaDAO;
import com.stoman.dao.LuuTruDAO;
import com.stoman.dao.NhanVienDAO;
import com.stoman.dao.PhieuDAO;
import com.stoman.dao.ProcedureDAO;
import com.stoman.entity.ChiTietPhieu;
import com.stoman.entity.DoiTac;
import com.stoman.entity.HangHoa;
import com.stoman.entity.Kho;
import com.stoman.entity.LoaiDoiTac;
import com.stoman.entity.LoaiHangHoa;
import com.stoman.entity.LuuTru;
import com.stoman.entity.NhanVien;
import com.stoman.entity.Phieu;
import com.stoman.utils.Auth;
import com.stoman.utils.DateRenderer;
import com.stoman.utils.DragPanel;
import com.stoman.utils.ExporterReport;
import com.stoman.utils.MsgBox;
import com.stoman.utils.QRCode;
import com.stoman.utils.SpinnerEditor;
import com.stoman.utils.XDate;
import com.stoman.utils.XNumber;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.CellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.RowFilter;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.table.TableStringConverter;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Huy
 */
public class PhieuNhapXuatKhoJDialog extends javax.swing.JDialog {

    /**
     * Creates new form PhieuKiemKhoDialog
     */
    public PhieuNhapXuatKhoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChiTietPhieuDialog = new javax.swing.JDialog();
        pnlBackgroundDialog = new javax.swing.JPanel();
        pnlTblCTPhieu_main = new javax.swing.JScrollPane();
        tblCTPhieu_main = new javax.swing.JTable();
        pnlThongTinCTP = new javax.swing.JPanel();
        lblLoaiHH = new javax.swing.JLabel();
        lblTenHH = new javax.swing.JLabel();
        cboLoaiHH = new javax.swing.JComboBox<>();
        cboHangHoa = new javax.swing.JComboBox<>();
        pnlChucNangCTP = new javax.swing.JPanel();
        btnThemCTP = new javax.swing.JButton();
        btnXoaCTP = new javax.swing.JButton();
        pnlThanhTieuDeCTP = new DragPanel(ChiTietPhieuDialog);
        lblTieuDeDialog = new javax.swing.JLabel();
        lblThoatCTP = new javax.swing.JLabel();
        btnGrpLoaiPhieu = new javax.swing.ButtonGroup();
        QRCodeDialog = new javax.swing.JDialog();
        pnlThanhTieuDeQR = new DragPanel(this);
        lblTieuDeQR = new javax.swing.JLabel();
        lblThoatQR = new javax.swing.JLabel();
        pnlBackgroundQR = new javax.swing.JPanel();
        lblQRCodeImage = new javax.swing.JLabel();
        pnlBackground = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        pnlChiTiet = new javax.swing.JPanel();
        peparator = new javax.swing.JSeparator();
        lblTimKiemCT = new javax.swing.JLabel();
        lblTimKiemCT2 = new javax.swing.JLabel();
        txtTimKiemCTPhieu = new javax.swing.JTextField();
        cboTimKiemCTPhieu = new javax.swing.JComboBox<>();
        pnlTblCTPhieu_sub = new javax.swing.JScrollPane();
        tblCTPhieu_sub = new javax.swing.JTable();
        pnlNutDieuHuong = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        pnlThongTinPhieu = new javax.swing.JPanel();
        rdoPhieuNhap = new javax.swing.JRadioButton();
        lblNgayLap = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        lblNgayThucHien = new javax.swing.JLabel();
        lblTongTienTitle = new javax.swing.JLabel();
        lblNgayHoanThanh = new javax.swing.JLabel();
        lblTongTienTitle1 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        cboDoiTac = new javax.swing.JComboBox<>();
        lblGhiChu = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        txtDaThanhToan = new javax.swing.JFormattedTextField();
        lblLoaiDT = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txtNgayThucHien = new com.toedter.calendar.JDateChooser();
        lblMaNV = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txtNgayHoanThanh = new com.toedter.calendar.JDateChooser();
        lblLoaiPhieu = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        lblDoiTac = new javax.swing.JLabel();
        pnlGhiChu = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        txtNgayLap = new javax.swing.JFormattedTextField();
        cboLoaiDT = new javax.swing.JComboBox<>();
        cboKho = new javax.swing.JComboBox<>();
        lblNgayHoanThanh1 = new javax.swing.JLabel();
        rdoPhieuXuat = new javax.swing.JRadioButton();
        chkChuyenHang = new javax.swing.JCheckBox();
        chkThanhToan = new javax.swing.JCheckBox();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnChiTiet = new javax.swing.JButton();
        btnXuatMaPhieu = new javax.swing.JButton();
        pnlChucNangMoRong = new javax.swing.JPanel();
        btnXuatFile = new javax.swing.JButton();
        btnInPhieu = new javax.swing.JButton();
        lblTrangThai1 = new javax.swing.JLabel();
        lblTrangThai2 = new javax.swing.JLabel();
        lblTrangThai3 = new javax.swing.JLabel();
        pnlDanhSach = new javax.swing.JPanel();
        scrollPane2 = new javax.swing.JScrollPane();
        tblPhieu = new javax.swing.JTable();
        lblTimKiemCT1 = new javax.swing.JLabel();
        txtTimKiemPhieu = new javax.swing.JTextField();
        lblTimKiemPhieu2 = new javax.swing.JLabel();
        cboTimKiemPhieu = new javax.swing.JComboBox<>();
        cboTimKiemPhieu1 = new javax.swing.JComboBox<>();
        lblTimKiemPhieu3 = new javax.swing.JLabel();
        lblTrangThai4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pnlLuongNhap = new javax.swing.JPanel();
        lblLuongNhap = new javax.swing.JLabel();
        lblSoLuongNhap = new javax.swing.JLabel();
        pnlLuongNhap1 = new javax.swing.JPanel();
        lblLuongNhap1 = new javax.swing.JLabel();
        lblSoLuongNhap1 = new javax.swing.JLabel();
        pnlLuongNhap2 = new javax.swing.JPanel();
        lblLuongNhap2 = new javax.swing.JLabel();
        lblSoLuongNhap2 = new javax.swing.JLabel();
        pnlThanhTieuDe = new DragPanel(this);
        lblTieuDe = new javax.swing.JLabel();
        lblThoat = new javax.swing.JLabel();

        ChiTietPhieuDialog.setTitle("Chi tiết phiếu nhập xuất kho");
        ChiTietPhieuDialog.setResizable(false);

        pnlTblCTPhieu_main.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách chi tiết phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        pnlTblCTPhieu_main.setOpaque(false);

        tblCTPhieu_main.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCTPhieu_main.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCTPhieu_main.getTableHeader().setReorderingAllowed(false);
        tblCTPhieu_main.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCTPhieu_mainPropertyChange(evt);
            }
        });
        pnlTblCTPhieu_main.setViewportView(tblCTPhieu_main);

        pnlThongTinCTP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        pnlThongTinCTP.setToolTipText("StoMan - Chi tiết phiếu kiểm kho");
        pnlThongTinCTP.setOpaque(false);

        lblLoaiHH.setText("Loại hàng hoá");

        lblTenHH.setText("Tên hàng hoá");

        cboLoaiHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiHHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongTinCTPLayout = new javax.swing.GroupLayout(pnlThongTinCTP);
        pnlThongTinCTP.setLayout(pnlThongTinCTPLayout);
        pnlThongTinCTPLayout.setHorizontalGroup(
            pnlThongTinCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinCTPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenHH)
                    .addComponent(lblLoaiHH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThongTinCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboLoaiHH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboHangHoa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlThongTinCTPLayout.setVerticalGroup(
            pnlThongTinCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinCTPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoaiHH)
                    .addComponent(cboLoaiHH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThongTinCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenHH)
                    .addComponent(cboHangHoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlChucNangCTP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        pnlChucNangCTP.setOpaque(false);
        pnlChucNangCTP.setLayout(new java.awt.GridLayout(0, 1));

        btnThemCTP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/add.png"))); // NOI18N
        btnThemCTP.setText("Thêm");
        btnThemCTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCTPActionPerformed(evt);
            }
        });
        pnlChucNangCTP.add(btnThemCTP);

        btnXoaCTP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel.png"))); // NOI18N
        btnXoaCTP.setText("Xoá");
        btnXoaCTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTPActionPerformed(evt);
            }
        });
        pnlChucNangCTP.add(btnXoaCTP);

        pnlThanhTieuDeCTP.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDeDialog.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDeDialog.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDeDialog.setText("STOMAN - CHI TIẾT NHẬP XUẤT KHO");

        lblThoatCTP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoatCTP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoatCTP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatCTPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatCTPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatCTPMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeCTPLayout = new javax.swing.GroupLayout(pnlThanhTieuDeCTP);
        pnlThanhTieuDeCTP.setLayout(pnlThanhTieuDeCTPLayout);
        pnlThanhTieuDeCTPLayout.setHorizontalGroup(
            pnlThanhTieuDeCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeCTPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDeDialog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 441, Short.MAX_VALUE)
                .addComponent(lblThoatCTP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeCTPLayout.setVerticalGroup(
            pnlThanhTieuDeCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeCTPLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeCTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeCTPLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDeDialog))
                    .addComponent(lblThoatCTP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout pnlBackgroundDialogLayout = new javax.swing.GroupLayout(pnlBackgroundDialog);
        pnlBackgroundDialog.setLayout(pnlBackgroundDialogLayout);
        pnlBackgroundDialogLayout.setHorizontalGroup(
            pnlBackgroundDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundDialogLayout.createSequentialGroup()
                        .addComponent(pnlThongTinCTP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlChucNangCTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlTblCTPhieu_main))
                .addContainerGap())
            .addComponent(pnlThanhTieuDeCTP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlBackgroundDialogLayout.setVerticalGroup(
            pnlBackgroundDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundDialogLayout.createSequentialGroup()
                .addComponent(pnlThanhTieuDeCTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBackgroundDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlThongTinCTP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlChucNangCTP, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTblCTPhieu_main, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout ChiTietPhieuDialogLayout = new javax.swing.GroupLayout(ChiTietPhieuDialog.getContentPane());
        ChiTietPhieuDialog.getContentPane().setLayout(ChiTietPhieuDialogLayout);
        ChiTietPhieuDialogLayout.setHorizontalGroup(
            ChiTietPhieuDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackgroundDialog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ChiTietPhieuDialogLayout.setVerticalGroup(
            ChiTietPhieuDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackgroundDialog, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        QRCodeDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        QRCodeDialog.setTitle("Xuất mã phiếu QR Code");
        QRCodeDialog.setResizable(false);

        pnlThanhTieuDeQR.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDeQR.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDeQR.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDeQR.setText("STOMAN - XUẤT MÃ PHIẾU (QR)");

        lblThoatQR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoatQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoatQR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatQRMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatQRMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatQRMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeQRLayout = new javax.swing.GroupLayout(pnlThanhTieuDeQR);
        pnlThanhTieuDeQR.setLayout(pnlThanhTieuDeQRLayout);
        pnlThanhTieuDeQRLayout.setHorizontalGroup(
            pnlThanhTieuDeQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeQRLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDeQR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(lblThoatQR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeQRLayout.setVerticalGroup(
            pnlThanhTieuDeQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeQRLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeQRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeQRLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDeQR))
                    .addComponent(lblThoatQR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        QRCodeDialog.getContentPane().add(pnlThanhTieuDeQR, java.awt.BorderLayout.PAGE_START);

        pnlBackgroundQR.setPreferredSize(new java.awt.Dimension(300, 300));
        pnlBackgroundQR.setLayout(new java.awt.GridBagLayout());

        lblQRCodeImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        lblQRCodeImage.setPreferredSize(new java.awt.Dimension(200, 200));
        pnlBackgroundQR.add(lblQRCodeImage, new java.awt.GridBagConstraints());

        QRCodeDialog.getContentPane().add(pnlBackgroundQR, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StoMan - Quản lý phiếu nhập xuất kho");
        setFocusCycleRoot(false);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pnlBackground.setLayout(new java.awt.BorderLayout());

        lblTimKiemCT.setText("Tìm kiếm");

        lblTimKiemCT2.setText("theo");

        txtTimKiemCTPhieu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemCTPhieuKeyReleased(evt);
            }
        });

        cboTimKiemCTPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemCTPhieuActionPerformed(evt);
            }
        });

        pnlTblCTPhieu_sub.setOpaque(false);

        tblCTPhieu_sub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCTPhieu_sub.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCTPhieu_sub.getTableHeader().setReorderingAllowed(false);
        tblCTPhieu_sub.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCTPhieu_subPropertyChange(evt);
            }
        });
        pnlTblCTPhieu_sub.setViewportView(tblCTPhieu_sub);

        pnlNutDieuHuong.setOpaque(false);
        pnlNutDieuHuong.setLayout(new java.awt.GridLayout(1, 0));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-start.png"))); // NOI18N
        btnFirst.setPreferredSize(new java.awt.Dimension(100, 33));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnFirst);

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-left-24.png"))); // NOI18N
        btnPrev.setPreferredSize(new java.awt.Dimension(100, 33));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnPrev);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-right.png"))); // NOI18N
        btnNext.setPreferredSize(new java.awt.Dimension(100, 33));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-end.png"))); // NOI18N
        btnLast.setPreferredSize(new java.awt.Dimension(100, 33));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        pnlNutDieuHuong.add(btnLast);

        pnlThongTinPhieu.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongTinPhieu.setOpaque(false);

        btnGrpLoaiPhieu.add(rdoPhieuNhap);
        rdoPhieuNhap.setSelected(true);
        rdoPhieuNhap.setText("Phiếu nhập");
        rdoPhieuNhap.setOpaque(false);
        rdoPhieuNhap.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoPhieuNhapStateChanged(evt);
            }
        });

        lblNgayLap.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayLap.setText("Ngày lập");

        lblTrangThai.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTrangThai.setText("Trạng thái");

        lblNgayThucHien.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayThucHien.setText("Ngày thực hiện");

        lblTongTienTitle.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTongTienTitle.setText("Tổng tiền cần thanh toán");

        lblNgayHoanThanh.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayHoanThanh.setText("Ngày hoàn thành");

        lblTongTienTitle1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTongTienTitle1.setText("Đã thanh toán");

        txtMaNV.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaNV.setFocusable(false);

        lblGhiChu.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGhiChu.setText("Ghi chú");

        lblTongTien.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTongTien.setText("0.0");

        txtDaThanhToan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.0"))));
        txtDaThanhToan.setText("0.0");
        txtDaThanhToan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblLoaiDT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblLoaiDT.setText("Loại đối tác");

        txtNgayThucHien.setDate(new Date());
        txtNgayThucHien.setOpaque(false);

        lblMaNV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMaNV.setText("Người lập");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtNgayHoanThanh.setDate(new Date());
        txtNgayHoanThanh.setOpaque(false);

        lblLoaiPhieu.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblLoaiPhieu.setText("Loại phiếu");

        lblDoiTac.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDoiTac.setText("Đối tác");

        txtGhiChu.setColumns(20);
        txtGhiChu.setLineWrap(true);
        txtGhiChu.setRows(5);
        txtGhiChu.setWrapStyleWord(true);
        pnlGhiChu.setViewportView(txtGhiChu);

        txtNgayLap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yyyy HH:mm:ss"))));
        txtNgayLap.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNgayLap.setFocusable(false);

        cboLoaiDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiDTActionPerformed(evt);
            }
        });

        cboKho.setEditable(true);
        cboKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoActionPerformed(evt);
            }
        });

        lblNgayHoanThanh1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayHoanThanh1.setText("Kho");

        btnGrpLoaiPhieu.add(rdoPhieuXuat);
        rdoPhieuXuat.setText("Phiếu xuất");
        rdoPhieuXuat.setOpaque(false);

        chkChuyenHang.setText("Hoàn thành chuyển hàng");
        chkChuyenHang.setOpaque(false);
        chkChuyenHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkChuyenHangMouseClicked(evt);
            }
        });

        chkThanhToan.setText("Hoàn thành thanh toán");
        chkThanhToan.setOpaque(false);
        chkThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkThanhToanMouseClicked(evt);
            }
        });
        chkThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongTinPhieuLayout = new javax.swing.GroupLayout(pnlThongTinPhieu);
        pnlThongTinPhieu.setLayout(pnlThongTinPhieuLayout);
        pnlThongTinPhieuLayout.setHorizontalGroup(
            pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                .addGap(669, 669, 669)
                .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                        .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkChuyenHang)
                            .addComponent(chkThanhToan))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNgayHoanThanh1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLoaiPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addComponent(lblNgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                            .addComponent(pnlGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblTrangThai)
                            .addGap(0, 91, Short.MAX_VALUE))
                        .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                                    .addComponent(rdoPhieuNhap)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rdoPhieuXuat))
                                .addComponent(txtMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                .addComponent(txtNgayLap)
                                .addComponent(cboKho, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(47, 47, 47)
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblDoiTac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNgayHoanThanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblLoaiDT, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblNgayThucHien))
                            .addGap(10, 10, 10)
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                                    .addComponent(cboLoaiDT, 0, 196, Short.MAX_VALUE)
                                    .addGap(20, 20, 20)
                                    .addComponent(lblTongTienTitle)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                                    .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtNgayThucHien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtNgayHoanThanh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(cboDoiTac, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(20, 20, 20)
                                    .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jSeparator3)
                                        .addComponent(jSeparator4)
                                        .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                                            .addComponent(lblTongTienTitle1)
                                            .addGap(0, 118, Short.MAX_VALUE))
                                        .addComponent(txtDaThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))))))
                    .addContainerGap()))
        );

        pnlThongTinPhieuLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboLoaiDT, txtMaNV});

        pnlThongTinPhieuLayout.setVerticalGroup(
            pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTongTien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(chkChuyenHang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkThanhToan)
                .addGap(16, 16, 16))
            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator2)
                        .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                            .addComponent(lblTongTienTitle)
                            .addGap(28, 28, 28)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblTongTienTitle1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDaThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblTrangThai))
                        .addGroup(pnlThongTinPhieuLayout.createSequentialGroup()
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblLoaiDT)
                                .addComponent(cboLoaiDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblLoaiPhieu)
                                .addComponent(rdoPhieuNhap)
                                .addComponent(rdoPhieuXuat))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDoiTac)
                                .addComponent(cboDoiTac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblNgayHoanThanh1)
                                .addComponent(cboKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(8, 8, 8)
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNgayThucHien, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMaNV)
                                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNgayThucHien, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNgayHoanThanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblNgayHoanThanh, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNgayLap)
                                    .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pnlThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblGhiChu)
                                .addComponent(pnlGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlChucNang.setBackground(new java.awt.Color(153, 153, 255));
        pnlChucNang.setOpaque(false);
        pnlChucNang.setLayout(new java.awt.GridLayout(6, 0));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/add-32.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setPreferredSize(new java.awt.Dimension(120, 45));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnThem);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel-32.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setPreferredSize(new java.awt.Dimension(120, 45));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnXoa);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/edit-property-32.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setPreferredSize(new java.awt.Dimension(120, 45));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnSua);

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/new-document-32.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setPreferredSize(new java.awt.Dimension(120, 45));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnMoi);

        btnChiTiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/more-details-32.png"))); // NOI18N
        btnChiTiet.setText("Chi tiết");
        btnChiTiet.setPreferredSize(new java.awt.Dimension(120, 45));
        btnChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnChiTiet);

        btnXuatMaPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/qr-code-32.png"))); // NOI18N
        btnXuatMaPhieu.setText("QR Code");
        btnXuatMaPhieu.setPreferredSize(new java.awt.Dimension(120, 45));
        btnXuatMaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatMaPhieuActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnXuatMaPhieu);

        pnlChucNangMoRong.setOpaque(false);
        pnlChucNangMoRong.setLayout(new java.awt.GridLayout(1, 2));

        btnXuatFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/open-document.png"))); // NOI18N
        btnXuatFile.setText("Xuất file");
        btnXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileActionPerformed(evt);
            }
        });
        pnlChucNangMoRong.add(btnXuatFile);

        btnInPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/print.png"))); // NOI18N
        btnInPhieu.setText("In phiếu");
        btnInPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInPhieuActionPerformed(evt);
            }
        });
        pnlChucNangMoRong.add(btnInPhieu);

        lblTrangThai1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTrangThai1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTrangThai1.setText("CHI TIẾT PHIẾU");

        lblTrangThai2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTrangThai2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTrangThai2.setText("CHỨC NĂNG");

        lblTrangThai3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTrangThai3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTrangThai3.setText("THÔNG TIN PHIẾU");

        javax.swing.GroupLayout pnlChiTietLayout = new javax.swing.GroupLayout(pnlChiTiet);
        pnlChiTiet.setLayout(pnlChiTietLayout);
        pnlChiTietLayout.setHorizontalGroup(
            pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlThongTinPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(peparator)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChiTietLayout.createSequentialGroup()
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlChiTietLayout.createSequentialGroup()
                                .addComponent(pnlNutDieuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                                .addComponent(pnlChucNangMoRong, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlChiTietLayout.createSequentialGroup()
                                .addComponent(lblTimKiemCT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimKiemCTPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTimKiemCT2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboTimKiemCTPhieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(pnlTblCTPhieu_sub, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTrangThai1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTrangThai2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblTrangThai3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlChiTietLayout.setVerticalGroup(
            pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChiTietLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblTrangThai3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlThongTinPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrangThai1)
                    .addComponent(lblTrangThai2))
                .addGap(8, 8, 8)
                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChiTietLayout.createSequentialGroup()
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTimKiemCT)
                            .addComponent(txtTimKiemCTPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTimKiemCT2)
                            .addComponent(cboTimKiemCTPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlTblCTPhieu_sub, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlChucNangMoRong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlNutDieuHuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlThongTinPhieu.getAccessibleContext().setAccessibleName("");

        tabs.addTab("Thông tin phiếu", pnlChiTiet);

        pnlDanhSach.setOpaque(false);

        tblPhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPhieu.setRowHeight(25);
        tblPhieu.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPhieu.getTableHeader().setReorderingAllowed(false);
        tblPhieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuMouseClicked(evt);
            }
        });
        tblPhieu.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblPhieuPropertyChange(evt);
            }
        });
        scrollPane2.setViewportView(tblPhieu);

        lblTimKiemCT1.setText("Tìm kiếm");

        txtTimKiemPhieu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemPhieuKeyReleased(evt);
            }
        });

        lblTimKiemPhieu2.setText("theo");

        cboTimKiemPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemPhieuActionPerformed(evt);
            }
        });

        cboTimKiemPhieu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemPhieu1ActionPerformed(evt);
            }
        });

        lblTimKiemPhieu3.setText("Loại phiếu");

        lblTrangThai4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTrangThai4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTrangThai4.setText("DANH SÁCH PHIẾU");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Chú thích", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setText("Phiếu đã hoàn thành");

        jLabel2.setText("Phiếu chưa hoàn thành thanh toán");

        jLabel3.setText("Phiếu chưa hoàn thành chuyển hàn");

        jLabel4.setText("Phiếu chưa hoàn thành gì");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thống kê", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        pnlLuongNhap.setBackground(new java.awt.Color(255, 255, 255));
        pnlLuongNhap.setLayout(new java.awt.GridLayout(0, 1, 0, 10));

        lblLuongNhap.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongNhap.setText("Phiếu hoàn thành");
        pnlLuongNhap.add(lblLuongNhap);

        lblSoLuongNhap.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSoLuongNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongNhap.setText("0");
        pnlLuongNhap.add(lblSoLuongNhap);

        jPanel3.add(pnlLuongNhap);

        pnlLuongNhap1.setBackground(new java.awt.Color(255, 255, 255));
        pnlLuongNhap1.setLayout(new java.awt.GridLayout(0, 1, 0, 10));

        lblLuongNhap1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblLuongNhap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongNhap1.setText("Phiếu chưa thanh toán ");
        pnlLuongNhap1.add(lblLuongNhap1);

        lblSoLuongNhap1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSoLuongNhap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongNhap1.setText("0");
        pnlLuongNhap1.add(lblSoLuongNhap1);

        jPanel3.add(pnlLuongNhap1);

        pnlLuongNhap2.setBackground(new java.awt.Color(255, 255, 255));
        pnlLuongNhap2.setLayout(new java.awt.GridLayout(0, 1, 0, 10));

        lblLuongNhap2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblLuongNhap2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuongNhap2.setText("Phiếu chưa chuyển hàng");
        pnlLuongNhap2.add(lblLuongNhap2);

        lblSoLuongNhap2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSoLuongNhap2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoLuongNhap2.setText("0");
        pnlLuongNhap2.add(lblSoLuongNhap2);

        jPanel3.add(pnlLuongNhap2);

        javax.swing.GroupLayout pnlDanhSachLayout = new javax.swing.GroupLayout(pnlDanhSach);
        pnlDanhSach.setLayout(pnlDanhSachLayout);
        pnlDanhSachLayout.setHorizontalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(lblTimKiemPhieu3)
                .addGap(18, 18, 18)
                .addComponent(cboTimKiemPhieu1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDanhSachLayout.createSequentialGroup()
                .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTrangThai4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDanhSachLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                                .addComponent(lblTimKiemCT1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTimKiemPhieu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTimKiemPhieu2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboTimKiemPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(scrollPane2)
                            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pnlDanhSachLayout.setVerticalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTrangThai4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimKiemPhieu3)
                    .addComponent(cboTimKiemPhieu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimKiemCT1)
                    .addComponent(txtTimKiemPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiemPhieu2)
                    .addComponent(cboTimKiemPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabs.addTab("Danh sách phiếu nhập xuất", pnlDanhSach);

        pnlBackground.add(tabs, java.awt.BorderLayout.CENTER);

        pnlThanhTieuDe.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setText("STOMAN - QUẢN LÝ NHẬP XUẤT KHO");

        lblThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeLayout = new javax.swing.GroupLayout(pnlThanhTieuDe);
        pnlThanhTieuDe.setLayout(pnlThanhTieuDeLayout);
        pnlThanhTieuDeLayout.setHorizontalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 709, Short.MAX_VALUE)
                .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeLayout.setVerticalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDe))
                    .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        pnlBackground.add(pnlThanhTieuDe, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPhieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() < 2) {
            return;
        }
        this.rowPhieu = ((Integer) tblPhieu.getValueAt(tblPhieu.getSelectedRow(), 0)) - 1;
        edit();
    }//GEN-LAST:event_tblPhieuMouseClicked

    private void btnThemCTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCTPActionPerformed
        this.insertCT();
    }//GEN-LAST:event_btnThemCTPActionPerformed

    private void cboLoaiHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHHActionPerformed
        this.fillToComboBoxHangHoa();
    }//GEN-LAST:event_cboLoaiHHActionPerformed

    private void btnXoaCTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTPActionPerformed
        this.deleteCT();
    }//GEN-LAST:event_btnXoaCTPActionPerformed

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblThoatMouseClicked

    private void lblThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseEntered
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatMouseEntered

    private void lblThoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseExited
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatMouseExited

    private void txtTimKiemPhieuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemPhieuKeyReleased
        // TODO add your handling code here:
        searchPhieu();
    }//GEN-LAST:event_txtTimKiemPhieuKeyReleased

    private void cboTimKiemPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemPhieuActionPerformed
        // TODO add your handling code here:
        txtTimKiemPhieu.setText("");
        searchPhieu();
    }//GEN-LAST:event_cboTimKiemPhieuActionPerformed

    private void lblThoatCTPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatCTPMouseClicked
        // TODO add your handling code here:
        ChiTietPhieuDialog.dispose();
    }//GEN-LAST:event_lblThoatCTPMouseClicked

    private void lblThoatCTPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatCTPMouseEntered
        // TODO add your handling code here:
        lblThoatCTP.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatCTPMouseEntered

    private void lblThoatCTPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatCTPMouseExited
        // TODO add your handling code here:
        lblThoatCTP.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatCTPMouseExited

    private void lblThoatQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatQRMouseClicked
        // TODO add your handling code here:
        QRCodeDialog.dispose();
    }//GEN-LAST:event_lblThoatQRMouseClicked

    private void lblThoatQRMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatQRMouseEntered
        // TODO add your handling code here:
        lblThoatQR.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatQRMouseEntered

    private void lblThoatQRMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatQRMouseExited
        // TODO add your handling code here:
        lblThoatQR.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatQRMouseExited

    private void tblCTPhieu_mainPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCTPhieu_mainPropertyChange
        // TODO add your handling code here:
        int row = tblCTPhieu_main.getSelectedRow();
        this.updateThanhTien(row);
    }//GEN-LAST:event_tblCTPhieu_mainPropertyChange

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.timer.stop();
    }//GEN-LAST:event_formWindowClosed

    private void btnInPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInPhieuActionPerformed
        // TODO add your handling code here:
        printReport();
    }//GEN-LAST:event_btnInPhieuActionPerformed

    private void btnXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileActionPerformed
        // TODO add your handling code here:
        exportReport();
    }//GEN-LAST:event_btnXuatFileActionPerformed

    private void cboTimKiemCTPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemCTPhieuActionPerformed
        // TODO add your handling code here:
        txtTimKiemCTPhieu.setText("");
        searchCTPhieu();
    }//GEN-LAST:event_cboTimKiemCTPhieuActionPerformed

    private void txtTimKiemCTPhieuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemCTPhieuKeyReleased
        // TODO add your handling code here:
        searchCTPhieu();
    }//GEN-LAST:event_txtTimKiemCTPhieuKeyReleased

    private void btnXuatMaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatMaPhieuActionPerformed
        // TODO add your handling code here:
        createQRCode();
    }//GEN-LAST:event_btnXuatMaPhieuActionPerformed

    private void btnChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietActionPerformed
        // TODO add your handling code here:
        ChiTietPhieuDialog.setVisible(true);
    }//GEN-LAST:event_btnChiTietActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        delCTP.clear();
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.updatePhieu();
        
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.deletePhieu();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.insertPhieu();
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void chkThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkThanhToanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chkThanhToanMouseClicked

    private void cboKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoActionPerformed
        // TODO add your handling code here:
        cboKho.setEnabled(!isUpdate);
        updateCT();
    }//GEN-LAST:event_cboKhoActionPerformed

    private void chkChuyenHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkChuyenHangMouseClicked
        // TODO add your handling code here:
        this.updateStatus();
    }//GEN-LAST:event_chkChuyenHangMouseClicked

    private void cboLoaiDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiDTActionPerformed
        // TODO add your handling code here:
        fillToComboBoxDoiTac();
    }//GEN-LAST:event_cboLoaiDTActionPerformed

    private void tblCTPhieu_subPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCTPhieu_subPropertyChange
        // TODO add your handling code here:
        int row = tblCTPhieu_sub.getSelectedRow();
        this.updateThanhTien(row);
    }//GEN-LAST:event_tblCTPhieu_subPropertyChange

    private void rdoPhieuNhapStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoPhieuNhapStateChanged
        // TODO add your handling code here:
        this.fillToTableCTPhieu();
        this.fillToComboBoxHangHoa();
    }//GEN-LAST:event_rdoPhieuNhapStateChanged

    private void tblPhieuPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblPhieuPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPhieuPropertyChange

    private void chkThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkThanhToanActionPerformed
        if(chkThanhToan.isSelected()){
            txtDaThanhToan.setToolTipText(txtDaThanhToan.getText());
            txtDaThanhToan.setText(lblTongTien.getText());
        }else{
            txtDaThanhToan.setText(txtDaThanhToan.getToolTipText());
        }
        
        txtDaThanhToan.setFocusable(!chkThanhToan.isSelected());
    }//GEN-LAST:event_chkThanhToanActionPerformed

    private void cboTimKiemPhieu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemPhieu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTimKiemPhieu1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(new FlatIntelliJLaf());
            javax.swing.UIManager.put("Table.showHorizontalLines", true);
            javax.swing.UIManager.put("Table.showVerticalLines", true);
            javax.swing.UIManager.put("TitlePane.unifiedBackground", true);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(PhieuKiemKhoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PhieuNhapXuatKhoJDialog dialog = new PhieuNhapXuatKhoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ChiTietPhieuDialog;
    private javax.swing.JDialog QRCodeDialog;
    private javax.swing.JButton btnChiTiet;
    private javax.swing.JButton btnFirst;
    private javax.swing.ButtonGroup btnGrpLoaiPhieu;
    private javax.swing.JButton btnInPhieu;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemCTP;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaCTP;
    private javax.swing.JButton btnXuatFile;
    private javax.swing.JButton btnXuatMaPhieu;
    private javax.swing.JComboBox<String> cboDoiTac;
    private javax.swing.JComboBox<String> cboHangHoa;
    private javax.swing.JComboBox<String> cboKho;
    private javax.swing.JComboBox<String> cboLoaiDT;
    private javax.swing.JComboBox<String> cboLoaiHH;
    private javax.swing.JComboBox<String> cboTimKiemCTPhieu;
    private javax.swing.JComboBox<String> cboTimKiemPhieu;
    private javax.swing.JComboBox<String> cboTimKiemPhieu1;
    private javax.swing.JCheckBox chkChuyenHang;
    private javax.swing.JCheckBox chkThanhToan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblDoiTac;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblLoaiDT;
    private javax.swing.JLabel lblLoaiHH;
    private javax.swing.JLabel lblLoaiPhieu;
    private javax.swing.JLabel lblLuongNhap;
    private javax.swing.JLabel lblLuongNhap1;
    private javax.swing.JLabel lblLuongNhap2;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgayHoanThanh;
    private javax.swing.JLabel lblNgayHoanThanh1;
    private javax.swing.JLabel lblNgayLap;
    private javax.swing.JLabel lblNgayThucHien;
    private javax.swing.JLabel lblQRCodeImage;
    private javax.swing.JLabel lblSoLuongNhap;
    private javax.swing.JLabel lblSoLuongNhap1;
    private javax.swing.JLabel lblSoLuongNhap2;
    private javax.swing.JLabel lblTenHH;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblThoatCTP;
    private javax.swing.JLabel lblThoatQR;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTieuDeDialog;
    private javax.swing.JLabel lblTieuDeQR;
    private javax.swing.JLabel lblTimKiemCT;
    private javax.swing.JLabel lblTimKiemCT1;
    private javax.swing.JLabel lblTimKiemCT2;
    private javax.swing.JLabel lblTimKiemPhieu2;
    private javax.swing.JLabel lblTimKiemPhieu3;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTienTitle;
    private javax.swing.JLabel lblTongTienTitle1;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JLabel lblTrangThai1;
    private javax.swing.JLabel lblTrangThai2;
    private javax.swing.JLabel lblTrangThai3;
    private javax.swing.JLabel lblTrangThai4;
    private javax.swing.JSeparator peparator;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlBackgroundDialog;
    private javax.swing.JPanel pnlBackgroundQR;
    private javax.swing.JPanel pnlChiTiet;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlChucNangCTP;
    private javax.swing.JPanel pnlChucNangMoRong;
    private javax.swing.JPanel pnlDanhSach;
    private javax.swing.JScrollPane pnlGhiChu;
    private javax.swing.JPanel pnlLuongNhap;
    private javax.swing.JPanel pnlLuongNhap1;
    private javax.swing.JPanel pnlLuongNhap2;
    private javax.swing.JPanel pnlNutDieuHuong;
    private javax.swing.JScrollPane pnlTblCTPhieu_main;
    private javax.swing.JScrollPane pnlTblCTPhieu_sub;
    private javax.swing.JPanel pnlThanhTieuDe;
    private javax.swing.JPanel pnlThanhTieuDeCTP;
    private javax.swing.JPanel pnlThanhTieuDeQR;
    private javax.swing.JPanel pnlThongTinCTP;
    private javax.swing.JPanel pnlThongTinPhieu;
    private javax.swing.JRadioButton rdoPhieuNhap;
    private javax.swing.JRadioButton rdoPhieuXuat;
    private javax.swing.JScrollPane scrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblCTPhieu_main;
    private javax.swing.JTable tblCTPhieu_sub;
    private javax.swing.JTable tblPhieu;
    private javax.swing.JFormattedTextField txtDaThanhToan;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaNV;
    private com.toedter.calendar.JDateChooser txtNgayHoanThanh;
    private javax.swing.JFormattedTextField txtNgayLap;
    private com.toedter.calendar.JDateChooser txtNgayThucHien;
    private javax.swing.JTextField txtTimKiemCTPhieu;
    private javax.swing.JTextField txtTimKiemPhieu;
    // End of variables declaration//GEN-END:variables

    private PhieuDAO pDAO = new PhieuDAO();
    private ChiTietPhieuDAO ctpDAO = new ChiTietPhieuDAO();
    private LoaiDoiTacDAO ldtDAO = new LoaiDoiTacDAO();
    private DoiTacDAO dtDAO = new DoiTacDAO();
    private LuuTruDAO ltDAO = new LuuTruDAO();
    private LoaiHangHoaDAO lhhDAO = new LoaiHangHoaDAO();
    private HangHoaDAO hhDAO = new HangHoaDAO();
    private KhoDAO kDAO = new KhoDAO();
    private NhanVienDAO nvDAO = new NhanVienDAO();
    private ProcedureDAO spDAO = new ProcedureDAO();

    private DefaultTableModel modelPhieu;
    private DefaultTableModel modelCTPhieu;

    private final String numFormat = "#,##0.0";
    private final String dateFormat = "dd-MM-yyyy";
    private final String reportPath = "/com/stoman/reports/InPhieuNhapXuatKho.jrxml";

    private boolean isUpdate = false;

    private int rowPhieu = -1;

    private void init() {
        this.setLocationRelativeTo(null);
        this.setModal(false);
        this.initDialogOther();

        pnlThanhTieuDe.setVisible(false);
        pnlThanhTieuDeCTP.setVisible(false);
        pnlThanhTieuDeQR.setVisible(false);

        this.formatTable();

        this.refreshForm();

        this.fillToComboBoxTimKiemCTPhieu();
        this.fillToComboBoxTimKiemPhieu();
        tabs.setSelectedIndex(1);

        this.updateStatus();

        this.timer.start();
    }

    void initDialogOther() {
        ChiTietPhieuDialog.pack();
        ChiTietPhieuDialog.setLocationRelativeTo(null);
        ChiTietPhieuDialog.setModalityType(ModalityType.APPLICATION_MODAL);
        ChiTietPhieuDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

        QRCodeDialog.pack();
        QRCodeDialog.setLocationRelativeTo(null);
        QRCodeDialog.setModalityType(ModalityType.APPLICATION_MODAL);
        QRCodeDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
    }

    // Đổ dữ liệu phiếu nhập xuất
    private void fillToTablePhieu() {
        tblPhieu.setRowSorter(null);
        modelPhieu.setRowCount(0);

        new SwingWorker<DefaultTableModel, Void>() {
            @Override
            protected DefaultTableModel doInBackground() throws Exception {
                List<Phieu> list = pDAO.selectAll();
                int i = 1;
                for (Phieu p : list) {
                    int maLT = ctpDAO.getOnlyOneMaLT(p.getMaPhieu());
                    if (maLT == 0) {
                        continue;
                    }
                    int maKho = ltDAO.getMaKho(maLT);
                    Kho k = kDAO.selectByID(maKho);
                    modelPhieu.addRow(new Object[]{
                        i++,
                        dtDAO.getTenDT(p.getMaDT()),
                        p.isLoai() ? "Nhập" : "Xuất",
                        k.getMaKho(),
                        p.isTrangThai() ? "Đã hoàn thành" : "Chưa hoàn thành",
                        p.getNgThucHien(),
                        p.getNgHoanThanh(),
                        p.getNgayLap(),
                        p
                    });
                }
                return modelPhieu;
            }
        }.execute();
    }

    // Đổ dữ liệu chi tiết phiếu
    private void fillToTableCTPhieu() {
        listCT.clear();
        tblCTPhieu_main.setRowSorter(null);
        tblCTPhieu_sub.setRowSorter(null);
        modelCTPhieu.setRowCount(0);
        Kho k = (Kho) cboKho.getSelectedItem();

        try {
            String maPhieu = tblCTPhieu_sub.getToolTipText();
            if (maPhieu == null) {
                return;
            }
            List<ChiTietPhieu> list = ctpDAO.selectByMaPhieuTest(Integer.parseInt(maPhieu));
            if (list.size() < 1) {
                return;
            }
            int i = 1;
            double tongTien = 0;
            double ton = 0;
            for (ChiTietPhieu ctp : list) {
                String maHH = ltDAO.selectByID(ctp.getMaLT()).getMaHH();
                HangHoa hh = hhDAO.selectByID(maHH);
                tongTien += ctp.getSoLuong() * ctp.getDonGia();
                ton = ltDAO.getSoLuong(k.getMaKho(), hh.getMaHH());
                if (rdoPhieuXuat.isSelected() && ctp.isTrangThai()) {
                    ton += ctp.getSoLuong();
                }

                modelCTPhieu.addRow(new Object[]{
                    i++,
                    hh,
                    ctp.getSoLuong(),
                    ctp.getDonGia(),
                    ctp.getMaCTP(),
                    ctp.getThanhTien(),
                    ctp.isTrangThai(),
                    ton,
                    ltDAO.getMaLT(k.getMaKho(), hh.getMaHH())
                });
                listCT.add(hh);
            }
            tblCTPhieu_sub.setModel(modelCTPhieu);
            tblCTPhieu_main.setModel(modelCTPhieu);
            lblTongTien.setText(XNumber.toString(tongTien, numFormat));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu ComboBox loại đối tác
    private void fillToComboBoxLoaiDT() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        try {
            List<LoaiDoiTac> list = ldtDAO.selectAll();
            for (LoaiDoiTac ldt : list) {
                model.addElement(ldt);
            }
            cboLoaiDT.setModel(model);
            fillToComboBoxDoiTac();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu ComboBox đối tác
    private void fillToComboBoxDoiTac() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        try {
            LoaiDoiTac ldt = (LoaiDoiTac) cboLoaiDT.getSelectedItem();
            List<DoiTac> list = dtDAO.selectByLoaiDT(ldt.getMaLDT());
            for (DoiTac dt : list) {
                model.addElement(dt);
            }
            cboDoiTac.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu vào ComboBox kho
    private void fillToComboBoxKho() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        try {
            List<Kho> list = kDAO.selectAll();
            for (Kho k : list) {
                model.addElement(k);
            }
            cboKho.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu ComboBox loại hàng hoá
    private void fillToComboBoxLoaiHH() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        try {
            List<LoaiHangHoa> list = lhhDAO.selectAll();
            for (LoaiHangHoa lhh : list) {
                model.addElement(lhh);
            }
            cboLoaiHH.setModel(model);
            fillToComboBoxHangHoa();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu ComboBox hàng hoá
    private void fillToComboBoxHangHoa() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        if (rdoPhieuNhap.isSelected()) {

        }
        try {
            LoaiHangHoa lhh = (LoaiHangHoa) cboLoaiHH.getSelectedItem();
            List<HangHoa> list;

            if (rdoPhieuNhap.isSelected()) {
                list = hhDAO.selectByLoaiHangHoa(lhh.getMaLHH());
            } else {
                list = hhDAO.selectByLoaiHangHoaCoLT(lhh.getMaLHH(), ((Kho) cboKho.getSelectedItem()).getMaKho());
            }

            for (HangHoa hh : list) {
                model.addElement(hh);
            }
            cboHangHoa.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Lấy dữ liệu từ form phiếu nhập
    private Phieu getFormPhieu() {
        LoaiDoiTac ldt = (LoaiDoiTac) cboLoaiDT.getSelectedItem();
        Phieu p = new Phieu();
        p.setLoai(rdoPhieuNhap.isSelected());
        p.setMaDT(ldt.getMaLDT());
        p.setMaNV(txtMaNV.getToolTipText());
        if (!chkChuyenHang.isSelected()) {
            p.setNgHoanThanh(null);
        } else {
            p.setNgHoanThanh(txtNgayHoanThanh.getDate());
        }
        p.setNgThucHien(txtNgayThucHien.getDate());
        p.setNgayLap(XDate.toDate(txtNgayLap.getText(), dateFormat + "(hh:MM:ss)"));
        p.setTrangThai(chkChuyenHang.isSelected());
        p.setGhiChu(txtGhiChu.getText());
        return p;
    }

    // Nhập dữ liệu vào form phiếu nhập
    private void setFormPhieu(Phieu p) {
        DoiTac dt = dtDAO.selectByID(p.getMaDT());
        LoaiDoiTac ldt = ldtDAO.selectByID(dt.getMaLDT());
        NhanVien nv = nvDAO.selectByID(p.getMaNV());
        Kho kho = kDAO.selectByID((Integer) modelPhieu.getValueAt(rowPhieu, 3));
        cboLoaiDT.setSelectedItem(ldt);
        cboDoiTac.setSelectedItem(dt);
        txtMaNV.setToolTipText(p.getMaNV());
        txtMaNV.setText(nv.getTenNV());
        txtNgayLap.setText(XDate.toString(p.getNgayLap(), dateFormat + "(hh:mm:ss)"));
        txtNgayThucHien.setDate(p.getNgThucHien());
        txtNgayHoanThanh.setDate(p.getNgHoanThanh());
        cboKho.setSelectedItem(kho);

        txtDaThanhToan.setText(XNumber.toString(p.getSoTienThanhToan(), numFormat));

        if (p.isLoai()) {
            rdoPhieuNhap.setSelected(true);
        } else {
            rdoPhieuXuat.setSelected(true);
        }
        chkThanhToan.setSelected(p.isTinhTrangThanhToan());
        chkChuyenHang.setSelected(p.isTrangThai());
        txtGhiChu.setText(p.getGhiChu());
        tblCTPhieu_sub.setToolTipText(p.getMaPhieu().toString());

        this.fillToTableCTPhieu();
    }

    // Lấy dữ liệu từ form chi tiết phiếu
    private ChiTietPhieu getFormCTPhieu(int row) {
        ChiTietPhieu ctp = new ChiTietPhieu();
        //ctp.setSoLuong(XNumber.toDouble((String) modelCTPhieu.getValueAt(row, 2), numFormat));
        //ctp.setDonGia(XNumber.toDouble((String) modelCTPhieu.getValueAt(row, 3), numFormat));
        ctp.setSoLuong((double) modelCTPhieu.getValueAt(row, 2));
        ctp.setDonGia((double) modelCTPhieu.getValueAt(row, 3));
        ctp.setMaCTP((Integer) modelCTPhieu.getValueAt(row, 4));
        ctp.setMaLT((Integer) modelCTPhieu.getValueAt(row, 8));
        return ctp;
    }

    // Thêm hàng hóa vào bảng Chi tiết
    ArrayList listCT = new ArrayList();

    private void insertCT() {
        HangHoa hh = (HangHoa) cboHangHoa.getSelectedItem();
        Kho k = (Kho) cboKho.getSelectedItem();

        if (listCT.contains(hh) || cboHangHoa.getItemCount() == 0) {
            return;
        }

        modelCTPhieu.addRow(new Object[]{
            tblCTPhieu_main.getRowCount() + 1,
            hh,
            0.0,
            hh.getDonGia(),
            0,
            0.0,
            false,
            ltDAO.getSoLuong(k.getMaKho(), hh.getMaHH()),
            ltDAO.getMaLT(k.getMaKho(), hh.getMaHH())
        });
        listCT.add(hh);
    }

    //thay đổi kho 
    private void updateCT() {
        Kho k = (Kho) cboKho.getSelectedItem();
        HangHoa hh;
        for (int i = 0; i < tblCTPhieu_sub.getRowCount(); i++) {
            hh = (HangHoa) modelCTPhieu.getValueAt(i, 1);
            modelCTPhieu.setValueAt(ltDAO.getSoLuong(k.getMaKho(), hh.getMaHH()), i, 7);
        }
    }

    // Xóa hàng hóa khỏi chi tiết
    private ArrayList<ChiTietPhieu> delCTP = new ArrayList<>();

    private void deleteCT() {
        int delRow = tblCTPhieu_main.getSelectedRow();
        int maCTP = (int) modelCTPhieu.getValueAt(delRow, 4);

        if(maCTP == 0) return;
        
        listCT.remove((HangHoa) modelCTPhieu.getValueAt(delRow, 1));

        if (isUpdate) {
            delCTP.add(ctpDAO.selectByID(maCTP));
        }
        modelCTPhieu.removeRow(delRow);

        for (int i = 0; i < modelCTPhieu.getRowCount(); i++) {
            modelCTPhieu.setValueAt(i + 1, i, 0);
        }
    }

    // nhap luu tru
    private void insertLuuTru(int row) {
        ChiTietPhieu ctp;

        if (rdoPhieuNhap.isSelected()) {
            ctp = getFormCTPhieu(row);

            spDAO.insertNhapTest(ctp.getMaCTP());
        } else {
            ctp = getFormCTPhieu(row);

            spDAO.insertXuatTest(ctp.getMaCTP());
        }
    }

    // xoa luu tru
    private void deleteLuuTru(int row) {
        ChiTietPhieu ctp;

        if (rdoPhieuNhap.isSelected()) {
            ctp = getFormCTPhieu(row);

            spDAO.deleteNhapTest(ctp.getMaCTP());
        } else {
            ctp = getFormCTPhieu(row);

            spDAO.deleteXuatTest(ctp.getMaCTP());
        }
    }

    // Nhập phiếu mới vào hệ thống và cập nhật thông tin hàng hóa
    private void insertPhieu() {
        if (!isValidated()) {
            return;
        }

        int rows = modelCTPhieu.getRowCount();

        if (rows < 1) {
            MsgBox.alert(this, "Danh sách hàng hoá trống!");
            return;
        }

        Phieu phieu = this.getFormPhieu();
        ChiTietPhieu ctp;
        pDAO.insert(phieu);

        int maPhieu = pDAO.getMaPhieuByNVandCreatedDate(txtMaNV.getToolTipText(), XDate.toDate(txtNgayLap.getText(), dateFormat + "(hh:MM:ss)"));
        int maKho = ((Kho) cboKho.getSelectedItem()).getMaKho();
        int maLT;

        LuuTru lt = new LuuTru();
        lt.setSoLuong(0.0);
        lt.setMaKho(maKho);

        for (int i = 0; i < rows; i++) {
            ctp = getFormCTPhieu(i);
            HangHoa hh = (HangHoa) modelCTPhieu.getValueAt(i, 1);
            maLT = ctp.getMaLT();
            if (maLT == 0) {
                lt.setMaHH(hh.getMaHH());
                ltDAO.insert(lt);
                ctp.setMaLT(ltDAO.getMaLT(maKho, hh.getMaHH()));
            }
            ctp.setMaPhieu(Integer.valueOf(maPhieu));
            ctpDAO.insert(ctp);
            insertLuuTru(i);
        }

        this.fillToTableCTPhieu();

        if (chkChuyenHang.isSelected()) {
            for (int i = 0; i < rows; i++) {
                insertLuuTru(i);
            }
        }
        
        this.fillToTablePhieu();

        MsgBox.alert(this, "Thêm phiếu " + (phieu.isLoai() ? "nhập" : "xuất") + " thành công!");
    }

    // Cập nhật phiếu vào hệ thống và cập nhật thông tin hàng hóa
    private void updatePhieu() {
        if (!isValidated()) {
            return;
        }
        Phieu phieu = this.getFormPhieu();
        String maPhieu = tblCTPhieu_sub.getToolTipText();
        System.out.println(maPhieu);

        if (maPhieu == null) {
            return;
        }

        phieu.setMaPhieu(Integer.valueOf(maPhieu));
        pDAO.update(phieu);
        
        if (phieu.isLoai()) {
            for (ChiTietPhieu ctpDel : delCTP) {
                spDAO.deleteNhapTest(ctpDel.getMaCTP());
                ctpDAO.delete(ctpDel.getMaCTP());
            }
        } else {
            for (ChiTietPhieu ctpDel : delCTP) {
                spDAO.deleteXuatTest(ctpDel.getMaCTP());
                ctpDAO.delete(ctpDel.getMaCTP());
            }
        }
        delCTP.clear();

        ChiTietPhieu ctp;
        int rows = modelCTPhieu.getRowCount();
        int maKho = ((Kho) cboKho.getSelectedItem()).getMaKho();
        LuuTru lt = new LuuTru();
        lt.setSoLuong(0.0);
        lt.setMaKho(maKho);

        if (chkChuyenHang.isSelected()) {
            System.out.println("ssss");
            for (int i = 0; i < rows; i++) {
                ctp = getFormCTPhieu(i);
                ctp.setMaPhieu(phieu.getMaPhieu());
                if (ctp.getMaCTP() != 0) {
                    deleteLuuTru(i);
                    ctpDAO.update(ctp);
                    insertLuuTru(i);
                } else {
                    System.out.println("aaaffffffffffff");
                    ctp = getFormCTPhieu(i);
                    HangHoa hh = (HangHoa) modelCTPhieu.getValueAt(i, 1);
                    int maLT = ctp.getMaLT();
                    if (maLT == 0) {
                        lt.setMaHH(hh.getMaHH());
                        ltDAO.insert(lt);
                        ctp.setMaLT(ltDAO.getMaLT(maKho, hh.getMaHH()));
                    }
                    ctp.setMaPhieu(Integer.valueOf(maPhieu));
                    ctpDAO.insert(ctp);
                    modelCTPhieu.setValueAt(ctpDAO.getMaCTP(Integer.valueOf(maPhieu), ctp.getMaLT()),i,4);
                    insertLuuTru(i);
                }
            }

        } else {
            System.out.println("aaaa");
            for (int i = 0; i < rows; i++) {
                ctp = getFormCTPhieu(i);
                ctp.setMaPhieu(phieu.getMaPhieu());
                if (ctp.getMaCTP() != 0) {
                    deleteLuuTru(i);
                    ctpDAO.update(ctp);
                } else {
                    ctp = getFormCTPhieu(i);
                    HangHoa hh = (HangHoa) modelCTPhieu.getValueAt(i, 1);
                    int maLT = ctp.getMaLT();
                    if (maLT == 0) {
                        lt.setMaHH(hh.getMaHH());
                        ltDAO.insert(lt);
                        ctp.setMaLT(ltDAO.getMaLT(maKho, hh.getMaHH()));
                    }
                    ctp.setMaPhieu(Integer.valueOf(maPhieu));
                    ctpDAO.insert(ctp);
                }
            }
        }

        this.fillToTablePhieu();
        this.fillToTableCTPhieu();

        MsgBox.alert(this, "Cập nhật phiếu " + (phieu.isLoai() ? "nhập" : "xuất") + " thành công!");
    }

    // Xoá phieu khoi he thong
    private void deletePhieu() {
        Phieu phieu = this.getFormPhieu();
        String maPhieu = tblCTPhieu_sub.getToolTipText();

        if (maPhieu == null) {
            return;
        }

        int rows = modelCTPhieu.getRowCount();
        ChiTietPhieu ctp;

        if (phieu.isLoai()) {
            for (ChiTietPhieu ctpDel : delCTP) {
                spDAO.deleteNhapTest(ctpDel.getMaCTP());
                ctpDAO.delete(ctpDel.getMaCTP());
            }
        } else {
            for (ChiTietPhieu ctpDel : delCTP) {
                spDAO.deleteXuatTest(ctpDel.getMaCTP());
                ctpDAO.delete(ctpDel.getMaCTP());
            }
        }

        for (int i = 0; i < rows; i++) {

            ctp = getFormCTPhieu(i);

            if (ctp.getMaCTP() != 0) {
                deleteLuuTru(i);
                ctpDAO.delete(ctp.getMaCTP());
            }
        }

        pDAO.delete(Integer.valueOf(maPhieu));
        
        this.clearForm();
        this.fillToTablePhieu();

        MsgBox.alert(this, "Xóa phiếu " + (phieu.isLoai() ? "nhập" : "xuất") + " thành công!");
    }

    // Xóa trắng form
    private void clearForm() {
        Date NgayLap = new Date(System.currentTimeMillis());

        rdoPhieuNhap.setEnabled(true);
        rdoPhieuXuat.setEnabled(true);
        rdoPhieuNhap.setSelected(true);

        cboLoaiDT.setSelectedIndex(0);
        cboDoiTac.setSelectedIndex(0);
        txtMaNV.setToolTipText("huynq"); //Auth.user.getMaNV()
        txtMaNV.setText("Nguyễn Quang Huy");//Auth.user.getTenNV()
        txtNgayLap.setText(XDate.toString(NgayLap, dateFormat + "(hh:MM:ss)"));
        txtNgayThucHien.setDate(new Date());
        txtNgayHoanThanh.setDate(new Date());
        txtGhiChu.setText(null);
        cboKho.setSelectedIndex(0);
        chkChuyenHang.setSelected(false);
        tblCTPhieu_sub.setToolTipText(null);
        lblQRCodeImage.setIcon(null);
        this.fillToTableCTPhieu();

        this.rowPhieu = -1;

        this.delCTP.clear();

        isUpdate = false;
        this.updateStatus();
    }

    // Cập nhật giao diện form theo hoạt động
    private void updateStatus() {
        // Kiểm tra trạng thái chọn hàng trên bảng
        boolean edit = (this.rowPhieu >= 0);
        boolean first = (this.rowPhieu == 0);
        boolean last = (this.rowPhieu == tblPhieu.getRowCount() - 1);

        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnXuatMaPhieu.setEnabled(edit);
        btnXuatFile.setEnabled(edit);
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);

        // Kiểm tra vai trò người dùng, hạn chế quyền thủ kho
        boolean isManager = Auth.isManager();
        //btnXoa.setVisible(isManager);
        //btnXoaCTP.setEnabled(isManager);

        tblPhieu.setAutoCreateRowSorter(tblPhieu.getRowCount() > 0);
        tblCTPhieu_sub.setAutoCreateRowSorter(tblCTPhieu_sub.getRowCount() > 0);
        tblCTPhieu_main.setAutoCreateRowSorter(tblCTPhieu_main.getRowCount() > 0);

        // Kiểm tra trạng thái hoàn thành phiếu
        boolean isCompleted = chkChuyenHang.isSelected();
        if (!isCompleted) {
            txtNgayHoanThanh.setDate(null);
        }
        txtNgayHoanThanh.setEnabled(isCompleted);

        // Cập nhật trạng thái update phiếu
        cboKho.setEnabled(!isUpdate);
        rdoPhieuNhap.setEnabled(!isUpdate);
        rdoPhieuXuat.setEnabled(!isUpdate);

    }

    // Định dạng bảng
    private void formatTable() {
        // Dữ liệu hàng tiêu đề bảng
        String headerPhieu[] = {"STT", "ĐỐI TÁC", "LOẠI", "KHO", "TRẠNG THÁI",
            "NGÀY THỰC HIỆN", "NGÀY HOÀN THÀNH", "NGÀY LẬP", "NGƯỜI LẬP"};
        this.modelPhieu = new DefaultTableModel(headerPhieu, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (modelPhieu.getRowCount() < 1) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        String headerCTPhieu[] = {"STT", "TÊN HÀNG HÓA", "SỐ LƯỢNG", "ĐƠN GIÁ", "MÃ CHI TIẾT PHIẾU", "THÀNH TIỀN", "TRẠNG THÁI", "LƯU TRỮ", "MÃ LƯU TRỮ"};
        this.modelCTPhieu = new DefaultTableModel(headerCTPhieu, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 2 || column == 3) {
                    return true;
                }
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (modelCTPhieu.getRowCount() < 1) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };

        tblPhieu.setModel(modelPhieu);
        tblCTPhieu_sub.setModel(modelCTPhieu);
        tblCTPhieu_main.setModel(modelCTPhieu);

        // Giấu cột
        tblCTPhieu_main.getColumnModel().removeColumn(tblCTPhieu_main.getColumnModel().getColumn(8));
        tblCTPhieu_sub.getColumnModel().removeColumn(tblCTPhieu_sub.getColumnModel().getColumn(8));
        tblCTPhieu_main.getColumnModel().removeColumn(tblCTPhieu_main.getColumnModel().getColumn(7));
        tblCTPhieu_sub.getColumnModel().removeColumn(tblCTPhieu_sub.getColumnModel().getColumn(7));
        tblCTPhieu_main.getColumnModel().removeColumn(tblCTPhieu_main.getColumnModel().getColumn(6));
        tblCTPhieu_sub.getColumnModel().removeColumn(tblCTPhieu_sub.getColumnModel().getColumn(6));
        tblCTPhieu_main.getColumnModel().removeColumn(tblCTPhieu_main.getColumnModel().getColumn(4));
        tblCTPhieu_sub.getColumnModel().removeColumn(tblCTPhieu_sub.getColumnModel().getColumn(4));

        // Chỉnh độ dài các cột bảng Phiếu
        tblPhieu.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblPhieu.getColumnModel().getColumn(1).setPreferredWidth(257);
        tblPhieu.getColumnModel().getColumn(2).setPreferredWidth(35);
        tblPhieu.getColumnModel().getColumn(3).setPreferredWidth(35);
        tblPhieu.getColumnModel().getColumn(4).setPreferredWidth(95);
        tblPhieu.getColumnModel().getColumn(5).setPreferredWidth(90);
        tblPhieu.getColumnModel().getColumn(6).setPreferredWidth(100);
        tblPhieu.getColumnModel().getColumn(7).setPreferredWidth(125);
        tblPhieu.getColumnModel().getColumn(8).setPreferredWidth(60);

        // Chỉnh độ dài các cột bảng Chi tiết phiếu
        tblCTPhieu_main.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblCTPhieu_main.getColumnModel().getColumn(1).setPreferredWidth(274);
        tblCTPhieu_main.getColumnModel().getColumn(2).setPreferredWidth(85);
        tblCTPhieu_main.getColumnModel().getColumn(3).setPreferredWidth(85);
        tblCTPhieu_main.getColumnModel().getColumn(3).setPreferredWidth(85);
        tblCTPhieu_sub.getColumnModel().getColumn(0).setPreferredWidth(35);
        tblCTPhieu_sub.getColumnModel().getColumn(1).setPreferredWidth(395);
        tblCTPhieu_sub.getColumnModel().getColumn(2).setPreferredWidth(120);
        tblCTPhieu_sub.getColumnModel().getColumn(3).setPreferredWidth(120);
        tblCTPhieu_sub.getColumnModel().getColumn(4).setPreferredWidth(120);

        // Cài đặt định dạng cho bảng
        tblPhieu.getColumnModel().getColumn(5).setCellRenderer(new DateRenderer(dateFormat));
        tblPhieu.getColumnModel().getColumn(6).setCellRenderer(new DateRenderer(dateFormat));
        tblPhieu.getColumnModel().getColumn(7).setCellRenderer(new DateRenderer(dateFormat + "(hh:MM:ss)"));

        // Chỉnh độ rộng hàng trong bảng
        tblCTPhieu_sub.setRowHeight(25);
        tblCTPhieu_main.setRowHeight(25);
        tblPhieu.setRowHeight(25);

        // Thêm chức năng nhập cho bảng
        SpinnerEditor spinnerSoLuong = new SpinnerEditor(0.0, 0.0, 100000.0, 1.0);
        SpinnerEditor spinnerDonGia = new SpinnerEditor(0.0, 0.0, 1000000000.0, 1000.0);

        tblCTPhieu_main.getColumnModel().getColumn(2).setCellEditor(spinnerSoLuong);
        tblCTPhieu_main.getColumnModel().getColumn(3).setCellEditor(spinnerDonGia);
        tblCTPhieu_sub.getColumnModel().getColumn(2).setCellEditor(spinnerSoLuong);
        tblCTPhieu_sub.getColumnModel().getColumn(3).setCellEditor(spinnerDonGia);

        // check value of the cell
        tblCTPhieu_main.getColumnModel().getColumn(2).getCellEditor().addCellEditorListener(new CellEditorListener() {
            @Override
            public void editingStopped(ChangeEvent e) {
                int row = tblCTPhieu_sub.getSelectedRow();
                if (row < 0 || rdoPhieuNhap.isSelected() || ChiTietPhieuDialog.isFocused()) {
                    return;
                }

                double Ton = (Double) modelCTPhieu.getValueAt(row, 7);

                SpinnerEditor c = (SpinnerEditor) e.getSource();

                if (c.getNewValue() > Ton && rdoPhieuXuat.isSelected()) {
                    MsgBox.alert(pnlBackground, "Không đủ hàng tồn để xuất!");
                    modelCTPhieu.setValueAt(c.getOldValue(), row, 2);
                }
            }

            @Override
            public void editingCanceled(ChangeEvent e) {

            }
        });

        tblCTPhieu_sub.getColumnModel().getColumn(2).getCellEditor().addCellEditorListener(new CellEditorListener() {
            @Override
            public void editingStopped(ChangeEvent e) {
                int row = tblCTPhieu_sub.getSelectedRow();
                if (row < 0 || rdoPhieuNhap.isSelected() || !ChiTietPhieuDialog.isFocused()) {
                    return;
                }

                double Ton = (Double) modelCTPhieu.getValueAt(row, 7);

                SpinnerEditor c = (SpinnerEditor) e.getSource();

                if (c.getNewValue() > Ton && rdoPhieuXuat.isSelected()) {
                    MsgBox.alert(pnlBackground, "Không đủ hàng tồn để xuất!");
                    modelCTPhieu.setValueAt(c.getOldValue(), row, 2);
                }
            }

            @Override
            public void editingCanceled(ChangeEvent e) {
            }
        });
    }

    // Đổ combobox tìm kiếm chi tiết phiếu
    private void fillToComboBoxTimKiemCTPhieu() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTimKiemCTPhieu.getModel();
        model.removeAllElements();
        for (int i = 0; i < tblCTPhieu_sub.getColumnCount(); i++) {
            model.addElement(tblCTPhieu_sub.getColumnName(i));
        }
    }

    // Lọc bảng theo từ khoá chi tiết phiếu
    private void searchCTPhieu() {
        TableRowSorter<TableModel> sorterCTPhieu = new TableRowSorter<TableModel>(modelCTPhieu);
        tblCTPhieu_sub.setRowSorter(sorterCTPhieu);

        int columnFilter = cboTimKiemCTPhieu.getSelectedIndex();
        String keyword = txtTimKiemCTPhieu.getText().toLowerCase();

        sorterCTPhieu.setStringConverter(new TableStringConverter() {
            @Override
            public String toString(TableModel model, int row, int column) {
                return model.getValueAt(row, column).toString().toLowerCase();
            }
        });

        RowFilter<TableModel, Object> rf = null;
        try {
            rf = RowFilter.regexFilter(keyword.toLowerCase(), columnFilter);
        } catch (Exception e) {
            return;
        }
        sorterCTPhieu.setRowFilter(rf);
    }

    // Đổ combobox tìm kiếm phiếu
    private void fillToComboBoxTimKiemPhieu() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTimKiemPhieu.getModel();
        model.removeAllElements();
        for (int i = 0; i < tblPhieu.getColumnCount(); i++) {
            model.addElement(tblPhieu.getColumnName(i));
        }
    }

    // Lọc bảng theo từ khoá phiếu
    private void searchPhieu() {
        TableRowSorter<TableModel> sorterCTPhieu = new TableRowSorter<TableModel>(modelPhieu);
        tblPhieu.setRowSorter(sorterCTPhieu);

        int columnFilter = cboTimKiemPhieu.getSelectedIndex();
        String keyword = txtTimKiemPhieu.getText();

        sorterCTPhieu.setStringConverter(new TableStringConverter() {
            @Override
            public String toString(TableModel model, int row, int column) {
                return model.getValueAt(row, column).toString().toLowerCase();
            }
        });

        RowFilter<TableModel, Object> rf = null;
        try {
            rf = RowFilter.regexFilter(keyword.toLowerCase(), columnFilter);
        } catch (Exception e) {
            return;
        }
        sorterCTPhieu.setRowFilter(rf);
    }

    // Hiển thị phiếu đầu danh sách
    private void first() {
        this.rowPhieu = 0;
        this.edit();
    }

    // Hiển thị phiếu kế trước
    private void prev() {
        if (this.rowPhieu > 0) {
            this.rowPhieu--;
            this.edit();
        }
    }

    // Hiển thị phiếu kế tiếp
    private void next() {
        if (this.rowPhieu < (tblPhieu.getRowCount() - 1)) {
            this.rowPhieu++;
            this.edit();
        }
    }

    // Hiển thị phiếu cuối danh sách
    private void last() {
        this.rowPhieu = tblPhieu.getRowCount() - 1;
        this.edit();
    }

    // Hiển thị dữ liệu của phiếu được chọn lên form
    private void edit() {
        delCTP.clear();

        Phieu phieu = (Phieu) this.modelPhieu.getValueAt(rowPhieu, 8);

        this.setFormPhieu(phieu);
        tabs.setSelectedIndex(0);
        cboTimKiemCTPhieu.setSelectedIndex(0);
        txtTimKiemCTPhieu.setText("");

        isUpdate = true;
        this.updateStatus();
    }

    // Tạo mã QR chứa mã phiếu
    private void createQRCode() {
        if (rowPhieu < 0) {
            MsgBox.alert(this, "Chưa chọn chi tiết phiếu!");
        } else {
            Phieu phieu = (Phieu) this.modelPhieu.getValueAt(rowPhieu, 8);
            try {
                BufferedImage bi = QRCode.generateQRCodeImage(String.valueOf(phieu.getMaPhieu()));
                lblQRCodeImage.setIcon(new ImageIcon(bi));
                QRCodeDialog.setVisible(true);
            } catch (WriterException ex) {
                ex.printStackTrace();
            }
        }
    }

    // Xuất phiếu
    private void exportReport() {
        if (rowPhieu < 0) {
            MsgBox.alert(this, "Chưa chọn chi tiết phiếu!");
            return;
        }

        try {
            Phieu phieu = (Phieu) this.modelPhieu.getValueAt(rowPhieu, 8);

            // Truyền tham số vào báo cáo
            HashMap parameters = new HashMap();
            parameters.put("MAPHIEU", phieu.getMaPhieu());

            String fileName = "";

            if (phieu.isLoai()) {
                fileName = "PhieuNhapSo" + phieu.getMaPhieu();
            } else {
                fileName = "PhieuXuatSo" + phieu.getMaPhieu();
            }
            ExporterReport.exportFile(fileName, reportPath, parameters);
        } catch (SQLException | JRException | IOException e) {
            MsgBox.alert(this, "Xuất file thất bại!");
            e.printStackTrace();
        }
    }

    // In báo cáo
    private void printReport() {
        if (rowPhieu < 0) {
            MsgBox.alert(this, "Chưa chọn chi tiết phiếu!");
            return;
        }

        try {
            Phieu phieu = (Phieu) this.modelPhieu.getValueAt(rowPhieu, 8);

            // Truyền tham số vào báo cáo
            HashMap parameters = new HashMap();
            parameters.put("MAPHIEU", phieu.getMaPhieu());

            String fileName = "";

            if (phieu.isLoai()) {
                fileName = "PhieuNhapSo" + phieu.getMaPhieu();
            } else {
                fileName = "PhieuXuatSo" + phieu.getMaPhieu();
            }
            ExporterReport.printReport(fileName, reportPath, parameters);
        } catch (SQLException | JRException e) {
            MsgBox.alert(this, "In phiếu thất bại!");
            e.printStackTrace();
        }
    }

    // Cập nhật thành tiền khi sửa số lượng hoặc đơn giá trên bảng
    private void updateThanhTien(int row) {
        if (row < 0) {
            return;
        }

        double soLuong = (double) modelCTPhieu.getValueAt(row, 2);
        double donGia = (double) modelCTPhieu.getValueAt(row, 3);

        modelCTPhieu.setValueAt(soLuong * donGia, row, 5);

        double tongTien = 0;
        for (int i = 0; i < modelCTPhieu.getRowCount(); i++) {
            tongTien += (double) modelCTPhieu.getValueAt(i, 5);
        }
        lblTongTien.setText(XNumber.toString(tongTien, numFormat));
    }

    // Xác thực form
    private boolean isValidated() {
        if (txtNgayThucHien.getDate() == null) {
            MsgBox.alert(this, "Chưa nhập ngày thực hiện!");
            txtNgayThucHien.requestFocus();
            return false;
        }

        Date ngayLap = XDate.toDate(txtNgayLap.getText(), dateFormat);
        if (txtNgayThucHien.getDate().before(ngayLap)) {
            MsgBox.alert(this, "Ngày kiểm kho không nhỏ hơn ngày lập phiếu!");
            txtNgayThucHien.requestFocus();
            return false;
        }

        if (chkChuyenHang.isSelected()) {
            if (txtNgayHoanThanh.getDate() == null) {
                MsgBox.alert(this, "Chưa nhập ngày hoàn thành!");
                txtNgayThucHien.requestFocus();
                return false;
            }

            Date ngayHoanThanh = txtNgayHoanThanh.getDate();
            if (ngayHoanThanh.before(txtNgayThucHien.getDate())) {

                txtNgayThucHien.requestFocus();
                return false;
            }
        }
        return true;
    }

    // Đỗ lại dữ liệu 
    public void refreshForm() {
        this.fillToComboBoxKho();
        this.fillToTablePhieu();
        this.fillToComboBoxLoaiDT();
        this.fillToComboBoxLoaiHH();

        this.timer.restart();
    }

    // sau hai phút tải lại dữ liệu
    private Timer timer = new Timer(120000, (e) -> {
        refreshForm();
    });

}
