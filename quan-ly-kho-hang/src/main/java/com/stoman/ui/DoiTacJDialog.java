/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.stoman.dao.DoiTacDAO;
import com.stoman.dao.LoaiDoiTacDAO;
import com.stoman.entity.DoiTac;
import com.stoman.entity.LoaiDoiTac;
import com.stoman.utils.Auth;
import com.stoman.utils.DragPanel;
import com.stoman.utils.MsgBox;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.validator.GenericValidator;

/**
 *
 * @author MinhNH
 */
public class DoiTacJDialog extends javax.swing.JDialog {

    /**
     * Creates new form DoiTacJDialog
     */
    public DoiTacJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlBackground = new javax.swing.JPanel();
        pnlTblDoiTac = new javax.swing.JScrollPane();
        tblDoiTac = new javax.swing.JTable();
        pnlThongTinDoiTac = new javax.swing.JPanel();
        lblTenDT = new javax.swing.JLabel();
        lblDiaChi = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblDienThoai = new javax.swing.JLabel();
        lblVaiTro = new javax.swing.JLabel();
        txtTenDT = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDienThoai = new javax.swing.JTextField();
        rdoKhachHang = new javax.swing.JRadioButton();
        rdoNhaPhanPhoi = new javax.swing.JRadioButton();
        pnlLoaiDoiTac = new javax.swing.JPanel();
        pnlLstLoaiDoiTac = new javax.swing.JScrollPane();
        lstLDT = new javax.swing.JList<>();
        pnlButtonLoaiDT = new javax.swing.JPanel();
        btnThemList = new javax.swing.JButton();
        btnXoaList = new javax.swing.JButton();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        pnlTimKiem = new javax.swing.JPanel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem2 = new javax.swing.JLabel();
        cboTimKiem = new javax.swing.JComboBox<>();
        pnlDieuHuong = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        pnlThanhTieuDe = new DragPanel(this);
        lblTieuDe = new javax.swing.JLabel();
        lblThoat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StoMan - Quản lý đối tác");
        setUndecorated(true);

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));
        pnlBackground.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 2, 2, new java.awt.Color(0, 153, 204)));

        pnlTblDoiTac.setOpaque(false);

        tblDoiTac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoiTac.setOpaque(false);
        tblDoiTac.setRowHeight(25);
        tblDoiTac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblDoiTac.getTableHeader().setReorderingAllowed(false);
        tblDoiTac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoiTacMouseClicked(evt);
            }
        });
        pnlTblDoiTac.setViewportView(tblDoiTac);

        pnlThongTinDoiTac.setBackground(new java.awt.Color(64, 132, 148));
        pnlThongTinDoiTac.setOpaque(false);

        lblTenDT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenDT.setText("Tên đối tác");

        lblDiaChi.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDiaChi.setText("Địa chỉ");

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblEmail.setText("Email");

        lblDienThoai.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDienThoai.setText("Số điện thoại");

        lblVaiTro.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblVaiTro.setText("Vai trò");

        buttonGroup1.add(rdoKhachHang);
        rdoKhachHang.setSelected(true);
        rdoKhachHang.setText("Khách hàng");
        rdoKhachHang.setOpaque(false);

        buttonGroup1.add(rdoNhaPhanPhoi);
        rdoNhaPhanPhoi.setText("Nhà phân phối");
        rdoNhaPhanPhoi.setOpaque(false);

        pnlLoaiDoiTac.setBackground(new java.awt.Color(64, 132, 148));
        pnlLoaiDoiTac.setOpaque(false);
        pnlLoaiDoiTac.setLayout(new java.awt.BorderLayout());

        lstLDT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstLDTMouseClicked(evt);
            }
        });
        pnlLstLoaiDoiTac.setViewportView(lstLDT);

        pnlLoaiDoiTac.add(pnlLstLoaiDoiTac, java.awt.BorderLayout.CENTER);

        pnlButtonLoaiDT.setOpaque(false);
        pnlButtonLoaiDT.setLayout(new java.awt.GridLayout(1, 0));

        btnThemList.setText("Thêm");
        btnThemList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemListActionPerformed(evt);
            }
        });
        pnlButtonLoaiDT.add(btnThemList);

        btnXoaList.setText("Xoá");
        btnXoaList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaListActionPerformed(evt);
            }
        });
        pnlButtonLoaiDT.add(btnXoaList);

        pnlLoaiDoiTac.add(pnlButtonLoaiDT, java.awt.BorderLayout.PAGE_END);

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnlChucNang.setOpaque(false);
        pnlChucNang.setLayout(new java.awt.GridLayout(0, 1));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnThem);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnXoa);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/edit-property.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnSua);

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/new-document.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnMoi);

        javax.swing.GroupLayout pnlThongTinDoiTacLayout = new javax.swing.GroupLayout(pnlThongTinDoiTac);
        pnlThongTinDoiTac.setLayout(pnlThongTinDoiTacLayout);
        pnlThongTinDoiTacLayout.setHorizontalGroup(
            pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinDoiTacLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlLoaiDoiTac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addComponent(lblDiaChi)
                    .addComponent(lblDienThoai)
                    .addComponent(lblVaiTro)
                    .addComponent(lblTenDT))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinDoiTacLayout.createSequentialGroup()
                        .addComponent(rdoKhachHang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoNhaPhanPhoi)
                        .addGap(0, 58, Short.MAX_VALUE))
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDienThoai)
                    .addComponent(txtTenDT))
                .addGap(15, 15, 15)
                .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        pnlThongTinDoiTacLayout.setVerticalGroup(
            pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinDoiTacLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenDT))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChi))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDienThoai))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinDoiTacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoKhachHang)
                    .addComponent(lblVaiTro)
                    .addComponent(rdoNhaPhanPhoi))
                .addGap(10, 10, 10))
            .addComponent(pnlLoaiDoiTac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlTimKiem.setOpaque(false);

        lblTimKiem.setText("Tìm kiếm");

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        lblTimKiem2.setText("theo");

        cboTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTimKiem2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTimKiemLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboTimKiem, txtTimKiem});

        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem2)
                    .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem))
                .addGap(5, 5, 5))
        );

        pnlDieuHuong.setOpaque(false);
        pnlDieuHuong.setLayout(new java.awt.GridLayout(1, 0));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-start.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnFirst);

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-left-24.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnPrev);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-right.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-end.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnLast);

        pnlThanhTieuDe.setBackground(new java.awt.Color(0, 153, 204));

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setText("STOMAN - QUẢN LÝ ĐỐI TÁC");

        lblThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeLayout = new javax.swing.GroupLayout(pnlThanhTieuDe);
        pnlThanhTieuDe.setLayout(pnlThanhTieuDeLayout);
        pnlThanhTieuDeLayout.setHorizontalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeLayout.setVerticalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDe))
                    .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThanhTieuDe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlTblDoiTac)
                    .addComponent(separator, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlThongTinDoiTac, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(pnlTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(pnlDieuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addComponent(pnlThanhTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pnlThongTinDoiTac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlDieuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(pnlTblDoiTac, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstLDTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstLDTMouseClicked
        // TODO add your handling code here:
        cboTimKiem.setSelectedIndex(0);
        this.fillToTable();
        this.clearForm();
        this.updateStatus();
    }//GEN-LAST:event_lstLDTMouseClicked

    private void btnThemListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemListActionPerformed
        // TODO add your handling code here:
        insertLDT();
    }//GEN-LAST:event_btnThemListActionPerformed

    private void btnXoaListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaListActionPerformed
        // TODO add your handling code here:
        deleteLDT();
    }//GEN-LAST:event_btnXoaListActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void tblDoiTacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoiTacMouseClicked
        // TODO add your handling code here:
        this.row = tblDoiTac.getSelectedRow();
        edit();
    }//GEN-LAST:event_tblDoiTacMouseClicked

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblThoatMouseClicked

    private void lblThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseEntered
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatMouseEntered

    private void lblThoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseExited
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatMouseExited

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void cboTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemActionPerformed
        // TODO add your handling code here:
        if (!lstLDT.isSelectionEmpty()) {
            txtTimKiem.setText("");
            fillToTable();
            clearForm();
        }
    }//GEN-LAST:event_cboTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        if (!lstLDT.isSelectionEmpty()) {
            fillToTable();
            clearForm();
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoiTacJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoiTacJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoiTacJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoiTacJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DoiTacJDialog dialog = new DoiTacJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemList;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaList;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboTimKiem;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblDienThoai;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblTenDT;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTimKiem2;
    private javax.swing.JLabel lblVaiTro;
    private javax.swing.JList<LoaiDoiTac> lstLDT;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlButtonLoaiDT;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlDieuHuong;
    private javax.swing.JPanel pnlLoaiDoiTac;
    private javax.swing.JScrollPane pnlLstLoaiDoiTac;
    private javax.swing.JScrollPane pnlTblDoiTac;
    private javax.swing.JPanel pnlThanhTieuDe;
    private javax.swing.JPanel pnlThongTinDoiTac;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JRadioButton rdoKhachHang;
    private javax.swing.JRadioButton rdoNhaPhanPhoi;
    private javax.swing.JSeparator separator;
    private javax.swing.JTable tblDoiTac;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtTenDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private DoiTacDAO dtDAO;
    private LoaiDoiTacDAO ldtDAO;
    private DefaultTableModel tblModel;
    private int row = -1;

    private void init() {
        setLocationRelativeTo(null);
        this.dtDAO = new DoiTacDAO();
        this.ldtDAO = new LoaiDoiTacDAO();

        this.formatTable();

        this.fillToComboBox();
        this.fillToList();
        this.updateStatus();
    }

    // Đổ dữ liệu loại đối tác vào List
    private void fillToList() {
        DefaultListModel lstModel = new DefaultListModel();
        lstModel.removeAllElements();
        try {
            List<LoaiDoiTac> list = ldtDAO.selectAll();
            for (LoaiDoiTac ldt : list) {
                lstModel.addElement(ldt);
            }
            lstLDT.setModel(lstModel);
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    // Đổ dữ liệu vào bảng
    private void fillToTable() {
        tblModel.setRowCount(0);
        int maLDT = lstLDT.getSelectedValue().getMaLDT();
        String keyword = txtTimKiem.getText();
        int headerIndex = cboTimKiem.getSelectedIndex();
        tblModel.setRowCount(0);
        int i = 1;
        try {
            List<DoiTac> list = dtDAO.selectByKeyword(maLDT, keyword, headerIndex);
            for (DoiTac dt : list) {
                tblModel.addRow(new Object[]{
                    i++,
                    dt.getMaDT(),
                    dt.getTenDT(),
                    dt.getDiaChi(),
                    dt.getEmail(),
                    dt.getSoDT(),
                    dt.isVaiTro() ? "Nhà phân phối" : "Khách hàng"
                });
                tblDoiTac.setModel(tblModel);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    // Đổ tên bảng vào ComboBox tìm kiếm
    private void fillToComboBox() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTimKiem.getModel();
        model.removeAllElements();
        for (int i = 0; i < tblDoiTac.getColumnCount(); i++) {
            model.addElement(tblDoiTac.getColumnName(i));
        }
    }

    // Lấy dữ liệu từ form
    private DoiTac getForm() {
        DoiTac dt = new DoiTac();
        dt.setTenDT(txtTenDT.getText().trim());
        dt.setDiaChi(txtDiaChi.getText());
        dt.setEmail(txtEmail.getText());
        dt.setSoDT(txtDienThoai.getText());
        dt.setVaiTro(rdoKhachHang.isSelected());
        dt.setMaLDT(lstLDT.getSelectedValue().getMaLDT());
        return dt;
    }

    // Nạp dữ liệu vào form
    private void setForm(DoiTac dt) {
        txtTenDT.setText(dt.getTenDT());
        txtDiaChi.setText(dt.getDiaChi());
        txtEmail.setText(dt.getEmail());
        txtDienThoai.setText(dt.getSoDT());
        if (dt.isVaiTro()) {
            rdoNhaPhanPhoi.setSelected(true);
        } else {
            rdoKhachHang.setSelected(true);
        }
    }

    // Xoá trắng form
    private void clearForm() {
        setForm(new DoiTac());
        this.row = -1;
        tblDoiTac.clearSelection();
        this.updateStatus();
    }

    // Cập nhập trạng thái nút và bảng
    private void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblDoiTac.getRowCount() - 1);
        
        boolean isManager = Auth.isManager();
        boolean isTableEmpty = (tblDoiTac.getRowCount() == 0);
        boolean isSelectedList = !lstLDT.isSelectionEmpty();

        // Chỉ bật bộ sắp xếp khi bảng có dữ liệu
        tblDoiTac.setAutoCreateRowSorter(!isTableEmpty);
        // Chọn hàng trên bảng
        if (edit) {
            tblDoiTac.setRowSelectionInterval(row, row);
        }

        btnThem.setEnabled(!edit && isSelectedList && isManager);
        btnSua.setEnabled(edit && isSelectedList && isManager);
        btnXoa.setEnabled(edit && isSelectedList && isManager);
        btnMoi.setEnabled(isSelectedList && isManager);
        btnThemList.setEnabled(isManager);
        btnXoaList.setEnabled(isManager);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }

    // Hiển thị đối tác được chọn từ bảng lên form
    private void edit() {
        int maDT = (int) tblDoiTac.getModel().getValueAt(this.row, 1);
        DoiTac dt = dtDAO.selectByID(maDT);
        this.setForm(dt);
        this.updateStatus();
    }

    // Hiển thị đối tác đầu danh sách trên bảng
    private void first() {
        this.row = 0;
        this.edit();
    }

    // Hiển thị đối tác kế trước
    private void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    // Hiển thị đối tác kế tiếp
    private void next() {
        if (this.row < (tblDoiTac.getRowCount() - 1)) {
            this.row++;
            this.edit();
        }
    }

    // Hiển thị đối tác cuối danh sách trên bảng
    private void last() {
        this.row = tblDoiTac.getRowCount() - 1;
        this.edit();
    }

    // Xác thực dữ liệu hợp lệ trên form
    private boolean isValidated() {
        String tenDT = txtTenDT.getText();
        String diaChi = txtDiaChi.getText();
        String email = txtEmail.getText();
        String dienThoai = txtDienThoai.getText();
        if (tenDT.isEmpty()) {
            MsgBox.alert(this, "Chưa nhập tên đối tác!");
            txtTenDT.requestFocus();
            return false;
        }
        if (diaChi.isEmpty()) {
            MsgBox.alert(this, "Chưa nhập địa chỉ!");
            txtDiaChi.requestFocus();
            return false;
        }
        if (email.isEmpty()) {
            MsgBox.alert(this, "Chưa nhập email!");
            txtEmail.requestFocus();
            return false;
        }
        if (!GenericValidator.isEmail(email)) {
            MsgBox.alert(this, "Email không hợp lệ!");
            txtEmail.requestFocus();
            return false;
        }
        if (dienThoai.isEmpty()) {
            MsgBox.alert(this, "Chưa nhập số điện thoại");
            txtDienThoai.requestFocus();
            return false;
        }
        if (!dienThoai.matches("((84)|(0))\\d{9}")) {
            MsgBox.alert(this, "Số điện thoại không hợp lệ!");
            txtEmail.requestFocus();
            return false;
        }
        return true;
        
    }

    // Thêm loại đối tác vào danh sách
    private void insertLDT() {
        String tenLDT = MsgBox.prompt(this, "Nhập tên loại đối tác mới:");
        if (tenLDT != null && !tenLDT.isEmpty()) {
            LoaiDoiTac loaiDT = new LoaiDoiTac(tenLDT);
            try {
                ldtDAO.insert(loaiDT);
                this.fillToList();
                this.clearForm();
                tblModel.setRowCount(0);
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
                e.printStackTrace();
            }
        }
    }

    // Xoá loại đối tác khỏi danh sách
    private void deleteLDT() {
        if (lstLDT.isSelectionEmpty()) {
            MsgBox.alert(this, "Chưa chọn loại đối tác!");
        } else if (MsgBox.confirm(this, "Bạn chắc chắn muốn xoá loại đối tác này?")) {
            LoaiDoiTac ldt = lstLDT.getSelectedValue();
            try {
                ldtDAO.delete(ldt.getMaLDT());
                this.fillToList();
                this.clearForm();
                tblModel.setRowCount(0);
                MsgBox.alert(this, "Xoá thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xoá thất bại!");
                e.printStackTrace();
            }
        }
    }

    // Thêm đối tác vào CSDL
    private void insert() {
        if (isValidated()) {
            DoiTac dt = getForm();
            try {
                dtDAO.insert(dt);
                this.fillToTable();
                this.clearForm();
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
                e.printStackTrace();
            }
        }
    }

    // Xoá đối tác khỏi CSDL
    private void delete() {
        if (MsgBox.confirm(this, "Bạn có chắc chắc muốn xoá đối tác này không?")) {
            int maDT = (int) tblDoiTac.getModel().getValueAt(this.row, 0);
            try {
                dtDAO.delete(maDT);
                this.fillToTable();
                this.clearForm();
                MsgBox.alert(this, "Xoá thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xoá thất bại!");
                e.printStackTrace();
            }
        }
    }

    // Cập nhật thông tin đối tác vào CSDL
    private void update() {
        if (isValidated()) {
            DoiTac dt = getForm();
            try {
                dtDAO.update(dt);
                this.fillToTable();
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!");
                e.printStackTrace();
            }
        }
    }

    // Tạo tiêu đề và định dạng bảng
    private void formatTable() {
        String header[] = {"STT", "MÃ ĐỐI TÁC", "TÊN ĐỐI TÁC", "ĐỊA CHỈ", "EMAIL",
            "SỐ ĐIỆN THOẠI", "VAI TRÒ"};
        this.tblModel = new DefaultTableModel(header, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnIndex) {
                if (tblModel.getRowCount() == 0) {
                    return String.class;
                }
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblDoiTac.setModel(tblModel);
        tblDoiTac.removeColumn(tblDoiTac.getColumnModel().getColumn(1));
        tblDoiTac.getColumnModel().getColumn(0).setMaxWidth(40);
    }

}
