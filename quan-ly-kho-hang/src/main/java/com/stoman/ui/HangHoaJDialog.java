/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stoman.ui;

import com.stoman.dao.HangHoaDAO;
import com.stoman.dao.LoaiHangHoaDAO;
import com.stoman.entity.HangHoa;
import com.stoman.entity.LoaiHangHoa;
import com.stoman.utils.Auth;
import com.stoman.utils.MsgBox;
import com.stoman.utils.XNumber;
import java.awt.Point;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MinhNH
 */
public class HangHoaJDialog extends javax.swing.JDialog {

    /**
     * Creates new form HangHoaJDialog
     */
    public HangHoaJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        pnlThanhTieuDe = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        lblThoat = new javax.swing.JLabel();
        pnlThongTinHangHoa = new javax.swing.JPanel();
        lblMaHangHoa = new javax.swing.JLabel();
        lblTenHangHoa = new javax.swing.JLabel();
        lblDonViTinh = new javax.swing.JLabel();
        lblDonGia = new javax.swing.JLabel();
        txtMaHH = new javax.swing.JTextField();
        txtTenHH = new javax.swing.JTextField();
        txtDonViTinh = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JFormattedTextField();
        pnlLoaiHangHoa = new javax.swing.JPanel();
        pnlLstLoaiHangHoa = new javax.swing.JScrollPane();
        lstLHH = new javax.swing.JList<>();
        pnlButtonLoaiHH = new javax.swing.JPanel();
        btnThemList = new javax.swing.JButton();
        btnXoaList = new javax.swing.JButton();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        pnlTimKiem = new javax.swing.JPanel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem2 = new javax.swing.JLabel();
        cboTimKiem = new javax.swing.JComboBox<>();
        pnlDieuHuong = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        pnlTblHangHoa = new javax.swing.JScrollPane();
        tblHangHoa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StoMan - Quản lý hàng hoá");
        setAlwaysOnTop(true);
        setUndecorated(true);

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));
        pnlBackground.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 2, 2, new java.awt.Color(0, 153, 204)));

        pnlThanhTieuDe.setBackground(new java.awt.Color(0, 153, 204));
        pnlThanhTieuDe.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlThanhTieuDeMouseDragged(evt);
            }
        });
        pnlThanhTieuDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlThanhTieuDeMousePressed(evt);
            }
        });

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setText("STOMAN - QUẢN LÝ HÀNG HOÁ");

        lblThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png"))); // NOI18N
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhTieuDeLayout = new javax.swing.GroupLayout(pnlThanhTieuDe);
        pnlThanhTieuDe.setLayout(pnlThanhTieuDeLayout);
        pnlThanhTieuDeLayout.setHorizontalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlThanhTieuDeLayout.setVerticalGroup(
            pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                .addGroup(pnlThanhTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThanhTieuDeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTieuDe))
                    .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        pnlThongTinHangHoa.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongTinHangHoa.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pnlThongTinHangHoa.setForeground(new java.awt.Color(255, 255, 255));

        lblMaHangHoa.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMaHangHoa.setText("Mã hàng hoá");

        lblTenHangHoa.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenHangHoa.setText("Tên hàng hoá");

        lblDonViTinh.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDonViTinh.setText("Đơn vị tính");

        lblDonGia.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDonGia.setText("Đơn giá");

        txtDonGia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));

        pnlLoaiHangHoa.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoaiHangHoa.setLayout(new java.awt.BorderLayout());

        lstLHH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstLHHMouseClicked(evt);
            }
        });
        pnlLstLoaiHangHoa.setViewportView(lstLHH);

        pnlLoaiHangHoa.add(pnlLstLoaiHangHoa, java.awt.BorderLayout.CENTER);

        pnlButtonLoaiHH.setOpaque(false);
        pnlButtonLoaiHH.setLayout(new java.awt.GridLayout(1, 0));

        btnThemList.setText("Thêm");
        btnThemList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemListActionPerformed(evt);
            }
        });
        pnlButtonLoaiHH.add(btnThemList);

        btnXoaList.setText("Xoá");
        btnXoaList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaListActionPerformed(evt);
            }
        });
        pnlButtonLoaiHH.add(btnXoaList);

        pnlLoaiHangHoa.add(pnlButtonLoaiHH, java.awt.BorderLayout.PAGE_END);

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnlChucNang.setLayout(new java.awt.GridLayout(0, 1));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnThem);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/cancel.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnXoa);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/edit-property.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnSua);

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/new-document.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnMoi);

        javax.swing.GroupLayout pnlThongTinHangHoaLayout = new javax.swing.GroupLayout(pnlThongTinHangHoa);
        pnlThongTinHangHoa.setLayout(pnlThongTinHangHoaLayout);
        pnlThongTinHangHoaLayout.setHorizontalGroup(
            pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinHangHoaLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlLoaiHangHoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenHangHoa)
                    .addComponent(lblMaHangHoa)
                    .addComponent(lblDonViTinh)
                    .addComponent(lblDonGia))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDonViTinh, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(txtMaHH)
                    .addComponent(txtTenHH)
                    .addComponent(txtDonGia))
                .addGap(15, 15, 15)
                .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        pnlThongTinHangHoaLayout.setVerticalGroup(
            pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinHangHoaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaHangHoa)
                    .addComponent(txtMaHH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenHangHoa)
                    .addComponent(txtTenHH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDonViTinh)
                    .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pnlThongTinHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDonGia)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
            .addComponent(pnlLoaiHangHoa, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(pnlChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlTimKiem.setOpaque(false);

        lblTimKiem.setText("Tìm kiếm");

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        lblTimKiem2.setText("theo");

        cboTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTimKiem2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pnlTimKiemLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboTimKiem, txtTimKiem});

        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem2)
                    .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem))
                .addGap(5, 5, 5))
        );

        pnlDieuHuong.setOpaque(false);
        pnlDieuHuong.setLayout(new java.awt.GridLayout(1, 0));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-start.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnFirst);

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-left-24.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnPrev);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/double-right.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/stoman/icons/skip-to-end.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        pnlDieuHuong.add(btnLast);

        pnlTblHangHoa.setOpaque(false);

        tblHangHoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hàng hoá", "Tên hàng hoá", "Đơn vị tính", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHangHoa.setOpaque(false);
        tblHangHoa.setRowHeight(25);
        tblHangHoa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblHangHoa.getTableHeader().setReorderingAllowed(false);
        tblHangHoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHangHoaMouseClicked(evt);
            }
        });
        pnlTblHangHoa.setViewportView(tblHangHoa);

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThanhTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(separator)
                    .addComponent(pnlTblHangHoa)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDieuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlThongTinHangHoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addComponent(pnlThanhTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pnlThongTinHangHoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDieuHuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(pnlTblHangHoa, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHangHoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHangHoaMouseClicked
        this.row = tblHangHoa.getSelectedRow();
        this.edit();
    }//GEN-LAST:event_tblHangHoaMouseClicked

    private void lstLHHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstLHHMouseClicked
        // TODO add your handling code here:
        cboTimKiem.setSelectedIndex(0);
        this.fillToTable();
        this.clearForm();
        this.updateStatus();
    }//GEN-LAST:event_lstLHHMouseClicked

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemListActionPerformed
        // TODO add your handling code here:
        insertLHH();
    }//GEN-LAST:event_btnThemListActionPerformed

    private void btnXoaListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaListActionPerformed
        // TODO add your handling code here:
        deleteLHH();
    }//GEN-LAST:event_btnXoaListActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lblThoatMouseClicked

    private void lblThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseEntered
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close.png")));
    }//GEN-LAST:event_lblThoatMouseEntered

    private void lblThoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseExited
        // TODO add your handling code here:
        lblThoat.setIcon(new ImageIcon(getClass().getResource("/com/stoman/icons/close(2).png")));
    }//GEN-LAST:event_lblThoatMouseExited

    private void pnlThanhTieuDeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlThanhTieuDeMousePressed
        initialClick = evt.getPoint();
    }//GEN-LAST:event_pnlThanhTieuDeMousePressed

    private void pnlThanhTieuDeMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlThanhTieuDeMouseDragged
        // Vị trí cửa sổ hiện tại   
        int thisX = getLocation().x;
        int thisY = getLocation().y;

        // Xác định mức độ di chuyển của chuột từ lần nhấp chuột
        int xMoved = evt.getX() - initialClick.x;
        int yMoved = evt.getY() - initialClick.y;

        // Di chuyển cửa sổ
        int x = thisX + xMoved;
        int y = thisY + yMoved;
        setLocation(x, y);
    }//GEN-LAST:event_pnlThanhTieuDeMouseDragged

    private void cboTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimKiemActionPerformed
        // TODO add your handling code here:
        if (!lstLHH.isSelectionEmpty()) {
            txtTimKiem.setText("");
            fillToTable();
            clearForm();
        }
    }//GEN-LAST:event_cboTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        if (!lstLHH.isSelectionEmpty()) {
            fillToTable();
            clearForm();
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HangHoaJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HangHoaJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HangHoaJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HangHoaJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HangHoaJDialog dialog = new HangHoaJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemList;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaList;
    private javax.swing.JComboBox<String> cboTimKiem;
    private javax.swing.JLabel lblDonGia;
    private javax.swing.JLabel lblDonViTinh;
    private javax.swing.JLabel lblMaHangHoa;
    private javax.swing.JLabel lblTenHangHoa;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTimKiem2;
    private javax.swing.JList<LoaiHangHoa> lstLHH;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlButtonLoaiHH;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlDieuHuong;
    private javax.swing.JPanel pnlLoaiHangHoa;
    private javax.swing.JScrollPane pnlLstLoaiHangHoa;
    private javax.swing.JScrollPane pnlTblHangHoa;
    private javax.swing.JPanel pnlThanhTieuDe;
    private javax.swing.JPanel pnlThongTinHangHoa;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JSeparator separator;
    private javax.swing.JTable tblHangHoa;
    private javax.swing.JFormattedTextField txtDonGia;
    private javax.swing.JTextField txtDonViTinh;
    private javax.swing.JTextField txtMaHH;
    private javax.swing.JTextField txtTenHH;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private HangHoaDAO hhDAO = new HangHoaDAO();
    private LoaiHangHoaDAO lhhDAO = new LoaiHangHoaDAO();
    private int row = -1;
    private Point initialClick;
    private String numPattern = "#,##0";
    private DefaultTableModel tblModel;

    private DefaultListModel<LoaiHangHoa> lstModel;

    void init() {
        this.setLocationRelativeTo(null);
        this.lstModel = new DefaultListModel<>();

        String header[] = {"MÃ HH", "TÊN HH", "ĐƠN GIÁ", "ĐVT"};
        this.tblModel = new DefaultTableModel(header, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
            
            @Override
            public Class getColumnClass(int columnIndex) {
                if (getValueAt(0, columnIndex) == null) {
                    return Object.class;
                }
                return getValueAt(0, columnIndex).getClass();
            }
        };
        tblHangHoa.setModel(tblModel);
        tblHangHoa.setAutoCreateRowSorter(true);
        tblHangHoa.getColumnModel().getColumn(0).setPreferredWidth(125);
        tblHangHoa.getColumnModel().getColumn(1).setPreferredWidth(464);
        tblHangHoa.getColumnModel().getColumn(2).setPreferredWidth(125);
        tblHangHoa.getColumnModel().getColumn(3).setPreferredWidth(125);
        tblHangHoa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        this.fillToComboBox();
        this.fillToList();
        this.updateStatus();
    }

    // Đổ dữ liệu vào bảng.
    void fillToTable() {
        tblModel.setRowCount(0);
        int maLHH = lstLHH.getSelectedValue().getMaLHH();
        String keyword = txtTimKiem.getText();
        int headerIndex = cboTimKiem.getSelectedIndex();
        try {
            List<HangHoa> list = hhDAO.selectByKeyword(maLHH, keyword, headerIndex);
            for (HangHoa hh : list) {
                Object[] row = {
                    hh.getMaHH(),
                    hh.getTenHH(),
                    hh.getDonGia(),
                    hh.getDonViTinh()
                };
                tblModel.addRow(row);
            }
            tblHangHoa.setModel(tblModel);
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    //Đổ dữ liệu vào List.
    void fillToList() {
        lstModel.removeAllElements();
        try {
            List<LoaiHangHoa> list = lhhDAO.selectAll();
            for (LoaiHangHoa lhh : list) {
                lstModel.addElement(lhh);
            }
            lstLHH.setModel(lstModel);
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }
    
    // Đổ tên bảng vào ComboBox tìm kiếm
    void fillToComboBox() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTimKiem.getModel();
        model.removeAllElements();
        for(int i = 0; i < tblHangHoa.getColumnCount(); i++) {
            model.addElement(tblHangHoa.getColumnName(i));
        }
    }

    // Lấy dữ liệu từ form
    HangHoa getForm() {
        HangHoa hh = new HangHoa();
        hh.setMaHH(txtMaHH.getText());
        hh.setTenHH(txtTenHH.getText().trim());
        hh.setDonViTinh(txtDonViTinh.getText());
        hh.setDonGia(XNumber.toDouble(txtDonGia.getText(), numPattern));
        hh.setMaLHH(lstLHH.getSelectedValue().getMaLHH());
        return hh;
    }
    
    // Làm mới form
    void clearForm() {
        this.setForm(new HangHoa());
        this.row = -1;
        tblHangHoa.clearSelection();
        this.updateStatus();
    }

    // Đưa dữ liệu lên form
    void setForm(HangHoa hh) {
        txtMaHH.setText(hh.getMaHH());
        txtTenHH.setText(hh.getTenHH());
        txtDonViTinh.setText(hh.getDonViTinh());
        txtDonGia.setText(XNumber.toString(hh.getDonGia(), numPattern));
    }

    //Code phương thức updateStatus.
    void updateStatus() {
        boolean isSelectedList = !lstLHH.isSelectionEmpty();
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblHangHoa.getRowCount() - 1);

        // Chọn hàng trên bảng
        if (edit) {
            tblHangHoa.setRowSelectionInterval(row, row);
        }

        txtMaHH.setEditable(!edit && isSelectedList);
        btnThem.setEnabled(!edit && isSelectedList);
        btnSua.setEnabled(edit && isSelectedList);
        btnXoa.setEnabled(edit && isSelectedList);
        btnMoi.setEnabled(isSelectedList);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }
    
    void edit() {
        String maHH = (String) tblHangHoa.getValueAt(this.row, 0);
        HangHoa hh = hhDAO.selectByID(maHH);
        this.setForm(hh);
        this.updateStatus();
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < (tblHangHoa.getRowCount() - 1)) {
            this.row++;
            this.edit();
        }
    }

    void last() {
        this.row = tblHangHoa.getRowCount() - 1;
        this.edit();
    }
    
    void insertLHH() {
        String tenLHH = MsgBox.prompt(this, "Nhập tên loại hàng hoá mới:");
        if (tenLHH != null && !tenLHH.isEmpty()) {
            LoaiHangHoa lhh = new LoaiHangHoa(tenLHH);
            try {
                lhhDAO.insert(lhh);
                this.fillToList();
                this.clearForm();
                tblModel.setRowCount(0);
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
                e.printStackTrace();
            }
        }
    }

    void deleteLHH() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xoá loại đối tác!");
        } else if (lstLHH.isSelectionEmpty()) {
            MsgBox.alert(this, "Chưa chọn loại hàng hoá!");
        } else if (MsgBox.confirm(this, "Bạn chắc chắn muốn xoá loại hàng hoá này?")) {
            LoaiHangHoa lhh = lstLHH.getSelectedValue();
            try {
                lhhDAO.delete(lhh.getMaLHH());
                this.fillToList();
                this.clearForm();
                tblModel.setRowCount(0);
                MsgBox.alert(this, "Xoá thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xoá thất bại!");
                e.printStackTrace();
            }
        }
    }

    boolean isValidated() {
        if (txtMaHH.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập mã hàng hoá!");
            txtMaHH.requestFocus();
        } else if (txtTenHH.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập tên hàng hoá!");
            txtMaHH.requestFocus();
        } else if (txtDonGia.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập đơn giá!");
            txtMaHH.requestFocus();
        } else if (txtDonViTinh.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập đơn vị tính!");
            txtMaHH.requestFocus();
        } else {
            return true;
        }
        return false;
    }

    void insert() {
        if (isValidated()) {
            HangHoa dt = getForm();
            try {
                hhDAO.insert(dt);
                this.fillToTable();
                this.clearForm();
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
                e.printStackTrace();
            }
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xoá hàng hoá!");
        } else if (MsgBox.confirm(this, "Bạn có chắc chắc muốn xoá hàng hoá này?")) {
            String maHH = (String) tblHangHoa.getValueAt(this.row, 0);
            try {
                hhDAO.delete(maHH);
                this.fillToTable();
                this.clearForm();
                MsgBox.alert(this, "Xoá thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xoá thất bại!");
                e.printStackTrace();
            }
        }
    }
    
    void update() {
        if (isValidated()) {
            HangHoa hh = getForm();
            try {
                hhDAO.update(hh);
                this.fillToTable();
                this.updateStatus();
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!");
                e.printStackTrace();
            }
        }
    }
}
